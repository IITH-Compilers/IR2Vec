kernel,cf,PCA1,PCA2,PCA3,PCA4,PCA5,PCA6,PCA7,runtime_Fermi,runtime_Kepler,runtime_Cypress,runtime_Tahiti,src,seq
blackscholes,1,1.99491837832,-0.8104015248122209,-2.20636995261335,3.2174862416944503,-2.19314264640448,2.3749250631630896,0.174606624855777,1321696.0,1381120.0,1783889.0,975555.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, float f, float g, unsigned int h) {
  for (unsigned int i = get_global_id(0); i < h; i += get_global_size(0)) {
    float j = sqrt(e[i]);
    float k = (log(c[i] / d[i]) + (f + 0.5f * g * g) * e[i]) / (g * j);
    float l = k - g * j;
    float m = A(k);
    float n = A(l);

    float o = exp(-f * e[i]);
    a[i] = (c[i] * m - d[i] * o * n);
    b[i] = (d[i] * o * (1.0f - n) - c[i] * (1.0f - m));
  }
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  58   1  80   9   1  73
  11   1  58   1  80   9   1  76  11   1  80   1  78  11   1  80   1  82
  11   1 116   1  93   1  89   8   1 125   0   2  81   1   7 116   1  93
   1  90   1  28   1  83   7  15   8  26   1  90   1  27   1  89  26   1
  90   1  10  28   1  84   7  15   8   8   1 125   0   2   2  80   1  94
   1  28   1 110   7  76  51  90  52   8  26   0   2   2  80   1  95   1
  28   1   7  96 101  82   7  69  51  90  52   1  14   1  73  51  90  52
   8   1  10   1   7  78   1  10   1  15  13  20  78   1   9   1  82   1
   9   1  82   8   1   9   1  76  51  90  52   8   1  14   1   7  82   1
   9   1  94   8  26   0   2   2  80   1  96   1  28   1  95   1  12   1
  82   1   9   1  94  26   0   2   2  80   1  99   1  28   1  31   7  95
   8  26   0   2   2  80   1 100   1  28   1  31   7  96   8  26   0   0
   2   2  80   1 101   1  28   1  76 122 102   7  12  78   1   9   1  76
  51  90  52   8  26   0   2   2  63  51  90  52   1  28   1   7  69  51
  90  52   1   9   1  99   1  12   1  73  51  90  52   1   9   1 101   1
   9   1 100   8  26   0   2   2  65  51  90  52   1  28   1   7  73  51
  90  52   1   9   1 101   1   9   1   7  16  13  15  78   1  12   1 100
   8   1  12   1  69  51  90  52   1   9   1   7  16  13  15  78   1  12
   1  99   8   8  26   0   2 127   0 127]"
blackscholes,2,2.1337160492024,-1.49306832046454,-1.28652036203678,3.0751948466949903,-0.3817149150183661,0.677803799385881,0.96015903056432,1238176.0,1222336.0,1849444.0,962963.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, float f, float g, unsigned int h) {
  for (unsigned int i = get_global_id(0); i < h; i += get_global_size(0)) {
    float j = sqrt(e[i]);
    float k = (log(c[i] / d[i]) + (f + 0.5f * g * g) * e[i]) / (g * j);
    float l = k - g * j;
    float m = A(k);
    float n = A(l);

    float o = exp(-f * e[i]);
    a[i] = (c[i] * m - d[i] * o * n);
    b[i] = (d[i] * o * (1.0f - n) - c[i] * (1.0f - m));
  }
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  58   1  80   9   1  73
  11   1  58   1  80   9   1  76  11   1  80   1  78  11   1  80   1  82
  11   1 116   1  93   1  89   8   1 125   0   2  81   1   7 116   1  93
   1  90   1  28   1  83   7  15   8  26   1  90   1  27   1  89  26   1
  90   1  10  28   1  84   7  15   8   8   1 125   0   2   2  80   1  94
   1  28   1 110   7  76  51  90  52   8  26   0   2   2  80   1  95   1
  28   1   7  96 101  82   7  69  51  90  52   1  14   1  73  51  90  52
   8   1  10   1   7  78   1  10   1  15  13  20  78   1   9   1  82   1
   9   1  82   8   1   9   1  76  51  90  52   8   1  14   1   7  82   1
   9   1  94   8  26   0   2   2  80   1  96   1  28   1  95   1  12   1
  82   1   9   1  94  26   0   2   2  80   1  99   1  28   1  31   7  95
   8  26   0   2   2  80   1 100   1  28   1  31   7  96   8  26   0   0
   2   2  80   1 101   1  28   1  76 122 102   7  12  78   1   9   1  76
  51  90  52   8  26   0   2   2  63  51  90  52   1  28   1   7  69  51
  90  52   1   9   1  99   1  12   1  73  51  90  52   1   9   1 101   1
   9   1 100   8  26   0   2   2  65  51  90  52   1  28   1   7  73  51
  90  52   1   9   1 101   1   9   1   7  16  13  15  78   1  12   1 100
   8   1  12   1  69  51  90  52   1   9   1   7  16  13  15  78   1  12
   1  99   8   8  26   0   2 127   0 127]"
blackscholes,4,2.17290312521079,-1.57493825195129,-1.28206727986246,3.20005537957327,-0.421222539968932,0.6786394156726571,1.00501717851786,1152704.0,1179008.0,1876667.0,1106370.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, float f, float g, unsigned int h) {
  for (unsigned int i = get_global_id(0); i < h; i += get_global_size(0)) {
    float j = sqrt(e[i]);
    float k = (log(c[i] / d[i]) + (f + 0.5f * g * g) * e[i]) / (g * j);
    float l = k - g * j;
    float m = A(k);
    float n = A(l);

    float o = exp(-f * e[i]);
    a[i] = (c[i] * m - d[i] * o * n);
    b[i] = (d[i] * o * (1.0f - n) - c[i] * (1.0f - m));
  }
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  58   1  80   9   1  73
  11   1  58   1  80   9   1  76  11   1  80   1  78  11   1  80   1  82
  11   1 116   1  93   1  89   8   1 125   0   2  81   1   7 116   1  93
   1  90   1  28   1  83   7  15   8  26   1  90   1  27   1  89  26   1
  90   1  10  28   1  84   7  15   8   8   1 125   0   2   2  80   1  94
   1  28   1 110   7  76  51  90  52   8  26   0   2   2  80   1  95   1
  28   1   7  96 101  82   7  69  51  90  52   1  14   1  73  51  90  52
   8   1  10   1   7  78   1  10   1  15  13  20  78   1   9   1  82   1
   9   1  82   8   1   9   1  76  51  90  52   8   1  14   1   7  82   1
   9   1  94   8  26   0   2   2  80   1  96   1  28   1  95   1  12   1
  82   1   9   1  94  26   0   2   2  80   1  99   1  28   1  31   7  95
   8  26   0   2   2  80   1 100   1  28   1  31   7  96   8  26   0   0
   2   2  80   1 101   1  28   1  76 122 102   7  12  78   1   9   1  76
  51  90  52   8  26   0   2   2  63  51  90  52   1  28   1   7  69  51
  90  52   1   9   1  99   1  12   1  73  51  90  52   1   9   1 101   1
   9   1 100   8  26   0   2   2  65  51  90  52   1  28   1   7  73  51
  90  52   1   9   1 101   1   9   1   7  16  13  15  78   1  12   1 100
   8   1  12   1  69  51  90  52   1   9   1   7  16  13  15  78   1  12
   1  99   8   8  26   0   2 127   0 127]"
blackscholes,8,2.14288220522234,-1.57551590017122,-1.20355013288698,3.18817337986265,-0.361774734981938,0.6725990150555639,0.983009625955024,1148128.0,1189728.0,1892889.0,1116445.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, float f, float g, unsigned int h) {
  for (unsigned int i = get_global_id(0); i < h; i += get_global_size(0)) {
    float j = sqrt(e[i]);
    float k = (log(c[i] / d[i]) + (f + 0.5f * g * g) * e[i]) / (g * j);
    float l = k - g * j;
    float m = A(k);
    float n = A(l);

    float o = exp(-f * e[i]);
    a[i] = (c[i] * m - d[i] * o * n);
    b[i] = (d[i] * o * (1.0f - n) - c[i] * (1.0f - m));
  }
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  58   1  80   9   1  73
  11   1  58   1  80   9   1  76  11   1  80   1  78  11   1  80   1  82
  11   1 116   1  93   1  89   8   1 125   0   2  81   1   7 116   1  93
   1  90   1  28   1  83   7  15   8  26   1  90   1  27   1  89  26   1
  90   1  10  28   1  84   7  15   8   8   1 125   0   2   2  80   1  94
   1  28   1 110   7  76  51  90  52   8  26   0   2   2  80   1  95   1
  28   1   7  96 101  82   7  69  51  90  52   1  14   1  73  51  90  52
   8   1  10   1   7  78   1  10   1  15  13  20  78   1   9   1  82   1
   9   1  82   8   1   9   1  76  51  90  52   8   1  14   1   7  82   1
   9   1  94   8  26   0   2   2  80   1  96   1  28   1  95   1  12   1
  82   1   9   1  94  26   0   2   2  80   1  99   1  28   1  31   7  95
   8  26   0   2   2  80   1 100   1  28   1  31   7  96   8  26   0   0
   2   2  80   1 101   1  28   1  76 122 102   7  12  78   1   9   1  76
  51  90  52   8  26   0   2   2  63  51  90  52   1  28   1   7  69  51
  90  52   1   9   1  99   1  12   1  73  51  90  52   1   9   1 101   1
   9   1 100   8  26   0   2   2  65  51  90  52   1  28   1   7  73  51
  90  52   1   9   1 101   1   9   1   7  16  13  15  78   1  12   1 100
   8   1  12   1  69  51  90  52   1   9   1   7  16  13  15  78   1  12
   1  99   8   8  26   0   2 127   0 127]"
mt,1,1.40456463787258,1.19175347862283,0.0602572498972289,-1.76033344930199,-0.3719550095062771,-0.167573917489858,0.31307474217602005,96832.0,93568.0,350556.0,185185.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mt,2,1.29335758579005,1.41446444975954,0.0589896392503311,-1.90756823468981,-0.40693996394116,-0.0965599214238778,0.28625662383108297,86336.0,84320.0,291666.0,133630.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mt,4,1.37177121910872,1.40245078434651,-0.017521549166098,-1.96545651606443,-0.4912175663202821,-0.141432067029927,0.39089973318785,83296.0,88704.0,198111.0,96593.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mt,8,1.41781101445809,1.3940889958849698,-0.060585637185872,-2.00419851010871,-0.5372516515942101,-0.169625629726802,0.449993941454444,83392.0,99520.0,209111.0,95407.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mt,16,1.44229535514673,1.3890873259545002,-0.0838859366740794,-2.02661443077573,-0.5612054772509809,-0.186063811847964,0.481283145544835,97664.0,105280.0,244222.0,85185.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mt,32,-3.26781931762563,5.6161261439463495,4.31344621573267,2.67881935535888,1.6710202871713,2.2880097488563,0.369863717942,102144.0,114528.0,245334.0,92296.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,1,1.47152535672636,0.7643359632116931,-0.520719737473145,-3.06680493549265,0.5955771120701391,0.7258279099059141,-0.521079993067481,107456.0,103360.0,293333.0,158222.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,2,1.40049560000704,0.905123053672565,-0.485392551798821,-3.19400466915276,0.616469574538031,0.7691035063308571,-0.555922565770207,89696.0,78080.0,262555.0,111852.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,4,1.49821533701116,0.9013554965703092,-0.604499515237305,-3.24269303777871,0.476653128537405,0.716194733445119,-0.399105485236599,80064.0,77440.0,211333.0,81630.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,8,1.5615655978418002,0.8954423557517142,-0.676143481575471,-3.2870701881606297,0.395292826480663,0.6769243389404461,-0.30260997887996505,75264.0,79552.0,236889.0,75555.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,16,1.59680091578826,0.8904691788124649,-0.716503422539208,-3.31683206921538,0.351523501683302,0.6519488259299511,-0.248510466847332,91936.0,91200.0,185889.0,81185.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
mtLocal,32,-3.5773070805118103,6.25296433427084,4.55502879770865,4.52067842160856,0.360682710081573,1.79679257426803,1.01678366921003,131904.0,122624.0,171445.0,82666.0,"__kernel void A(__global float4* a, __global float4* b, __local float4* c) {
  uint d = get_global_size(0);

  uint e = get_group_id(0);
  uint f = get_group_id(1);

  uint g = get_num_groups(0);

  uint h = e;
  uint i = (e + f) % g;

  uint j = get_local_id(0);
  uint k = get_local_id(1);

  uint l = get_local_size(0);

  uint m = i * l + j;
  uint n = h * l + k;
  int o = m + (n)*d * 4;

  int p = k * l * 4 + j;
  c[p] = b[o];
  c[p + l] = b[o + d];
  c[p + l * 2] = b[o + d * 2];
  c[p + l * 3] = b[o + d * 3];

  barrier(1);

  m = h * l + j;
  n = i * l + k;
  int q = m + (n)*d * 4;

  p = j * l * 4 + k;
  float4 r = c[p];
  float4 s = c[p + l];
  float4 t = c[p + l * 2];
  float4 u = c[p + l * 3];

  a[q] = (float4)(rx, sx, tx, ux);
  a[q + d] = (float4)(ry, sy, ty, uy);
  a[q + d * 2] = (float4)(rz, sz, tz, uz);
  a[q + d * 3] = (float4)(rw, sw, tw, uw);
}","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1  60   1  80  19   9   1  69   8   1 125   0   2
 115   1  73   1  28   1  84   7  15   8  26   0   0   2 115   1  76   1
  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26
   0   2 115   1  78   1  28   1  82  76 111  54  82 104 101 113 102  54
  90  73   7  16   8  26   0   0   2 115   1  82   1  28   1  87   7  15
   8  26   0   0   2 115   1  89   1  28   1  76  26   0   2 115   1  90
   1  28   1   7  76   1  10   1  78   8   1   4   1  82  26   0   0   2
 115   1  94   1  28   1  85   7  15   8  26   0   2 115   1  95   1  28
   1  85   7  16   8  26   0   0   2 115   1  96   1  28   1  86   7  15
   8  26   0   0   2 115   1  99   1  28   1  90   1   9   1  96   1  10
   1  94  26   0   2 115   1 100   1  28   1  89   1   9   1  96   1  10
   1  95  26   0   2  93   1 101   1  28   1  99   1  10   1   7 100   8
   9  73   1   9   1  19  26   0   0   2  93   1 102   1  28   1  95   1
   9   1  96   1   9   1  19   1  10   1  94  26   0   2  69  51 102  52
   1  28   1  65  51 101  52  26   0   2  69  51 102   1  10   1  96  52
   1  28   1  65  51 101   1  10   1  73  52  26   0   2  69  51 102   1
  10   1  96   1   9   1  17  52   1  28   1  65  51 101   1  10   1  73
   1   9   1  17  52  26   0   2  69  51 102   1  10   1  96   1   9   1
  18  52   1  28   1  65  51 101   1  10   1  73   1   9   1  18  52  26
   0   0   2  66   7  16   8  26   0   0   2  99   1  28   1  89   1   9
   1  96   1  10   1  94  26   0   2 100   1  28   1  90   1   9   1  96
   1  10   1  95  26   0   2  93   1 103   1  28   1  99   1  10   1   7
 100   8   9  73   1   9   1  19  26   0   0   2 102   1  28   1  94   1
   9   1  96   1   9   1  19   1  10   1  95  26   0   2  80  19   1 104
   1  28   1  69  51 102  52  26   0   2  80  19   1 107   1  28   1  69
  51 102   1  10   1  96  52  26   0   2  80  19   1 111   1  28   1  69
  51 102   1  10   1  96   1   9   1  17  52  26   0   2  80  19   1 113
   1  28   1  69  51 102   1  10   1  96   1   9   1  18  52  26   0   0
   2  63  51 103  52   1  28   1   7  80  19   8   7 104 122  11   1 107
 122  11   1 111 122  11   1 113 122   8  26   0   2  63  51 103   1  10
   1  73  52   1  28   1   7  80  19   8   7 104 123  11   1 107 123  11
   1 111 123  11   1 113 123   8  26   0   2  63  51 103   1  10   1  73
   1   9   1  17  52   1  28   1   7  80  19   8   7 104 124  11   1 107
 124  11   1 111 124  11   1 113 124   8  26   0   2  63  51 103   1  10
   1  73   1   9   1  18  52   1  28   1   7  80  19   8   7 104 120  11
   1 107 120  11   1 111 120  11   1 113 120   8  26   0 127]"
sgemm,1,0.40232125338684,2.0449245630501003,-0.659624200789833,-0.106640283024484,-1.44520281465026,1.04646286981416,-0.27606681614752804,18125632.0,15982656.0,36923444.0,7105037.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
sgemm,2,0.579661617965198,1.81596030984348,-0.8762326975850699,-0.42126228104609104,-1.41830371568348,0.645886673104663,-0.29252317617609097,11623872.0,13645184.0,27897888.0,4001926.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
sgemm,4,0.635604371390106,1.63039370974476,-1.12506129270611,-0.666505626821015,-1.34075661726879,0.116496038787924,-0.3627370179589821,9461664.0,11999264.0,23319000.0,3062370.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
sgemm,8,0.464646851727666,1.51643214484511,-1.47630947525783,-0.785557121703241,-1.18897742713974,-0.631247509950093,-0.585953209757895,6347584.0,11002048.0,21034111.0,2666519.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
sgemm,16,-0.109434478149446,1.50747978863296,-2.08510481868727,-0.718419346187257,-0.9164957681234308,-1.83659929618832,-1.1261184168459,5347584.0,10060896.0,21943777.0,2459556.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
sgemm,32,-6.30967925425571,5.9725161159721685,2.69400204883302,3.04135714834556,3.58611449744737,-2.70870638269926,-2.09443650548643,4899872.0,13442624.0,26982333.0,2656296.0,"__kernel void A(__global const float* a, int b, __global const float* c, int d, __global float* e, int f, int g, float h, float i) {
  float j = 0.0f;
  int k = get_global_id(0);
  int l = get_global_id(1);

  for (int m = 0; m < g; ++m) {
    float n = a[k + m * b];
    float o = c[l + m * d];
    j += n * o;
  }
  e[k + l * f] = e[k + l * f] * i + h * j;
}
","[ 59   1 118   1  31   7  58   1  71   1  80   9   1  63  11   1  93   1
  65  11   1  58   1  71   1  80   9   1  69  11   1  93   1  73  11   1
  58   1  80   9   1  76  11   1  93   1  78  11   1  93   1  82  11   1
  80   1  89  11   1  80   1  90   8   1 125   0   2  80   1  94   1  28
   1  15  13  15  78  26   0   2  93   1  95   1  28   1  83   7  15   8
  26   0   2  93   1  96   1  28   1  83   7  16   8  26   0   0   2  81
   1   7  93   1  99   1  28   1  15  26   1  99   1  27   1  82  26   1
  10  10  99   8   1 125   0   2   2  80   1 100   1  28   1  63  51  95
   1  10   1  99   1   9   1  65  52  26   0   2   2  80   1 101   1  28
   1  69  51  96   1  10   1  99   1   9   1  73  52  26   0   2   2  94
   1  10  28   1 100   1   9   1 101  26   0   2 127   0   2  76  51  95
   1  10   1  96   1   9   1  78  52   1  28   1  76  51  95   1  10   1
  96   1   9   1  78  52   1   9   1  90   1  10   1  89   1   9   1  94
  26   0 127   0]"
spmv,1,2.23253786959644,-1.7674464234251002,1.07028718776614,1.27916960856313,0.28834636177258505,-1.63353017763304,0.6320953414693321,36224.0,52896.0,82000.0,64592.0,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  58   1  93   9   1  73
  11   1  58   1  80   9   1  76  11   1  71   1  93   1  78  11   1  57
   1  93   9   1  82  11   1  57   1  93   9   1  89   8   1 125   0   2
  93   1  90   1  28   1  83   7  15   8  26   0   0   2  91   1   7  90
   1  27   1  78   8   1 125   0   2   2  80   1  94   1  28   1  15  13
  15  78  26   0   0   2   2  93   1  95   1  28   1  89  51  90   1  14
   1  18  17  52  26   0   0   2   2  81   1   7  93   1  96   1  28   1
  15  26   1  96   1  27   1  95  26   1  96  10  10   8   1 125   0   2
   2   2  93   1  99   1  28   1  82  51  96  52   1  10   1  90  26   0
   2   2   2  93   1 100   1  28   1  69  51  99  52  26   0   0   2   2
   2  80   1 101   1  28   1  65  51  99  52  26   0   2   2   2  80   1
 102   1  28   1  76  51 100  52  26   0   0   2   2   2  94   1  10  28
   1 101   1   9   1 102  26   0   2   2 127   0   0   2   2  63  51  73
  51  90  52  52   1  28   1  94  26   0   2 127   0 127   0]"
spmv,2,2.02187223030781,-1.86988640618242,1.05024659343213,1.26176416461435,0.199574033603089,-1.77234361059171,0.532659639489538,57056.0,97664.0,130778.0,105926.0,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  58   1  93   9   1  73
  11   1  58   1  80   9   1  76  11   1  71   1  93   1  78  11   1  57
   1  93   9   1  82  11   1  57   1  93   9   1  89   8   1 125   0   2
  93   1  90   1  28   1  83   7  15   8  26   0   0   2  91   1   7  90
   1  27   1  78   8   1 125   0   2   2  80   1  94   1  28   1  15  13
  15  78  26   0   0   2   2  93   1  95   1  28   1  89  51  90   1  14
   1  18  17  52  26   0   0   2   2  81   1   7  93   1  96   1  28   1
  15  26   1  96   1  27   1  95  26   1  96  10  10   8   1 125   0   2
   2   2  93   1  99   1  28   1  82  51  96  52   1  10   1  90  26   0
   2   2   2  93   1 100   1  28   1  69  51  99  52  26   0   0   2   2
   2  80   1 101   1  28   1  65  51  99  52  26   0   2   2   2  80   1
 102   1  28   1  76  51 100  52  26   0   0   2   2   2  94   1  10  28
   1 101   1   9   1 102  26   0   2   2 127   0   0   2   2  63  51  73
  51  90  52  52   1  28   1  94  26   0   2 127   0 127   0]"
spmv,4,1.60099637474841,-2.07511024274626,1.0101949088961,1.22605231146708,0.0223503047608319,-2.05074545557603,0.33395320572078696,96864.0,158976.0,227666.0,184149.0,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  58   1  93   9   1  73
  11   1  58   1  80   9   1  76  11   1  71   1  93   1  78  11   1  57
   1  93   9   1  82  11   1  57   1  93   9   1  89   8   1 125   0   2
  93   1  90   1  28   1  83   7  15   8  26   0   0   2  91   1   7  90
   1  27   1  78   8   1 125   0   2   2  80   1  94   1  28   1  15  13
  15  78  26   0   0   2   2  93   1  95   1  28   1  89  51  90   1  14
   1  18  17  52  26   0   0   2   2  81   1   7  93   1  96   1  28   1
  15  26   1  96   1  27   1  95  26   1  96  10  10   8   1 125   0   2
   2   2  93   1  99   1  28   1  82  51  96  52   1  10   1  90  26   0
   2   2   2  93   1 100   1  28   1  69  51  99  52  26   0   0   2   2
   2  80   1 101   1  28   1  65  51  99  52  26   0   2   2   2  80   1
 102   1  28   1  76  51 100  52  26   0   0   2   2   2  94   1  10  28
   1 101   1   9   1 102  26   0   2   2 127   0   0   2   2  63  51  73
  51  90  52  52   1  28   1  94  26   0   2 127   0 127   0]"
spmv,8,0.7591346199436351,-2.4853107051213,0.9300126121263051,1.15441962314743,-0.332157788975889,-2.60743443337163,-0.0636118609216086,168288.0,257216.0,411222.0,329926.0,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  58   1  93   9   1  73
  11   1  58   1  80   9   1  76  11   1  71   1  93   1  78  11   1  57
   1  93   9   1  82  11   1  57   1  93   9   1  89   8   1 125   0   2
  93   1  90   1  28   1  83   7  15   8  26   0   0   2  91   1   7  90
   1  27   1  78   8   1 125   0   2   2  80   1  94   1  28   1  15  13
  15  78  26   0   0   2   2  93   1  95   1  28   1  89  51  90   1  14
   1  18  17  52  26   0   0   2   2  81   1   7  93   1  96   1  28   1
  15  26   1  96   1  27   1  95  26   1  96  10  10   8   1 125   0   2
   2   2  93   1  99   1  28   1  82  51  96  52   1  10   1  90  26   0
   2   2   2  93   1 100   1  28   1  69  51  99  52  26   0   0   2   2
   2  80   1 101   1  28   1  65  51  99  52  26   0   2   2   2  80   1
 102   1  28   1  76  51 100  52  26   0   0   2   2   2  94   1  10  28
   1 101   1   9   1 102  26   0   2   2 127   0   0   2   2  63  51  73
  51  90  52  52   1  28   1  94  26   0   2 127   0 127   0]"
spmv,16,-0.924643342065095,-3.3055876305770804,0.769607094288823,1.01104765958076,-1.04120569709807,-3.72075490113527,-0.8588181227571461,292992.0,406592.0,736333.0,590963.0,"__kernel void A(__global float* a, __global float* b, __global int* c, __global int* d, __global float* e, const int f, __constant int* g, __constant int* h) {
  int i = get_global_id(0);

  if (i < f) {
    float j = 0.0f;

    int k = h[i / 32];

    for (int l = 0; l < k; l++) {
      int m = g[l] + i;
      int n = c[m];

      float o = b[m];
      float p = e[n];

      j += o * p;
    }

    a[d[i]] = j;
  }
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  58   1  93   9   1  73
  11   1  58   1  80   9   1  76  11   1  71   1  93   1  78  11   1  57
   1  93   9   1  82  11   1  57   1  93   9   1  89   8   1 125   0   2
  93   1  90   1  28   1  83   7  15   8  26   0   0   2  91   1   7  90
   1  27   1  78   8   1 125   0   2   2  80   1  94   1  28   1  15  13
  15  78  26   0   0   2   2  93   1  95   1  28   1  89  51  90   1  14
   1  18  17  52  26   0   0   2   2  81   1   7  93   1  96   1  28   1
  15  26   1  96   1  27   1  95  26   1  96  10  10   8   1 125   0   2
   2   2  93   1  99   1  28   1  82  51  96  52   1  10   1  90  26   0
   2   2   2  93   1 100   1  28   1  69  51  99  52  26   0   0   2   2
   2  80   1 101   1  28   1  65  51  99  52  26   0   2   2   2  80   1
 102   1  28   1  76  51 100  52  26   0   0   2   2   2  94   1  10  28
   1 101   1   9   1 102  26   0   2   2 127   0   0   2   2  63  51  73
  51  90  52  52   1  28   1  94  26   0   2 127   0 127   0]"
stencil,1,2.0888988440802603,-1.20624665317727,0.435037819171975,1.11704458356556,0.0331402771770511,-0.0593177016820529,0.0910959620292578,4812832.0,4330912.0,10420555.0,5200148.0,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[ 59   1 118   1  31   7  80   1  63  11   1  80   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  93   1  76  11
   1  93   1  78  11   1  93   1  82   8   1 125   0   2  93   1  89   1
  28   1  83   7  15   8   1  10   1  16  26   0   2  93   1  90   1  28
   1  83   7  16   8   1  10   1  16  26   0   2  93   1  94   1  28   1
  83   7  17   8   1  10   1  16  26   0   0   2  91   1   7  89   1  27
   1  76   1  12   1  16   8   1 125   0   2   2  73  51   7   7  89   8
   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1   9   1
   7  94   8   8   8  52   1  28   1  65   1   9   1   7  69  51   7   7
  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1
   9   1   7  94   1  10   1  16   8   8   8  52   1  10   1  69  51   7
   7  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78
   1   9   1   7  94   1  12   1  16   8   8   8  52   1  10   1  69  51
   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  10   1  16
   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1  69
  51   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  12   1
  16   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1
  69  51   7   7  89   1  10   1  16   8   1  10   1  76   1   9   1   7
   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10
   1  69  51   7   7  89   1  12   1  16   8   1  10   1  76   1   9   1
   7   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   8
   1  12   1  69  51   7   7  89   8   1  10   1  76   1   9   1   7   7
  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1   9   1
  63  26   0   2 127   0 127   0]"
stencil,2,2.12215208609783,-1.2856180082486002,0.4709678158892929,1.20763123798716,0.0550454933957668,-0.0875858345958914,0.149630007789802,4295104.0,4454976.0,12752333.0,5589037.0,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[ 59   1 118   1  31   7  80   1  63  11   1  80   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  93   1  76  11
   1  93   1  78  11   1  93   1  82   8   1 125   0   2  93   1  89   1
  28   1  83   7  15   8   1  10   1  16  26   0   2  93   1  90   1  28
   1  83   7  16   8   1  10   1  16  26   0   2  93   1  94   1  28   1
  83   7  17   8   1  10   1  16  26   0   0   2  91   1   7  89   1  27
   1  76   1  12   1  16   8   1 125   0   2   2  73  51   7   7  89   8
   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1   9   1
   7  94   8   8   8  52   1  28   1  65   1   9   1   7  69  51   7   7
  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1
   9   1   7  94   1  10   1  16   8   8   8  52   1  10   1  69  51   7
   7  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78
   1   9   1   7  94   1  12   1  16   8   8   8  52   1  10   1  69  51
   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  10   1  16
   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1  69
  51   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  12   1
  16   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1
  69  51   7   7  89   1  10   1  16   8   1  10   1  76   1   9   1   7
   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10
   1  69  51   7   7  89   1  12   1  16   8   1  10   1  76   1   9   1
   7   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   8
   1  12   1  69  51   7   7  89   8   1  10   1  76   1   9   1   7   7
  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1   9   1
  63  26   0   2 127   0 127   0]"
stencil,4,2.1876528689197,-1.39703291540838,0.490944270278261,1.27023569715052,0.0824546384233185,-0.153272642700724,0.209720103035904,4379136.0,4952992.0,14775667.0,6472000.0,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[ 59   1 118   1  31   7  80   1  63  11   1  80   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  93   1  76  11
   1  93   1  78  11   1  93   1  82   8   1 125   0   2  93   1  89   1
  28   1  83   7  15   8   1  10   1  16  26   0   2  93   1  90   1  28
   1  83   7  16   8   1  10   1  16  26   0   2  93   1  94   1  28   1
  83   7  17   8   1  10   1  16  26   0   0   2  91   1   7  89   1  27
   1  76   1  12   1  16   8   1 125   0   2   2  73  51   7   7  89   8
   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1   9   1
   7  94   8   8   8  52   1  28   1  65   1   9   1   7  69  51   7   7
  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1
   9   1   7  94   1  10   1  16   8   8   8  52   1  10   1  69  51   7
   7  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78
   1   9   1   7  94   1  12   1  16   8   8   8  52   1  10   1  69  51
   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  10   1  16
   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1  69
  51   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  12   1
  16   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1
  69  51   7   7  89   1  10   1  16   8   1  10   1  76   1   9   1   7
   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10
   1  69  51   7   7  89   1  12   1  16   8   1  10   1  76   1   9   1
   7   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   8
   1  12   1  69  51   7   7  89   8   1  10   1  76   1   9   1   7   7
  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1   9   1
  63  26   0   2 127   0 127   0]"
stencil,8,2.2150169694197204,-1.4527533967683202,0.504700547088053,1.3070906521597,0.0975528444418669,-0.18291366087235,0.238440496533018,4985184.0,5084832.0,17185555.0,7229482.0,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[ 59   1 118   1  31   7  80   1  63  11   1  80   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  93   1  76  11
   1  93   1  78  11   1  93   1  82   8   1 125   0   2  93   1  89   1
  28   1  83   7  15   8   1  10   1  16  26   0   2  93   1  90   1  28
   1  83   7  16   8   1  10   1  16  26   0   2  93   1  94   1  28   1
  83   7  17   8   1  10   1  16  26   0   0   2  91   1   7  89   1  27
   1  76   1  12   1  16   8   1 125   0   2   2  73  51   7   7  89   8
   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1   9   1
   7  94   8   8   8  52   1  28   1  65   1   9   1   7  69  51   7   7
  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1
   9   1   7  94   1  10   1  16   8   8   8  52   1  10   1  69  51   7
   7  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78
   1   9   1   7  94   1  12   1  16   8   8   8  52   1  10   1  69  51
   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  10   1  16
   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1  69
  51   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  12   1
  16   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1
  69  51   7   7  89   1  10   1  16   8   1  10   1  76   1   9   1   7
   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10
   1  69  51   7   7  89   1  12   1  16   8   1  10   1  76   1   9   1
   7   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   8
   1  12   1  69  51   7   7  89   8   1  10   1  76   1   9   1   7   7
  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1   9   1
  63  26   0   2 127   0 127   0]"
stencil,16,2.2260201276184,-1.48449324258825,0.511898396000546,1.32644123338202,0.104798428229636,-0.19958179767073,0.253098245997095,6818880.0,5232096.0,17327445.0,7805185.0,"__kernel void A(float a, float b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_global_id(0) + 1;
  int i = get_global_id(1) + 1;
  int j = get_global_id(2) + 1;

  if (h < e - 1) {
    d[((h) + e * ((i) + f * (j)))] = b * (c[((h) + e * ((i) + f * (j + 1)))] + c[((h) + e * ((i) + f * (j - 1)))] + c[((h) + e * ((i + 1) + f * (j)))] + c[((h) + e * ((i - 1) + f * (j)))] + c[((h + 1) + e * ((i) + f * (j)))] + c[((h - 1) + e * ((i) + f * (j)))]) - c[((h) + e * ((i) + f * (j)))] * a;
  }
}
","[ 59   1 118   1  31   7  80   1  63  11   1  80   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  93   1  76  11
   1  93   1  78  11   1  93   1  82   8   1 125   0   2  93   1  89   1
  28   1  83   7  15   8   1  10   1  16  26   0   2  93   1  90   1  28
   1  83   7  16   8   1  10   1  16  26   0   2  93   1  94   1  28   1
  83   7  17   8   1  10   1  16  26   0   0   2  91   1   7  89   1  27
   1  76   1  12   1  16   8   1 125   0   2   2  73  51   7   7  89   8
   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1   9   1
   7  94   8   8   8  52   1  28   1  65   1   9   1   7  69  51   7   7
  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78   1
   9   1   7  94   1  10   1  16   8   8   8  52   1  10   1  69  51   7
   7  89   8   1  10   1  76   1   9   1   7   7  90   8   1  10   1  78
   1   9   1   7  94   1  12   1  16   8   8   8  52   1  10   1  69  51
   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  10   1  16
   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1  69
  51   7   7  89   8   1  10   1  76   1   9   1   7   7  90   1  12   1
  16   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10   1
  69  51   7   7  89   1  10   1  16   8   1  10   1  76   1   9   1   7
   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1  10
   1  69  51   7   7  89   1  12   1  16   8   1  10   1  76   1   9   1
   7   7  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   8
   1  12   1  69  51   7   7  89   8   1  10   1  76   1   9   1   7   7
  90   8   1  10   1  78   1   9   1   7  94   8   8   8  52   1   9   1
  63  26   0   2 127   0 127   0]"
mriQ,1,-0.00902465343118872,2.5102078759104303,-1.94760560566056,1.61798005054714,-2.498812102680529,2.0429681609988504,0.14600574977191902,26292864.0,12119168.0,39103444.0,9872592.0,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float4* h) {
  float i[4];
  float j[4];
  float k[4];
  float l[4];
  float m[4];

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;

    i[n] = c[o];
    j[n] = d[o];
    k[n] = e[o];
    l[n] = f[o];
    m[n] = g[o];
  }

  int p = 0;
  for (; (p < 1024) && (b < a); p++, b++) {
    float q = h[p].x;
    float r = h[p].y;
    float s = h[p].z;
    float t = h[p].w;

    for (int n = 0; n < 4; n++) {
      float u = 6.2831853071795864769252867665590058f * (q * i[n] + r * j[n] + s * k[n]);
      l[n] += t * cos(u);
      m[n] += t * sin(u);
    }
  }

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;
    f[o] = l[n];
    g[o] = m[n];
  }
}","[ 59   1 118   1  31   7  93   1  63  11   1  93   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  58   1  80   9
   1  76  11   1  58   1  80   9   1  78  11   1  58   1  80   9   1  82
  11   1  58   1  80  19   9   1  89   8   1 125   0   2  80   1  90  51
  19  52  26   0   2  80   1  94  51  19  52  26   0   2  80   1  95  51
  19  52  26   0   2  80   1  96  51  19  52  26   0   2  80   1  99  51
  19  52  26   0   0   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2  93   1
 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15
   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7  15   8
   1  10   1 100  26   0   0   2   2  90  51 100  52   1  28   1  69  51
 101  52  26   0   2   2  94  51 100  52   1  28   1  73  51 101  52  26
   0   2   2  95  51 100  52   1  28   1  76  51 101  52  26   0   2   2
  96  51 100  52   1  28   1  78  51 101  52  26   0   2   2  99  51 100
  52   1  28   1  82  51 101  52  26   0   2 127   0   0   2  93   1 102
   1  28   1  15  26   0   2  81   1   7  26   1   7 102   1  27   1  16
  15  17  19   8   1   5   5   1   7  65   1  27   1  63   8  26   1 102
  10  10  11   1  65  10  10   8   1 125   0   2   2  80   1 103   1  28
   1  89  51 102  52  13 122  26   0   2   2  80   1 104   1  28   1  89
  51 102  52  13 123  26   0   2   2  80   1 107   1  28   1  89  51 102
  52  13 124  26   0   2   2  80   1 111   1  28   1  89  51 102  52  13
 120  26   0   0   2   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2   2  80
   1 113   1  28   1  21  13  17  23  18  16  23  20  18  15  22  16  22
  24  20  23  21  19  22  21  24  17  20  17  23  21  22  21  21  20  20
  24  15  15  20  23  78   1   9   1   7 103   1   9   1  90  51 100  52
   1  10   1 104   1   9   1  94  51 100  52   1  10   1 107   1   9   1
  95  51 100  52   8  26   0   2   2   2  96  51 100  52   1  10  28   1
 111   1   9   1  69 101 107   7 113   8  26   0   2   2   2  99  51 100
  52   1  10  28   1 111   1   9   1 107  90 100   7 113   8  26   0   2
   2 127   0   2 127   0   0   2  81   1   7  93   1 100   1  28   1  15
  26   1 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2
  93   1 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73
   7  15   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7
  15   8   1  10   1 100  26   0   2   2  78  51 101  52   1  28   1  96
  51 100  52  26   0   2   2  82  51 101  52   1  28   1  99  51 100  52
  26   0   2 127   0 127]"
mriQ,2,-0.151356932175241,2.57886198260176,-2.55837125275446,1.90725833998944,-2.79444247042412,2.0651352333434,0.222749562691392,25358464.0,12132064.0,34766444.0,10050816.0,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float4* h) {
  float i[4];
  float j[4];
  float k[4];
  float l[4];
  float m[4];

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;

    i[n] = c[o];
    j[n] = d[o];
    k[n] = e[o];
    l[n] = f[o];
    m[n] = g[o];
  }

  int p = 0;
  for (; (p < 1024) && (b < a); p++, b++) {
    float q = h[p].x;
    float r = h[p].y;
    float s = h[p].z;
    float t = h[p].w;

    for (int n = 0; n < 4; n++) {
      float u = 6.2831853071795864769252867665590058f * (q * i[n] + r * j[n] + s * k[n]);
      l[n] += t * cos(u);
      m[n] += t * sin(u);
    }
  }

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;
    f[o] = l[n];
    g[o] = m[n];
  }
}","[ 59   1 118   1  31   7  93   1  63  11   1  93   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  58   1  80   9
   1  76  11   1  58   1  80   9   1  78  11   1  58   1  80   9   1  82
  11   1  58   1  80  19   9   1  89   8   1 125   0   2  80   1  90  51
  19  52  26   0   2  80   1  94  51  19  52  26   0   2  80   1  95  51
  19  52  26   0   2  80   1  96  51  19  52  26   0   2  80   1  99  51
  19  52  26   0   0   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2  93   1
 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15
   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7  15   8
   1  10   1 100  26   0   0   2   2  90  51 100  52   1  28   1  69  51
 101  52  26   0   2   2  94  51 100  52   1  28   1  73  51 101  52  26
   0   2   2  95  51 100  52   1  28   1  76  51 101  52  26   0   2   2
  96  51 100  52   1  28   1  78  51 101  52  26   0   2   2  99  51 100
  52   1  28   1  82  51 101  52  26   0   2 127   0   0   2  93   1 102
   1  28   1  15  26   0   2  81   1   7  26   1   7 102   1  27   1  16
  15  17  19   8   1   5   5   1   7  65   1  27   1  63   8  26   1 102
  10  10  11   1  65  10  10   8   1 125   0   2   2  80   1 103   1  28
   1  89  51 102  52  13 122  26   0   2   2  80   1 104   1  28   1  89
  51 102  52  13 123  26   0   2   2  80   1 107   1  28   1  89  51 102
  52  13 124  26   0   2   2  80   1 111   1  28   1  89  51 102  52  13
 120  26   0   0   2   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2   2  80
   1 113   1  28   1  21  13  17  23  18  16  23  20  18  15  22  16  22
  24  20  23  21  19  22  21  24  17  20  17  23  21  22  21  21  20  20
  24  15  15  20  23  78   1   9   1   7 103   1   9   1  90  51 100  52
   1  10   1 104   1   9   1  94  51 100  52   1  10   1 107   1   9   1
  95  51 100  52   8  26   0   2   2   2  96  51 100  52   1  10  28   1
 111   1   9   1  69 101 107   7 113   8  26   0   2   2   2  99  51 100
  52   1  10  28   1 111   1   9   1 107  90 100   7 113   8  26   0   2
   2 127   0   2 127   0   0   2  81   1   7  93   1 100   1  28   1  15
  26   1 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2
  93   1 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73
   7  15   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7
  15   8   1  10   1 100  26   0   2   2  78  51 101  52   1  28   1  96
  51 100  52  26   0   2   2  82  51 101  52   1  28   1  99  51 100  52
  26   0   2 127   0 127]"
mriQ,4,-0.429699161204077,2.62306785512475,-3.33862359326346,2.2559763003855897,-2.93936809792145,1.95655951407644,0.370193046188428,25686336.0,12415168.0,34089889.0,10631408.0,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float4* h) {
  float i[4];
  float j[4];
  float k[4];
  float l[4];
  float m[4];

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;

    i[n] = c[o];
    j[n] = d[o];
    k[n] = e[o];
    l[n] = f[o];
    m[n] = g[o];
  }

  int p = 0;
  for (; (p < 1024) && (b < a); p++, b++) {
    float q = h[p].x;
    float r = h[p].y;
    float s = h[p].z;
    float t = h[p].w;

    for (int n = 0; n < 4; n++) {
      float u = 6.2831853071795864769252867665590058f * (q * i[n] + r * j[n] + s * k[n]);
      l[n] += t * cos(u);
      m[n] += t * sin(u);
    }
  }

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;
    f[o] = l[n];
    g[o] = m[n];
  }
}","[ 59   1 118   1  31   7  93   1  63  11   1  93   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  58   1  80   9
   1  76  11   1  58   1  80   9   1  78  11   1  58   1  80   9   1  82
  11   1  58   1  80  19   9   1  89   8   1 125   0   2  80   1  90  51
  19  52  26   0   2  80   1  94  51  19  52  26   0   2  80   1  95  51
  19  52  26   0   2  80   1  96  51  19  52  26   0   2  80   1  99  51
  19  52  26   0   0   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2  93   1
 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15
   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7  15   8
   1  10   1 100  26   0   0   2   2  90  51 100  52   1  28   1  69  51
 101  52  26   0   2   2  94  51 100  52   1  28   1  73  51 101  52  26
   0   2   2  95  51 100  52   1  28   1  76  51 101  52  26   0   2   2
  96  51 100  52   1  28   1  78  51 101  52  26   0   2   2  99  51 100
  52   1  28   1  82  51 101  52  26   0   2 127   0   0   2  93   1 102
   1  28   1  15  26   0   2  81   1   7  26   1   7 102   1  27   1  16
  15  17  19   8   1   5   5   1   7  65   1  27   1  63   8  26   1 102
  10  10  11   1  65  10  10   8   1 125   0   2   2  80   1 103   1  28
   1  89  51 102  52  13 122  26   0   2   2  80   1 104   1  28   1  89
  51 102  52  13 123  26   0   2   2  80   1 107   1  28   1  89  51 102
  52  13 124  26   0   2   2  80   1 111   1  28   1  89  51 102  52  13
 120  26   0   0   2   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2   2  80
   1 113   1  28   1  21  13  17  23  18  16  23  20  18  15  22  16  22
  24  20  23  21  19  22  21  24  17  20  17  23  21  22  21  21  20  20
  24  15  15  20  23  78   1   9   1   7 103   1   9   1  90  51 100  52
   1  10   1 104   1   9   1  94  51 100  52   1  10   1 107   1   9   1
  95  51 100  52   8  26   0   2   2   2  96  51 100  52   1  10  28   1
 111   1   9   1  69 101 107   7 113   8  26   0   2   2   2  99  51 100
  52   1  10  28   1 111   1   9   1 107  90 100   7 113   8  26   0   2
   2 127   0   2 127   0   0   2  81   1   7  93   1 100   1  28   1  15
  26   1 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2
  93   1 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73
   7  15   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7
  15   8   1  10   1 100  26   0   2   2  78  51 101  52   1  28   1  96
  51 100  52  26   0   2   2  82  51 101  52   1  28   1  99  51 100  52
  26   0   2 127   0 127]"
mriQ,8,-1.0103319470138,2.6641391449746,-4.48174376867938,2.7924427717624303,-2.8300369420753504,1.61321625187454,0.6792718907826899,30580672.0,22862304.0,88381444.0,11674520.0,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float4* h) {
  float i[4];
  float j[4];
  float k[4];
  float l[4];
  float m[4];

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;

    i[n] = c[o];
    j[n] = d[o];
    k[n] = e[o];
    l[n] = f[o];
    m[n] = g[o];
  }

  int p = 0;
  for (; (p < 1024) && (b < a); p++, b++) {
    float q = h[p].x;
    float r = h[p].y;
    float s = h[p].z;
    float t = h[p].w;

    for (int n = 0; n < 4; n++) {
      float u = 6.2831853071795864769252867665590058f * (q * i[n] + r * j[n] + s * k[n]);
      l[n] += t * cos(u);
      m[n] += t * sin(u);
    }
  }

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;
    f[o] = l[n];
    g[o] = m[n];
  }
}","[ 59   1 118   1  31   7  93   1  63  11   1  93   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  58   1  80   9
   1  76  11   1  58   1  80   9   1  78  11   1  58   1  80   9   1  82
  11   1  58   1  80  19   9   1  89   8   1 125   0   2  80   1  90  51
  19  52  26   0   2  80   1  94  51  19  52  26   0   2  80   1  95  51
  19  52  26   0   2  80   1  96  51  19  52  26   0   2  80   1  99  51
  19  52  26   0   0   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2  93   1
 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15
   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7  15   8
   1  10   1 100  26   0   0   2   2  90  51 100  52   1  28   1  69  51
 101  52  26   0   2   2  94  51 100  52   1  28   1  73  51 101  52  26
   0   2   2  95  51 100  52   1  28   1  76  51 101  52  26   0   2   2
  96  51 100  52   1  28   1  78  51 101  52  26   0   2   2  99  51 100
  52   1  28   1  82  51 101  52  26   0   2 127   0   0   2  93   1 102
   1  28   1  15  26   0   2  81   1   7  26   1   7 102   1  27   1  16
  15  17  19   8   1   5   5   1   7  65   1  27   1  63   8  26   1 102
  10  10  11   1  65  10  10   8   1 125   0   2   2  80   1 103   1  28
   1  89  51 102  52  13 122  26   0   2   2  80   1 104   1  28   1  89
  51 102  52  13 123  26   0   2   2  80   1 107   1  28   1  89  51 102
  52  13 124  26   0   2   2  80   1 111   1  28   1  89  51 102  52  13
 120  26   0   0   2   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2   2  80
   1 113   1  28   1  21  13  17  23  18  16  23  20  18  15  22  16  22
  24  20  23  21  19  22  21  24  17  20  17  23  21  22  21  21  20  20
  24  15  15  20  23  78   1   9   1   7 103   1   9   1  90  51 100  52
   1  10   1 104   1   9   1  94  51 100  52   1  10   1 107   1   9   1
  95  51 100  52   8  26   0   2   2   2  96  51 100  52   1  10  28   1
 111   1   9   1  69 101 107   7 113   8  26   0   2   2   2  99  51 100
  52   1  10  28   1 111   1   9   1 107  90 100   7 113   8  26   0   2
   2 127   0   2 127   0   0   2  81   1   7  93   1 100   1  28   1  15
  26   1 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2
  93   1 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73
   7  15   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7
  15   8   1  10   1 100  26   0   2   2  78  51 101  52   1  28   1  96
  51 100  52  26   0   2   2  82  51 101  52   1  28   1  99  51 100  52
  26   0   2 127   0 127]"
mriQ,16,-2.19887946159144,2.7251512074579503,-6.46076039541731,3.7671341357228,-2.32707456262292,0.841059028729538,1.31529154373811,65083008.0,61506848.0,241014667.0,21591408.0,"__kernel void A(int a, int b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float4* h) {
  float i[4];
  float j[4];
  float k[4];
  float l[4];
  float m[4];

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;

    i[n] = c[o];
    j[n] = d[o];
    k[n] = e[o];
    l[n] = f[o];
    m[n] = g[o];
  }

  int p = 0;
  for (; (p < 1024) && (b < a); p++, b++) {
    float q = h[p].x;
    float r = h[p].y;
    float s = h[p].z;
    float t = h[p].w;

    for (int n = 0; n < 4; n++) {
      float u = 6.2831853071795864769252867665590058f * (q * i[n] + r * j[n] + s * k[n]);
      l[n] += t * cos(u);
      m[n] += t * sin(u);
    }
  }

  for (int n = 0; n < 4; n++) {
    int o = get_group_id(0) * 256 + 4 * get_local_id(0) + n;
    f[o] = l[n];
    g[o] = m[n];
  }
}","[ 59   1 118   1  31   7  93   1  63  11   1  93   1  65  11   1  58   1
  80   9   1  69  11   1  58   1  80   9   1  73  11   1  58   1  80   9
   1  76  11   1  58   1  80   9   1  78  11   1  58   1  80   9   1  82
  11   1  58   1  80  19   9   1  89   8   1 125   0   2  80   1  90  51
  19  52  26   0   2  80   1  94  51  19  52  26   0   2  80   1  95  51
  19  52  26   0   2  80   1  96  51  19  52  26   0   2  80   1  99  51
  19  52  26   0   0   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2  93   1
 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7  15
   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7  15   8
   1  10   1 100  26   0   0   2   2  90  51 100  52   1  28   1  69  51
 101  52  26   0   2   2  94  51 100  52   1  28   1  73  51 101  52  26
   0   2   2  95  51 100  52   1  28   1  76  51 101  52  26   0   2   2
  96  51 100  52   1  28   1  78  51 101  52  26   0   2   2  99  51 100
  52   1  28   1  82  51 101  52  26   0   2 127   0   0   2  93   1 102
   1  28   1  15  26   0   2  81   1   7  26   1   7 102   1  27   1  16
  15  17  19   8   1   5   5   1   7  65   1  27   1  63   8  26   1 102
  10  10  11   1  65  10  10   8   1 125   0   2   2  80   1 103   1  28
   1  89  51 102  52  13 122  26   0   2   2  80   1 104   1  28   1  89
  51 102  52  13 123  26   0   2   2  80   1 107   1  28   1  89  51 102
  52  13 124  26   0   2   2  80   1 111   1  28   1  89  51 102  52  13
 120  26   0   0   2   2  81   1   7  93   1 100   1  28   1  15  26   1
 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2   2  80
   1 113   1  28   1  21  13  17  23  18  16  23  20  18  15  22  16  22
  24  20  23  21  19  22  21  24  17  20  17  23  21  22  21  21  20  20
  24  15  15  20  23  78   1   9   1   7 103   1   9   1  90  51 100  52
   1  10   1 104   1   9   1  94  51 100  52   1  10   1 107   1   9   1
  95  51 100  52   8  26   0   2   2   2  96  51 100  52   1  10  28   1
 111   1   9   1  69 101 107   7 113   8  26   0   2   2   2  99  51 100
  52   1  10  28   1 111   1   9   1 107  90 100   7 113   8  26   0   2
   2 127   0   2 127   0   0   2  81   1   7  93   1 100   1  28   1  15
  26   1 100   1  27   1  19  26   1 100  10  10   8   1 125   0   2   2
  93   1 101   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73
   7  15   8   1   9   1  17  20  21   1  10   1  19   1   9   1  85   7
  15   8   1  10   1 100  26   0   2   2  78  51 101  52   1  28   1  96
  51 100  52  26   0   2   2  82  51 101  52   1  28   1  99  51 100  52
  26   0   2 127   0 127]"
mvCoal,1,1.14228661909521,-4.55875239993059,-0.2709089904993661,3.3136692405140096,4.45908184321751,3.8307552605783903,-8.36394965495782,1037696.0,795776.0,2051111.0,672741.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76  11   1  60   1  80   9   1  78   8   1 125   0
   2  81   1   7 115   1  82   1  28   1  82  76 111  54  82 104 101 113
 102  54  90  73   7  15   8  26   1  82   1  27   1  73  26   1  82   1
  10  28   1  87   7  15   8   8   1 125   0   2   2  71   1  58   1  80
   9   1  89   1  28   1  63   1  10   1  82   1   9   1  69  26   0   0
   2   2  80   1  90   1  28   1  15  26   0   2   2  81   1   7 115   1
  94   1  28   1  85   7  15   8  26   1  94   1  27   1  69  26   1  94
   1  10  28   1  86   7  15   8   8   0   2   2   2  90   1  10  28   1
  89  51  94  52   1   9   1  65  51  94  52  26   0   0   2   2  78  51
  85   7  15   8  52   1  28   1  90  26   0   0   2   2  66   7  16   8
  26   0   0   2   2  91   1   7  85   7  15   8   1  28  28   1  15   8
   1 125   0   2   2   2  80   1  95   1  28   1  15  26   0   2   2   2
  81   1   7 115   1  96   1  28   1  15  26   1  96   1  27   1  86   7
  15   8  26   1  10  10  96   8   0   2   2   2   2  95   1  10  28   1
  78  51  96  52  26   0   2   2   2  76  51  82  52   1  28   1  95  26
   0   2   2 127   0   0   2   2  66   7  16   8  26   0   2 127   0 127]"
mvCoal,2,0.0400906028376621,-2.89971577115388,-0.493892670829061,0.371822888603669,1.18405293668607,1.7100353627470202,-2.48985138752917,1787008.0,1474432.0,2656222.0,1487407.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76  11   1  60   1  80   9   1  78   8   1 125   0
   2  81   1   7 115   1  82   1  28   1  82  76 111  54  82 104 101 113
 102  54  90  73   7  15   8  26   1  82   1  27   1  73  26   1  82   1
  10  28   1  87   7  15   8   8   1 125   0   2   2  71   1  58   1  80
   9   1  89   1  28   1  63   1  10   1  82   1   9   1  69  26   0   0
   2   2  80   1  90   1  28   1  15  26   0   2   2  81   1   7 115   1
  94   1  28   1  85   7  15   8  26   1  94   1  27   1  69  26   1  94
   1  10  28   1  86   7  15   8   8   0   2   2   2  90   1  10  28   1
  89  51  94  52   1   9   1  65  51  94  52  26   0   0   2   2  78  51
  85   7  15   8  52   1  28   1  90  26   0   0   2   2  66   7  16   8
  26   0   0   2   2  91   1   7  85   7  15   8   1  28  28   1  15   8
   1 125   0   2   2   2  80   1  95   1  28   1  15  26   0   2   2   2
  81   1   7 115   1  96   1  28   1  15  26   1  96   1  27   1  86   7
  15   8  26   1  10  10  96   8   0   2   2   2   2  95   1  10  28   1
  78  51  96  52  26   0   2   2   2  76  51  82  52   1  28   1  95  26
   0   2   2 127   0   0   2   2  66   7  16   8  26   0   2 127   0 127]"
mvCoal,4,-4.16756511417052,0.454202637724443,1.4571957793582202,0.595746689747896,0.614939159287539,2.76819853500196,-2.19665513901532,2274560.0,4060096.0,6665000.0,3726518.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76  11   1  60   1  80   9   1  78   8   1 125   0
   2  81   1   7 115   1  82   1  28   1  82  76 111  54  82 104 101 113
 102  54  90  73   7  15   8  26   1  82   1  27   1  73  26   1  82   1
  10  28   1  87   7  15   8   8   1 125   0   2   2  71   1  58   1  80
   9   1  89   1  28   1  63   1  10   1  82   1   9   1  69  26   0   0
   2   2  80   1  90   1  28   1  15  26   0   2   2  81   1   7 115   1
  94   1  28   1  85   7  15   8  26   1  94   1  27   1  69  26   1  94
   1  10  28   1  86   7  15   8   8   0   2   2   2  90   1  10  28   1
  89  51  94  52   1   9   1  65  51  94  52  26   0   0   2   2  78  51
  85   7  15   8  52   1  28   1  90  26   0   0   2   2  66   7  16   8
  26   0   0   2   2  91   1   7  85   7  15   8   1  28  28   1  15   8
   1 125   0   2   2   2  80   1  95   1  28   1  15  26   0   2   2   2
  81   1   7 115   1  96   1  28   1  15  26   1  96   1  27   1  86   7
  15   8  26   1  10  10  96   8   0   2   2   2   2  95   1  10  28   1
  78  51  96  52  26   0   2   2   2  76  51  82  52   1  28   1  95  26
   0   2   2 127   0   0   2   2  66   7  16   8  26   0   2 127   0 127]"
mvCoal,8,-1.1130004568561398,-3.8172640822903,0.277938321178286,0.114740702453019,0.0953975928485623,0.791323130763537,-0.840719420400876,6565696.0,12190112.0,20981000.0,12557333.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76  11   1  60   1  80   9   1  78   8   1 125   0
   2  81   1   7 115   1  82   1  28   1  82  76 111  54  82 104 101 113
 102  54  90  73   7  15   8  26   1  82   1  27   1  73  26   1  82   1
  10  28   1  87   7  15   8   8   1 125   0   2   2  71   1  58   1  80
   9   1  89   1  28   1  63   1  10   1  82   1   9   1  69  26   0   0
   2   2  80   1  90   1  28   1  15  26   0   2   2  81   1   7 115   1
  94   1  28   1  85   7  15   8  26   1  94   1  27   1  69  26   1  94
   1  10  28   1  86   7  15   8   8   0   2   2   2  90   1  10  28   1
  89  51  94  52   1   9   1  65  51  94  52  26   0   0   2   2  78  51
  85   7  15   8  52   1  28   1  90  26   0   0   2   2  66   7  16   8
  26   0   0   2   2  91   1   7  85   7  15   8   1  28  28   1  15   8
   1 125   0   2   2   2  80   1  95   1  28   1  15  26   0   2   2   2
  81   1   7 115   1  96   1  28   1  15  26   1  96   1  27   1  86   7
  15   8  26   1  10  10  96   8   0   2   2   2   2  95   1  10  28   1
  78  51  96  52  26   0   2   2   2  76  51  82  52   1  28   1  95  26
   0   2   2 127   0   0   2   2  66   7  16   8  26   0   2 127   0 127]"
mvCoal,16,-3.4915930318132298,-5.73652635945307,0.3344795468386369,-0.445184524966999,-0.699656004023366,0.5151017764743561,-0.6408110874218721,21914112.0,39455616.0,73107667.0,44098371.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e, __local float* f) {
  for (uint g = get_group_id(0); g < d; g += get_num_groups(0)) {
    const __global float* h = a + g * c;

    float i = 0;
    for (uint j = get_local_id(0); j < c; j += get_local_size(0))
      i += h[j] * b[j];

    f[get_local_id(0)] = i;

    barrier(1);

    if (get_local_id(0) == 0) {
      float k = 0;
      for (uint l = 0; l < get_local_size(0); ++l)
        k += f[l];
      e[g] = k;
    }

    barrier(1);
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76  11   1  60   1  80   9   1  78   8   1 125   0
   2  81   1   7 115   1  82   1  28   1  82  76 111  54  82 104 101 113
 102  54  90  73   7  15   8  26   1  82   1  27   1  73  26   1  82   1
  10  28   1  87   7  15   8   8   1 125   0   2   2  71   1  58   1  80
   9   1  89   1  28   1  63   1  10   1  82   1   9   1  69  26   0   0
   2   2  80   1  90   1  28   1  15  26   0   2   2  81   1   7 115   1
  94   1  28   1  85   7  15   8  26   1  94   1  27   1  69  26   1  94
   1  10  28   1  86   7  15   8   8   0   2   2   2  90   1  10  28   1
  89  51  94  52   1   9   1  65  51  94  52  26   0   0   2   2  78  51
  85   7  15   8  52   1  28   1  90  26   0   0   2   2  66   7  16   8
  26   0   0   2   2  91   1   7  85   7  15   8   1  28  28   1  15   8
   1 125   0   2   2   2  80   1  95   1  28   1  15  26   0   2   2   2
  81   1   7 115   1  96   1  28   1  15  26   1  96   1  27   1  86   7
  15   8  26   1  10  10  96   8   0   2   2   2   2  95   1  10  28   1
  78  51  96  52  26   0   2   2   2  76  51  82  52   1  28   1  95  26
   0   2   2 127   0   0   2   2  66   7  16   8  26   0   2 127   0 127]"
floydWarshall,1,1.65240092992349,-0.552005984426508,1.47441782418203,0.5440116937289,0.8658059315583659,-0.287684074398358,0.4250764391028409,212576.0,231872.0,361000.0,135259.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
floydWarshall,2,1.76221073490961,-0.7551614428676371,1.53828472062723,0.572179435534525,0.954540291750568,-0.382787158338638,0.4687818663323689,146624.0,140960.0,184334.0,96000.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
floydWarshall,4,1.9378979973603097,-0.989210415497636,1.51430671735867,0.5897377700268779,0.96615200155577,-0.501728367835201,0.5599759253527969,120128.0,124256.0,167112.0,95555.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
floydWarshall,8,2.0411370389095698,-1.12738189030946,1.5002823291523,0.599614340995875,0.9720187390588512,-0.5730659645413311,0.616563787905826,114432.0,122464.0,227333.0,98075.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
floydWarshall,16,2.09638610718802,-1.20369862304312,1.49263782095349,0.604409892652921,0.974745912161185,-0.612538759044504,0.6483272854054319,117504.0,130272.0,358556.0,100000.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
floydWarshall,32,-3.9341580825888,7.492462553377732,3.65534279952448,0.0874056687844374,0.504621586053075,2.54717084071571,0.64528298816303,136672.0,137632.0,2399556.0,272000.0,"__kernel void A(__global uint* a, __global uint* b, const unsigned int c, const unsigned int d) {
  int e = get_global_id(0);
  int f = get_global_id(1);

  int g = d;
  int h = a[f * c + e];
  int i = (a[f * c + g] + a[g * c + e]);

  if (i < h) {
    a[f * c + e] = i;
    b[f * c + e] = g;
  }
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1 115   9
   1  65  11   1  71   1 116   1  93   1  69  11   1  71   1 116   1  93
   1  73   8   1 125   0   2  93   1  76   1  28   1  83   7  15   8  26
   0   2  93   1  78   1  28   1  83   7  16   8  26   0   0   2  93   1
  82   1  28   1  73  26   0   2  93   1  89   1  28   1  63  51  78   1
   9   1  69   1  10   1  76  52  26   0   2  93   1  90   1  28   1   7
  63  51  78   1   9   1  69   1  10   1  82  52   1  10   1  63  51  82
   1   9   1  69   1  10   1  76  52   8  26   0   0   2  91   1   7  90
   1  27   1  89   8   1 125   0   2   2  63  51  78   1   9   1  69   1
  10   1  76  52   1  28   1  90  26   0   2   2  65  51  78   1   9   1
  69   1  10   1  76  52   1  28   1  82  26   0   2 127   0 127]"
fastWalsh,1,1.6361608227990705,0.9440728977583708,-0.2322563402755589,-1.56826848207916,-0.686171229444521,-0.16871801467457,0.376111721746938,873952.0,891872.0,1516444.0,640740.0,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  54  54  71   1
  93   1  65   8   1 125   0   2 116   1  93   1  69   1  28   1  83   7
  15   8  26   0   0   2  71   1 116   1  93   1  73   1  28   1  69   1
   4   1  65  26   0   2  71   1 116   1  93   1  76   1  28   1  17   1
   9   1  65   1   9   1   7  69   1  14   1  65   8   1  10   1  73  26
   0   0   2  71   1 116   1  93   1  78   1  28   1  76   1  10   1  65
  26   0   0   2  80   1  82   1  28   1  63  51  76  52  26   0   2  80
   1  89   1  28   1  63  51  78  52  26   0   0   2  63  51  76  52   1
  28   1  82   1  10   1  89  26   0   2  63  51  78  52   1  28   1  82
   1  12   1  89  26   0 127   0]"
fastWalsh,2,1.57067027873581,1.16214345659523,-0.4067063965243421,-1.74344155222602,-0.882904010508883,-0.0327806236861176,0.3273171056458369,866464.0,900384.0,1432000.0,654814.0,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  54  54  71   1
  93   1  65   8   1 125   0   2 116   1  93   1  69   1  28   1  83   7
  15   8  26   0   0   2  71   1 116   1  93   1  73   1  28   1  69   1
   4   1  65  26   0   2  71   1 116   1  93   1  76   1  28   1  17   1
   9   1  65   1   9   1   7  69   1  14   1  65   8   1  10   1  73  26
   0   0   2  71   1 116   1  93   1  78   1  28   1  76   1  10   1  65
  26   0   0   2  80   1  82   1  28   1  63  51  76  52  26   0   2  80
   1  89   1  28   1  63  51  78  52  26   0   0   2  63  51  76  52   1
  28   1  82   1  10   1  89  26   0   2  63  51  78  52   1  28   1  82
   1  12   1  89  26   0 127   0]"
fastWalsh,4,1.60730454607759,1.1544605852463998,-0.415289452127428,-1.79166216091558,-0.895303896927528,-0.0798391632482653,0.38910707617585705,888832.0,910240.0,1432888.0,718518.0,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  54  54  71   1
  93   1  65   8   1 125   0   2 116   1  93   1  69   1  28   1  83   7
  15   8  26   0   0   2  71   1 116   1  93   1  73   1  28   1  69   1
   4   1  65  26   0   2  71   1 116   1  93   1  76   1  28   1  17   1
   9   1  65   1   9   1   7  69   1  14   1  65   8   1  10   1  73  26
   0   0   2  71   1 116   1  93   1  78   1  28   1  76   1  10   1  65
  26   0   0   2  80   1  82   1  28   1  63  51  76  52  26   0   2  80
   1  89   1  28   1  63  51  78  52  26   0   0   2  63  51  76  52   1
  28   1  82   1  10   1  89  26   0   2  63  51  78  52   1  28   1  82
   1  12   1  89  26   0 127   0]"
fastWalsh,8,1.6265575009123605,1.1499874529856595,-0.42019306116473,-1.8185177855888104,-0.9014996285117768,-0.105759758007894,0.421719218653746,964032.0,916384.0,1438778.0,883408.0,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  54  54  71   1
  93   1  65   8   1 125   0   2 116   1  93   1  69   1  28   1  83   7
  15   8  26   0   0   2  71   1 116   1  93   1  73   1  28   1  69   1
   4   1  65  26   0   2  71   1 116   1  93   1  76   1  28   1  17   1
   9   1  65   1   9   1   7  69   1  14   1  65   8   1  10   1  73  26
   0   0   2  71   1 116   1  93   1  78   1  28   1  76   1  10   1  65
  26   0   0   2  80   1  82   1  28   1  63  51  76  52  26   0   2  80
   1  89   1  28   1  63  51  78  52  26   0   0   2  63  51  76  52   1
  28   1  82   1  10   1  89  26   0   2  63  51  78  52   1  28   1  82
   1  12   1  89  26   0 127   0]"
fastWalsh,16,1.63534000342494,1.14737600766507,-0.42342103068245,-1.8326263365323097,-0.9042461198552572,-0.120310242375574,0.438129436285034,1055680.0,931904.0,8377111.0,946520.0,"__kernel void A(__global float* a, __const int b) {
  unsigned int c = get_global_id(0);

  const unsigned int d = c % b;
  const unsigned int e = 2 * b * (c / b) + d;

  const unsigned int f = e + b;

  float g = a[e];
  float h = a[f];

  a[e] = g + h;
  a[f] = g - h;
}
","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  54  54  71   1
  93   1  65   8   1 125   0   2 116   1  93   1  69   1  28   1  83   7
  15   8  26   0   0   2  71   1 116   1  93   1  73   1  28   1  69   1
   4   1  65  26   0   2  71   1 116   1  93   1  76   1  28   1  17   1
   9   1  65   1   9   1   7  69   1  14   1  65   8   1  10   1  73  26
   0   0   2  71   1 116   1  93   1  78   1  28   1  76   1  10   1  65
  26   0   0   2  80   1  82   1  28   1  63  51  76  52  26   0   2  80
   1  89   1  28   1  63  51  78  52  26   0   0   2  63  51  76  52   1
  28   1  82   1  10   1  89  26   0   2  63  51  78  52   1  28   1  82
   1  12   1  89  26   0 127   0]"
dwtHaar1D,1,1.83525721698992,-2.42144480743592,-0.8326928217732859,0.28655433524226503,1.83582741525105,2.0138865024481603,-2.12452505709358,734112.0,490464.0,1200000.0,254222.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, uint e, uint f, uint g, uint h) {
  size_t i = get_local_id(0);
  size_t j = get_group_id(0);
  size_t k = get_global_id(0);
  size_t l = get_local_size(0);

  float m = a[j * l * 2 + i];
  float n = a[j * l * 2 + l + i];

  if (0 == g) {
    float o = (1.f / sqrt((float)f));
    m *= o;
    n *= o;
  }
  d[i] = m;
  d[l + i] = n;

  barrier(1);

  uint p = e > h ? h : e;
  uint q = (1 << p) / 2;
  uint r = f / 2;

  float s = (1.f / sqrt(2.0f));
  for (uint t = 0; t < p; ++t) {
    float u, v;
    if (i < q) {
      u = d[2 * i];
      v = d[2 * i + 1];
    }

    barrier(1);

    if (i < q) {
      d[i] = (u + v) * s;
      uint w = r + j * q + i;
      b[w] = (u - v) * s;

      r >>= 1;
    }
    q >>= 1;
    barrier(1);
  }

  if (0 == i)
    c[j] = d[0];
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  60   1  80   9   1  73
  11   1 115   1  76  11   1 115   1  78  11   1 115   1  82  11   1 115
   1  89   8   1 125   0   2 107  90 124  76  54 111   1  90   1  28   1
  85   7  15   8  26   0   2 107  90 124  76  54 111   1  94   1  28   1
  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26   0   2
 107  90 124  76  54 111   1  95   1  28   1  83   7  15   8  26   0   2
 107  90 124  76  54 111   1  96   1  28   1  86   7  15   8  26   0   0
   2  80   1  99   1  28   1  63  51  94   1   9   1  96   1   9   1  17
   1  10   1  90  52  26   0   2  80   1 100   1  28   1  63  51  94   1
   9   1  96   1   9   1  17   1  10   1  96   1  10   1  90  52  26   0
   0   2  91   1   7  15   1  28  28   1  82   8   1 125   0   2   2  80
   1 101   1  28   1   7  16  13  78   1  14   1 110   7   7  80   8  78
   8   8  26   0   2   2  99   1   9  28   1 101  26   0   2   2 100   1
   9  28   1 101  26   0   2 127   0   2  73  51  90  52   1  28   1  99
  26   0   2  73  51  96   1  10   1  90  52   1  28   1 100  26   0   0
   2  66   7  16   8  26   0   0   2 115   1 102   1  28   1  76   1  29
   1  89   1  30   1  89   1  25   1  76  26   0   2 115   1 103   1  28
   1   7  16   1  27  27   1 102   8   1  14   1  17  26   0   2 115   1
 104   1  28   1  78   1  14   1  17  26   0   0   2  80   1 107   1  28
   1   7  16  13  78   1  14   1 110   7  17  13  15  78   8   8  26   0
   2  81   1   7 115   1 111   1  28   1  15  26   1 111   1  27   1 102
  26   1  10  10 111   8   1 125   0   2   2  80   1 113  11   1 117  26
   0   2   2  91   1   7  90   1  27   1 103   8   1 125   0   2   2   2
 113   1  28   1  73  51  17   1   9   1  90  52  26   0   2   2   2 117
   1  28   1  73  51  17   1   9   1  90   1  10   1  16  52  26   0   2
   2 127   0   0   2   2  66   7  16   8  26   0   0   2   2  91   1   7
  90   1  27   1 103   8   1 125   0   2   2   2  73  51  90  52   1  28
   1   7 113   1  10   1 117   8   1   9   1 107  26   0   2   2   2 115
   1 120   1  28   1 104   1  10   1  94   1   9   1 103   1  10   1  90
  26   0   2   2   2  65  51 120  52   1  28   1   7 113   1  12   1 117
   8   1   9   1 107  26   0   0   2   2   2 104   1  29  29  28   1  16
  26   0   2   2 127   0   2   2 103   1  29  29  28   1  16  26   0   2
   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  15   1  28
  28   1  90   8   0   2   2  69  51  94  52   1  28   1  73  51  15  52
  26   0 127]"
dwtHaar1D,2,1.51411091981651,-2.59725154704567,-0.832884531610903,0.0530004711517832,1.4476778371640602,1.46932645391978,-0.7180411937557281,542976.0,342144.0,823111.0,156296.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, uint e, uint f, uint g, uint h) {
  size_t i = get_local_id(0);
  size_t j = get_group_id(0);
  size_t k = get_global_id(0);
  size_t l = get_local_size(0);

  float m = a[j * l * 2 + i];
  float n = a[j * l * 2 + l + i];

  if (0 == g) {
    float o = (1.f / sqrt((float)f));
    m *= o;
    n *= o;
  }
  d[i] = m;
  d[l + i] = n;

  barrier(1);

  uint p = e > h ? h : e;
  uint q = (1 << p) / 2;
  uint r = f / 2;

  float s = (1.f / sqrt(2.0f));
  for (uint t = 0; t < p; ++t) {
    float u, v;
    if (i < q) {
      u = d[2 * i];
      v = d[2 * i + 1];
    }

    barrier(1);

    if (i < q) {
      d[i] = (u + v) * s;
      uint w = r + j * q + i;
      b[w] = (u - v) * s;

      r >>= 1;
    }
    q >>= 1;
    barrier(1);
  }

  if (0 == i)
    c[j] = d[0];
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  60   1  80   9   1  73
  11   1 115   1  76  11   1 115   1  78  11   1 115   1  82  11   1 115
   1  89   8   1 125   0   2 107  90 124  76  54 111   1  90   1  28   1
  85   7  15   8  26   0   2 107  90 124  76  54 111   1  94   1  28   1
  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26   0   2
 107  90 124  76  54 111   1  95   1  28   1  83   7  15   8  26   0   2
 107  90 124  76  54 111   1  96   1  28   1  86   7  15   8  26   0   0
   2  80   1  99   1  28   1  63  51  94   1   9   1  96   1   9   1  17
   1  10   1  90  52  26   0   2  80   1 100   1  28   1  63  51  94   1
   9   1  96   1   9   1  17   1  10   1  96   1  10   1  90  52  26   0
   0   2  91   1   7  15   1  28  28   1  82   8   1 125   0   2   2  80
   1 101   1  28   1   7  16  13  78   1  14   1 110   7   7  80   8  78
   8   8  26   0   2   2  99   1   9  28   1 101  26   0   2   2 100   1
   9  28   1 101  26   0   2 127   0   2  73  51  90  52   1  28   1  99
  26   0   2  73  51  96   1  10   1  90  52   1  28   1 100  26   0   0
   2  66   7  16   8  26   0   0   2 115   1 102   1  28   1  76   1  29
   1  89   1  30   1  89   1  25   1  76  26   0   2 115   1 103   1  28
   1   7  16   1  27  27   1 102   8   1  14   1  17  26   0   2 115   1
 104   1  28   1  78   1  14   1  17  26   0   0   2  80   1 107   1  28
   1   7  16  13  78   1  14   1 110   7  17  13  15  78   8   8  26   0
   2  81   1   7 115   1 111   1  28   1  15  26   1 111   1  27   1 102
  26   1  10  10 111   8   1 125   0   2   2  80   1 113  11   1 117  26
   0   2   2  91   1   7  90   1  27   1 103   8   1 125   0   2   2   2
 113   1  28   1  73  51  17   1   9   1  90  52  26   0   2   2   2 117
   1  28   1  73  51  17   1   9   1  90   1  10   1  16  52  26   0   2
   2 127   0   0   2   2  66   7  16   8  26   0   0   2   2  91   1   7
  90   1  27   1 103   8   1 125   0   2   2   2  73  51  90  52   1  28
   1   7 113   1  10   1 117   8   1   9   1 107  26   0   2   2   2 115
   1 120   1  28   1 104   1  10   1  94   1   9   1 103   1  10   1  90
  26   0   2   2   2  65  51 120  52   1  28   1   7 113   1  12   1 117
   8   1   9   1 107  26   0   0   2   2   2 104   1  29  29  28   1  16
  26   0   2   2 127   0   2   2 103   1  29  29  28   1  16  26   0   2
   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  15   1  28
  28   1  90   8   0   2   2  69  51  94  52   1  28   1  73  51  15  52
  26   0 127]"
dwtHaar1D,4,0.88180608988749,-3.1390294063469497,-0.9096224148136852,-0.0258128901466286,1.50691928696554,1.25065559043981,-0.0910189722082975,433696.0,302304.0,656222.0,128000.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, uint e, uint f, uint g, uint h) {
  size_t i = get_local_id(0);
  size_t j = get_group_id(0);
  size_t k = get_global_id(0);
  size_t l = get_local_size(0);

  float m = a[j * l * 2 + i];
  float n = a[j * l * 2 + l + i];

  if (0 == g) {
    float o = (1.f / sqrt((float)f));
    m *= o;
    n *= o;
  }
  d[i] = m;
  d[l + i] = n;

  barrier(1);

  uint p = e > h ? h : e;
  uint q = (1 << p) / 2;
  uint r = f / 2;

  float s = (1.f / sqrt(2.0f));
  for (uint t = 0; t < p; ++t) {
    float u, v;
    if (i < q) {
      u = d[2 * i];
      v = d[2 * i + 1];
    }

    barrier(1);

    if (i < q) {
      d[i] = (u + v) * s;
      uint w = r + j * q + i;
      b[w] = (u - v) * s;

      r >>= 1;
    }
    q >>= 1;
    barrier(1);
  }

  if (0 == i)
    c[j] = d[0];
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  60   1  80   9   1  73
  11   1 115   1  76  11   1 115   1  78  11   1 115   1  82  11   1 115
   1  89   8   1 125   0   2 107  90 124  76  54 111   1  90   1  28   1
  85   7  15   8  26   0   2 107  90 124  76  54 111   1  94   1  28   1
  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26   0   2
 107  90 124  76  54 111   1  95   1  28   1  83   7  15   8  26   0   2
 107  90 124  76  54 111   1  96   1  28   1  86   7  15   8  26   0   0
   2  80   1  99   1  28   1  63  51  94   1   9   1  96   1   9   1  17
   1  10   1  90  52  26   0   2  80   1 100   1  28   1  63  51  94   1
   9   1  96   1   9   1  17   1  10   1  96   1  10   1  90  52  26   0
   0   2  91   1   7  15   1  28  28   1  82   8   1 125   0   2   2  80
   1 101   1  28   1   7  16  13  78   1  14   1 110   7   7  80   8  78
   8   8  26   0   2   2  99   1   9  28   1 101  26   0   2   2 100   1
   9  28   1 101  26   0   2 127   0   2  73  51  90  52   1  28   1  99
  26   0   2  73  51  96   1  10   1  90  52   1  28   1 100  26   0   0
   2  66   7  16   8  26   0   0   2 115   1 102   1  28   1  76   1  29
   1  89   1  30   1  89   1  25   1  76  26   0   2 115   1 103   1  28
   1   7  16   1  27  27   1 102   8   1  14   1  17  26   0   2 115   1
 104   1  28   1  78   1  14   1  17  26   0   0   2  80   1 107   1  28
   1   7  16  13  78   1  14   1 110   7  17  13  15  78   8   8  26   0
   2  81   1   7 115   1 111   1  28   1  15  26   1 111   1  27   1 102
  26   1  10  10 111   8   1 125   0   2   2  80   1 113  11   1 117  26
   0   2   2  91   1   7  90   1  27   1 103   8   1 125   0   2   2   2
 113   1  28   1  73  51  17   1   9   1  90  52  26   0   2   2   2 117
   1  28   1  73  51  17   1   9   1  90   1  10   1  16  52  26   0   2
   2 127   0   0   2   2  66   7  16   8  26   0   0   2   2  91   1   7
  90   1  27   1 103   8   1 125   0   2   2   2  73  51  90  52   1  28
   1   7 113   1  10   1 117   8   1   9   1 107  26   0   2   2   2 115
   1 120   1  28   1 104   1  10   1  94   1   9   1 103   1  10   1  90
  26   0   2   2   2  65  51 120  52   1  28   1   7 113   1  12   1 117
   8   1   9   1 107  26   0   0   2   2   2 104   1  29  29  28   1  16
  26   0   2   2 127   0   2   2 103   1  29  29  28   1  16  26   0   2
   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  15   1  28
  28   1  90   8   0   2   2  69  51  94  52   1  28   1  73  51  15  52
  26   0 127]"
dwtHaar1D,8,-0.467656995526123,-4.03837215524114,-1.19331437882558,-0.278662223066555,1.6773891778573895,1.09064027892255,0.6479239374543699,348064.0,417888.0,786889.0,144741.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, uint e, uint f, uint g, uint h) {
  size_t i = get_local_id(0);
  size_t j = get_group_id(0);
  size_t k = get_global_id(0);
  size_t l = get_local_size(0);

  float m = a[j * l * 2 + i];
  float n = a[j * l * 2 + l + i];

  if (0 == g) {
    float o = (1.f / sqrt((float)f));
    m *= o;
    n *= o;
  }
  d[i] = m;
  d[l + i] = n;

  barrier(1);

  uint p = e > h ? h : e;
  uint q = (1 << p) / 2;
  uint r = f / 2;

  float s = (1.f / sqrt(2.0f));
  for (uint t = 0; t < p; ++t) {
    float u, v;
    if (i < q) {
      u = d[2 * i];
      v = d[2 * i + 1];
    }

    barrier(1);

    if (i < q) {
      d[i] = (u + v) * s;
      uint w = r + j * q + i;
      b[w] = (u - v) * s;

      r >>= 1;
    }
    q >>= 1;
    barrier(1);
  }

  if (0 == i)
    c[j] = d[0];
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  60   1  80   9   1  73
  11   1 115   1  76  11   1 115   1  78  11   1 115   1  82  11   1 115
   1  89   8   1 125   0   2 107  90 124  76  54 111   1  90   1  28   1
  85   7  15   8  26   0   2 107  90 124  76  54 111   1  94   1  28   1
  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26   0   2
 107  90 124  76  54 111   1  95   1  28   1  83   7  15   8  26   0   2
 107  90 124  76  54 111   1  96   1  28   1  86   7  15   8  26   0   0
   2  80   1  99   1  28   1  63  51  94   1   9   1  96   1   9   1  17
   1  10   1  90  52  26   0   2  80   1 100   1  28   1  63  51  94   1
   9   1  96   1   9   1  17   1  10   1  96   1  10   1  90  52  26   0
   0   2  91   1   7  15   1  28  28   1  82   8   1 125   0   2   2  80
   1 101   1  28   1   7  16  13  78   1  14   1 110   7   7  80   8  78
   8   8  26   0   2   2  99   1   9  28   1 101  26   0   2   2 100   1
   9  28   1 101  26   0   2 127   0   2  73  51  90  52   1  28   1  99
  26   0   2  73  51  96   1  10   1  90  52   1  28   1 100  26   0   0
   2  66   7  16   8  26   0   0   2 115   1 102   1  28   1  76   1  29
   1  89   1  30   1  89   1  25   1  76  26   0   2 115   1 103   1  28
   1   7  16   1  27  27   1 102   8   1  14   1  17  26   0   2 115   1
 104   1  28   1  78   1  14   1  17  26   0   0   2  80   1 107   1  28
   1   7  16  13  78   1  14   1 110   7  17  13  15  78   8   8  26   0
   2  81   1   7 115   1 111   1  28   1  15  26   1 111   1  27   1 102
  26   1  10  10 111   8   1 125   0   2   2  80   1 113  11   1 117  26
   0   2   2  91   1   7  90   1  27   1 103   8   1 125   0   2   2   2
 113   1  28   1  73  51  17   1   9   1  90  52  26   0   2   2   2 117
   1  28   1  73  51  17   1   9   1  90   1  10   1  16  52  26   0   2
   2 127   0   0   2   2  66   7  16   8  26   0   0   2   2  91   1   7
  90   1  27   1 103   8   1 125   0   2   2   2  73  51  90  52   1  28
   1   7 113   1  10   1 117   8   1   9   1 107  26   0   2   2   2 115
   1 120   1  28   1 104   1  10   1  94   1   9   1 103   1  10   1  90
  26   0   2   2   2  65  51 120  52   1  28   1   7 113   1  12   1 117
   8   1   9   1 107  26   0   0   2   2   2 104   1  29  29  28   1  16
  26   0   2   2 127   0   2   2 103   1  29  29  28   1  16  26   0   2
   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  15   1  28
  28   1  90   8   0   2   2  69  51  94  52   1  28   1  73  51  15  52
  26   0 127]"
dwtHaar1D,16,-3.20810522183712,-5.699688543905669,-1.88595013211886,-0.903118688890446,1.98977695374126,0.926652746717888,1.85178774172514,499360.0,649024.0,1072445.0,198666.0,"__kernel void A(__global float* a, __global float* b, __global float* c, __local float* d, uint e, uint f, uint g, uint h) {
  size_t i = get_local_id(0);
  size_t j = get_group_id(0);
  size_t k = get_global_id(0);
  size_t l = get_local_size(0);

  float m = a[j * l * 2 + i];
  float n = a[j * l * 2 + l + i];

  if (0 == g) {
    float o = (1.f / sqrt((float)f));
    m *= o;
    n *= o;
  }
  d[i] = m;
  d[l + i] = n;

  barrier(1);

  uint p = e > h ? h : e;
  uint q = (1 << p) / 2;
  uint r = f / 2;

  float s = (1.f / sqrt(2.0f));
  for (uint t = 0; t < p; ++t) {
    float u, v;
    if (i < q) {
      u = d[2 * i];
      v = d[2 * i + 1];
    }

    barrier(1);

    if (i < q) {
      d[i] = (u + v) * s;
      uint w = r + j * q + i;
      b[w] = (u - v) * s;

      r >>= 1;
    }
    q >>= 1;
    barrier(1);
  }

  if (0 == i)
    c[j] = d[0];
}","[ 59   1 118   1  31   7  58   1  80   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  80   9   1  69  11   1  60   1  80   9   1  73
  11   1 115   1  76  11   1 115   1  78  11   1 115   1  82  11   1 115
   1  89   8   1 125   0   2 107  90 124  76  54 111   1  90   1  28   1
  85   7  15   8  26   0   2 107  90 124  76  54 111   1  94   1  28   1
  82  76 111  54  82 104 101 113 102  54  90  73   7  15   8  26   0   2
 107  90 124  76  54 111   1  95   1  28   1  83   7  15   8  26   0   2
 107  90 124  76  54 111   1  96   1  28   1  86   7  15   8  26   0   0
   2  80   1  99   1  28   1  63  51  94   1   9   1  96   1   9   1  17
   1  10   1  90  52  26   0   2  80   1 100   1  28   1  63  51  94   1
   9   1  96   1   9   1  17   1  10   1  96   1  10   1  90  52  26   0
   0   2  91   1   7  15   1  28  28   1  82   8   1 125   0   2   2  80
   1 101   1  28   1   7  16  13  78   1  14   1 110   7   7  80   8  78
   8   8  26   0   2   2  99   1   9  28   1 101  26   0   2   2 100   1
   9  28   1 101  26   0   2 127   0   2  73  51  90  52   1  28   1  99
  26   0   2  73  51  96   1  10   1  90  52   1  28   1 100  26   0   0
   2  66   7  16   8  26   0   0   2 115   1 102   1  28   1  76   1  29
   1  89   1  30   1  89   1  25   1  76  26   0   2 115   1 103   1  28
   1   7  16   1  27  27   1 102   8   1  14   1  17  26   0   2 115   1
 104   1  28   1  78   1  14   1  17  26   0   0   2  80   1 107   1  28
   1   7  16  13  78   1  14   1 110   7  17  13  15  78   8   8  26   0
   2  81   1   7 115   1 111   1  28   1  15  26   1 111   1  27   1 102
  26   1  10  10 111   8   1 125   0   2   2  80   1 113  11   1 117  26
   0   2   2  91   1   7  90   1  27   1 103   8   1 125   0   2   2   2
 113   1  28   1  73  51  17   1   9   1  90  52  26   0   2   2   2 117
   1  28   1  73  51  17   1   9   1  90   1  10   1  16  52  26   0   2
   2 127   0   0   2   2  66   7  16   8  26   0   0   2   2  91   1   7
  90   1  27   1 103   8   1 125   0   2   2   2  73  51  90  52   1  28
   1   7 113   1  10   1 117   8   1   9   1 107  26   0   2   2   2 115
   1 120   1  28   1 104   1  10   1  94   1   9   1 103   1  10   1  90
  26   0   2   2   2  65  51 120  52   1  28   1   7 113   1  12   1 117
   8   1   9   1 107  26   0   0   2   2   2 104   1  29  29  28   1  16
  26   0   2   2 127   0   2   2 103   1  29  29  28   1  16  26   0   2
   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  15   1  28
  28   1  90   8   0   2   2  69  51  94  52   1  28   1  73  51  15  52
  26   0 127]"
convolution,1,1.7205216175715,-2.06838000267044,0.41491963373614105,1.79122628518841,-0.3926658050819629,-0.0217213787937154,0.026109415777012004,395968.0,543648.0,530889.0,105186.0,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  71   1 115  17   1  73
  11   1  71   1 115  17   1  76  11   1  71   1 115   1  78   8   1 125
   0   2 115   1  82   1  28   1  83   7  15   8  26   0   0   2 115   1
  89   1  28   1  73  13 122  26   0   2 115   1  90   1  28   1  73  13
 123  26   0   0   2 115   1  94   1  28   1  82   1   4   1  89  26   0
   2 115   1  95   1  28   1  82   1  14   1  89  26   0   0   2 115   1
  96   1  28   1  76  13 122  26   0   2 115   1  99   1  28   1  76  13
 123  26   0   0   2  91   1   7  94   1  29  28   1  89   1 126 126   1
  95   1  29  28   1  90   8   0   2   2 106  26   0   0   2  80   1 100
   1  28   1  15  13  15  78  26   0   2  93   1 101   1  28   1  15  11
   1 102   1  28   1  15  26   0   0   2  81   1   7 115   1 103   1  28
   1  95  26   1 103   1  27   1   7  95   1  10   1  99   8  26   1  10
  10 103  11   1 101  10  10   8   1 125   0   2   2 102   1  28   1  15
  26   0   2   2  81   1   7 115   1 104   1  28   1  94  26   1 104   1
  27   1   7  94   1  10   1  96   8  26   1  10  10 104  11   1 102  10
  10   8   1 125   0   2   2   2 115   1 107   1  28   1 101   1   9   1
  96   1  10   1 102  26   0   2   2   2 115   1 111   1  28   1 103   1
   9   1  78   1  10   1 104  26   0   0   2   2   2 100   1  10  28   1
   7   7  80   8  63  51 111  52   1   9   1  65  51 107  52   8  26   0
   2   2 127   0   2 127   0   0   2 100   1  10  28   1  15  13  20  78
  26   0   2  69  51  82  52   1  28   1   7  93   8 100  26   0 127]"
convolution,2,1.3185739126179798,-2.41571917442471,0.45538352965356,1.76625484700935,-0.521380511474114,0.115651936397268,-0.4194899848270471,385792.0,543488.0,515445.0,109186.0,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  71   1 115  17   1  73
  11   1  71   1 115  17   1  76  11   1  71   1 115   1  78   8   1 125
   0   2 115   1  82   1  28   1  83   7  15   8  26   0   0   2 115   1
  89   1  28   1  73  13 122  26   0   2 115   1  90   1  28   1  73  13
 123  26   0   0   2 115   1  94   1  28   1  82   1   4   1  89  26   0
   2 115   1  95   1  28   1  82   1  14   1  89  26   0   0   2 115   1
  96   1  28   1  76  13 122  26   0   2 115   1  99   1  28   1  76  13
 123  26   0   0   2  91   1   7  94   1  29  28   1  89   1 126 126   1
  95   1  29  28   1  90   8   0   2   2 106  26   0   0   2  80   1 100
   1  28   1  15  13  15  78  26   0   2  93   1 101   1  28   1  15  11
   1 102   1  28   1  15  26   0   0   2  81   1   7 115   1 103   1  28
   1  95  26   1 103   1  27   1   7  95   1  10   1  99   8  26   1  10
  10 103  11   1 101  10  10   8   1 125   0   2   2 102   1  28   1  15
  26   0   2   2  81   1   7 115   1 104   1  28   1  94  26   1 104   1
  27   1   7  94   1  10   1  96   8  26   1  10  10 104  11   1 102  10
  10   8   1 125   0   2   2   2 115   1 107   1  28   1 101   1   9   1
  96   1  10   1 102  26   0   2   2   2 115   1 111   1  28   1 103   1
   9   1  78   1  10   1 104  26   0   0   2   2   2 100   1  10  28   1
   7   7  80   8  63  51 111  52   1   9   1  65  51 107  52   8  26   0
   2   2 127   0   2 127   0   0   2 100   1  10  28   1  15  13  20  78
  26   0   2  69  51  82  52   1  28   1   7  93   8 100  26   0 127]"
convolution,4,0.488476238279324,-3.05289679327267,0.619086349439178,1.65808547952846,-0.9723853058350368,0.12819867736488902,-0.6719848660087571,376256.0,548384.0,517667.0,121926.0,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  71   1 115  17   1  73
  11   1  71   1 115  17   1  76  11   1  71   1 115   1  78   8   1 125
   0   2 115   1  82   1  28   1  83   7  15   8  26   0   0   2 115   1
  89   1  28   1  73  13 122  26   0   2 115   1  90   1  28   1  73  13
 123  26   0   0   2 115   1  94   1  28   1  82   1   4   1  89  26   0
   2 115   1  95   1  28   1  82   1  14   1  89  26   0   0   2 115   1
  96   1  28   1  76  13 122  26   0   2 115   1  99   1  28   1  76  13
 123  26   0   0   2  91   1   7  94   1  29  28   1  89   1 126 126   1
  95   1  29  28   1  90   8   0   2   2 106  26   0   0   2  80   1 100
   1  28   1  15  13  15  78  26   0   2  93   1 101   1  28   1  15  11
   1 102   1  28   1  15  26   0   0   2  81   1   7 115   1 103   1  28
   1  95  26   1 103   1  27   1   7  95   1  10   1  99   8  26   1  10
  10 103  11   1 101  10  10   8   1 125   0   2   2 102   1  28   1  15
  26   0   2   2  81   1   7 115   1 104   1  28   1  94  26   1 104   1
  27   1   7  94   1  10   1  96   8  26   1  10  10 104  11   1 102  10
  10   8   1 125   0   2   2   2 115   1 107   1  28   1 101   1   9   1
  96   1  10   1 102  26   0   2   2   2 115   1 111   1  28   1 103   1
   9   1  78   1  10   1 104  26   0   0   2   2   2 100   1  10  28   1
   7   7  80   8  63  51 111  52   1   9   1  65  51 107  52   8  26   0
   2   2 127   0   2 127   0   0   2 100   1  10  28   1  15  13  20  78
  26   0   2  69  51  82  52   1  28   1   7  93   8 100  26   0 127]"
convolution,8,-1.1521246013176498,-4.21929759922285,0.969129589588383,1.31603915097656,-2.06755342224985,-0.146342893387453,-0.551234708236411,404256.0,543104.0,559556.0,206814.0,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  71   1 115  17   1  73
  11   1  71   1 115  17   1  76  11   1  71   1 115   1  78   8   1 125
   0   2 115   1  82   1  28   1  83   7  15   8  26   0   0   2 115   1
  89   1  28   1  73  13 122  26   0   2 115   1  90   1  28   1  73  13
 123  26   0   0   2 115   1  94   1  28   1  82   1   4   1  89  26   0
   2 115   1  95   1  28   1  82   1  14   1  89  26   0   0   2 115   1
  96   1  28   1  76  13 122  26   0   2 115   1  99   1  28   1  76  13
 123  26   0   0   2  91   1   7  94   1  29  28   1  89   1 126 126   1
  95   1  29  28   1  90   8   0   2   2 106  26   0   0   2  80   1 100
   1  28   1  15  13  15  78  26   0   2  93   1 101   1  28   1  15  11
   1 102   1  28   1  15  26   0   0   2  81   1   7 115   1 103   1  28
   1  95  26   1 103   1  27   1   7  95   1  10   1  99   8  26   1  10
  10 103  11   1 101  10  10   8   1 125   0   2   2 102   1  28   1  15
  26   0   2   2  81   1   7 115   1 104   1  28   1  94  26   1 104   1
  27   1   7  94   1  10   1  96   8  26   1  10  10 104  11   1 102  10
  10   8   1 125   0   2   2   2 115   1 107   1  28   1 101   1   9   1
  96   1  10   1 102  26   0   2   2   2 115   1 111   1  28   1 103   1
   9   1  78   1  10   1 104  26   0   0   2   2   2 100   1  10  28   1
   7   7  80   8  63  51 111  52   1   9   1  65  51 107  52   8  26   0
   2   2 127   0   2 127   0   0   2 100   1  10  28   1  15  13  20  78
  26   0   2  69  51  82  52   1  28   1   7  93   8 100  26   0 127]"
convolution,16,-4.38235250645679,-6.50539464828459,1.5257297843491495,0.6145847481514151,-4.094467277012431,-0.495727820519415,-0.876829959650502,486976.0,578176.0,958000.0,298074.0,"__kernel void A(__global uint* a, __global float* b, __global int* c, const uint2 d, const uint2 e, const uint f) {
  uint g = get_global_id(0);

  uint h = d.x;
  uint i = d.y;

  uint j = g % h;
  uint k = g / h;

  uint l = e.x;
  uint m = e.y;

  if (j >= h || k >= i)
    return;

  float n = 0.0f;
  int o = 0, p = 0;

  for (uint q = k; q < (k + m); ++q, o++) {
    p = 0;
    for (uint r = j; r < (j + l); ++r, p++) {
      uint s = o * l + p;
      uint t = q * f + r;

      n += ((float)a[t] * b[s]);
    }
  }

  n += 0.5f;
  c[g] = (int)n;
}","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  58   1  80   9
   1  65  11   1  58   1  93   9   1  69  11   1  71   1 115  17   1  73
  11   1  71   1 115  17   1  76  11   1  71   1 115   1  78   8   1 125
   0   2 115   1  82   1  28   1  83   7  15   8  26   0   0   2 115   1
  89   1  28   1  73  13 122  26   0   2 115   1  90   1  28   1  73  13
 123  26   0   0   2 115   1  94   1  28   1  82   1   4   1  89  26   0
   2 115   1  95   1  28   1  82   1  14   1  89  26   0   0   2 115   1
  96   1  28   1  76  13 122  26   0   2 115   1  99   1  28   1  76  13
 123  26   0   0   2  91   1   7  94   1  29  28   1  89   1 126 126   1
  95   1  29  28   1  90   8   0   2   2 106  26   0   0   2  80   1 100
   1  28   1  15  13  15  78  26   0   2  93   1 101   1  28   1  15  11
   1 102   1  28   1  15  26   0   0   2  81   1   7 115   1 103   1  28
   1  95  26   1 103   1  27   1   7  95   1  10   1  99   8  26   1  10
  10 103  11   1 101  10  10   8   1 125   0   2   2 102   1  28   1  15
  26   0   2   2  81   1   7 115   1 104   1  28   1  94  26   1 104   1
  27   1   7  94   1  10   1  96   8  26   1  10  10 104  11   1 102  10
  10   8   1 125   0   2   2   2 115   1 107   1  28   1 101   1   9   1
  96   1  10   1 102  26   0   2   2   2 115   1 111   1  28   1 103   1
   9   1  78   1  10   1 104  26   0   0   2   2   2 100   1  10  28   1
   7   7  80   8  63  51 111  52   1   9   1  65  51 107  52   8  26   0
   2   2 127   0   2 127   0   0   2 100   1  10  28   1  15  13  20  78
  26   0   2  69  51  82  52   1  28   1   7  93   8 100  26   0 127]"
binarySearch,1,2.11162493446111,-0.744320735459889,1.08500828291802,0.063430822396604,0.10194413873124496,-1.46531772464739,1.05935687840084,213216.0,168384.0,474111.0,299260.0,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  71   1 115   1
  65  11   1  71   1 115   1  69  11   1  71   1 115   1  73   8   1 125
   0   2 115   1  76   1  28   1  73  26   0   2 115   1  78   1  28   1
  83   7  15   8  26   0   0   2 115   1  82   1  28   1  16   1  27  27
   1   7  65   1  12   1  69   8  26   0   2 115   1  89   1  28   1  17
   1   9   1  82  26   0   0   2 115   1  90   1  28   1   7  78   1   4
   1  82   8   1  10   1   7  78   1  14   1  82   8   1   9   1  89  26
   0   0   2 115   1  94   1  28   1  90   1  10   1  82  26   0   0   2
 115   1  95   1  28   1  63  51  90  52  26   0   2 115   1  96   1  28
   1  63  51  94  52  26   0   0   2 115   1  99   1  28   1  16   1  27
  27   1  65  26   0   0   2  91   1   7   7  78   1  14   1  99   8   1
   4   1  17   1  28  28   1  16   8   0   2   2  76   1  28   1  16   1
  12   1  76  26   0   0   2 115   1 100  26   0   2 115   1 101  26   0
   2  91   1   7  95   1  29   1  96   8   1 125   0   2   2 100   1  28
   1  95  26   0   2   2 101   1  28   1  96  26   0   2 127   1  77   1
 125   0   2   2 100   1  28   1  96  26   0   2   2 101   1  28   1  95
  26   0   2 127   0   0   2  91   1   7  76   8   1 125   0   2   2  63
  51  90  52   1  28   1 101  26   0   2   2  63  51  94  52   1  28   1
 100  26   0   2 127   1  77   1 125   0   2   2  63  51  90  52   1  28
   1 100  26   0   2   2  63  51  94  52   1  28   1 101  26   0   2 127
   0 127   0]"
binarySearch,2,2.0494477061715504,-0.80212670195492,1.2829189874636298,0.367084744863177,0.30416905981090003,-1.4416975612198202,1.0209367273594,215488.0,176256.0,290889.0,272594.0,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  71   1 115   1
  65  11   1  71   1 115   1  69  11   1  71   1 115   1  73   8   1 125
   0   2 115   1  76   1  28   1  73  26   0   2 115   1  78   1  28   1
  83   7  15   8  26   0   0   2 115   1  82   1  28   1  16   1  27  27
   1   7  65   1  12   1  69   8  26   0   2 115   1  89   1  28   1  17
   1   9   1  82  26   0   0   2 115   1  90   1  28   1   7  78   1   4
   1  82   8   1  10   1   7  78   1  14   1  82   8   1   9   1  89  26
   0   0   2 115   1  94   1  28   1  90   1  10   1  82  26   0   0   2
 115   1  95   1  28   1  63  51  90  52  26   0   2 115   1  96   1  28
   1  63  51  94  52  26   0   0   2 115   1  99   1  28   1  16   1  27
  27   1  65  26   0   0   2  91   1   7   7  78   1  14   1  99   8   1
   4   1  17   1  28  28   1  16   8   0   2   2  76   1  28   1  16   1
  12   1  76  26   0   0   2 115   1 100  26   0   2 115   1 101  26   0
   2  91   1   7  95   1  29   1  96   8   1 125   0   2   2 100   1  28
   1  95  26   0   2   2 101   1  28   1  96  26   0   2 127   1  77   1
 125   0   2   2 100   1  28   1  96  26   0   2   2 101   1  28   1  95
  26   0   2 127   0   0   2  91   1   7  76   8   1 125   0   2   2  63
  51  90  52   1  28   1 101  26   0   2   2  63  51  94  52   1  28   1
 100  26   0   2 127   1  77   1 125   0   2   2  63  51  90  52   1  28
   1 100  26   0   2   2  63  51  94  52   1  28   1 101  26   0   2 127
   0 127   0]"
binarySearch,4,2.16233278697537,-1.04895541553377,1.35703867076976,0.619665721355013,0.4677045960661511,-1.47322591245642,0.944150834751954,218208.0,180000.0,335889.0,178518.0,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  71   1 115   1
  65  11   1  71   1 115   1  69  11   1  71   1 115   1  73   8   1 125
   0   2 115   1  76   1  28   1  73  26   0   2 115   1  78   1  28   1
  83   7  15   8  26   0   0   2 115   1  82   1  28   1  16   1  27  27
   1   7  65   1  12   1  69   8  26   0   2 115   1  89   1  28   1  17
   1   9   1  82  26   0   0   2 115   1  90   1  28   1   7  78   1   4
   1  82   8   1  10   1   7  78   1  14   1  82   8   1   9   1  89  26
   0   0   2 115   1  94   1  28   1  90   1  10   1  82  26   0   0   2
 115   1  95   1  28   1  63  51  90  52  26   0   2 115   1  96   1  28
   1  63  51  94  52  26   0   0   2 115   1  99   1  28   1  16   1  27
  27   1  65  26   0   0   2  91   1   7   7  78   1  14   1  99   8   1
   4   1  17   1  28  28   1  16   8   0   2   2  76   1  28   1  16   1
  12   1  76  26   0   0   2 115   1 100  26   0   2 115   1 101  26   0
   2  91   1   7  95   1  29   1  96   8   1 125   0   2   2 100   1  28
   1  95  26   0   2   2 101   1  28   1  96  26   0   2 127   1  77   1
 125   0   2   2 100   1  28   1  96  26   0   2   2 101   1  28   1  95
  26   0   2 127   0   0   2  91   1   7  76   8   1 125   0   2   2  63
  51  90  52   1  28   1 101  26   0   2   2  63  51  94  52   1  28   1
 100  26   0   2 127   1  77   1 125   0   2   2  63  51  90  52   1  28
   1 100  26   0   2   2  63  51  94  52   1  28   1 101  26   0   2 127
   0 127   0]"
binarySearch,8,2.23174946950947,-1.210988902113,1.40813315317397,0.7819525840957409,0.5738189335707871,-1.49249395631709,0.892404198788532,219584.0,178976.0,459555.0,181334.0,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  71   1 115   1
  65  11   1  71   1 115   1  69  11   1  71   1 115   1  73   8   1 125
   0   2 115   1  76   1  28   1  73  26   0   2 115   1  78   1  28   1
  83   7  15   8  26   0   0   2 115   1  82   1  28   1  16   1  27  27
   1   7  65   1  12   1  69   8  26   0   2 115   1  89   1  28   1  17
   1   9   1  82  26   0   0   2 115   1  90   1  28   1   7  78   1   4
   1  82   8   1  10   1   7  78   1  14   1  82   8   1   9   1  89  26
   0   0   2 115   1  94   1  28   1  90   1  10   1  82  26   0   0   2
 115   1  95   1  28   1  63  51  90  52  26   0   2 115   1  96   1  28
   1  63  51  94  52  26   0   0   2 115   1  99   1  28   1  16   1  27
  27   1  65  26   0   0   2  91   1   7   7  78   1  14   1  99   8   1
   4   1  17   1  28  28   1  16   8   0   2   2  76   1  28   1  16   1
  12   1  76  26   0   0   2 115   1 100  26   0   2 115   1 101  26   0
   2  91   1   7  95   1  29   1  96   8   1 125   0   2   2 100   1  28
   1  95  26   0   2   2 101   1  28   1  96  26   0   2 127   1  77   1
 125   0   2   2 100   1  28   1  96  26   0   2   2 101   1  28   1  95
  26   0   2 127   0   0   2  91   1   7  76   8   1 125   0   2   2  63
  51  90  52   1  28   1 101  26   0   2   2  63  51  94  52   1  28   1
 100  26   0   2 127   1  77   1 125   0   2   2  63  51  90  52   1  28
   1 100  26   0   2   2  63  51  94  52   1  28   1 101  26   0   2 127
   0 127   0]"
binarySearch,16,2.26956677142115,-1.30589334438657,1.4383563965021002,0.875034907100321,0.6344254676399841,-1.50397919378503,0.8618316677734309,222976.0,165248.0,670444.0,239852.0,"__kernel void A(__global uint* a, const uint b, const uint c, const uint d) {
  uint e = d;
  uint f = get_global_id(0);

  uint g = 1 << (b - c);
  uint h = 2 * g;

  uint i = (f % g) + (f / g) * h;

  uint j = i + g;

  uint k = a[i];
  uint l = a[j];

  uint m = 1 << b;

  if ((f / m) % 2 == 1)
    e = 1 - e;

  uint n;
  uint o;
  if (k > l) {
    n = k;
    o = l;
  } else {
    n = l;
    o = k;
  }

  if (e) {
    a[i] = o;
    a[j] = n;
  } else {
    a[i] = n;
    a[j] = o;
  }
}
","[ 59   1 118   1  31   7  58   1 115   9   1  63  11   1  71   1 115   1
  65  11   1  71   1 115   1  69  11   1  71   1 115   1  73   8   1 125
   0   2 115   1  76   1  28   1  73  26   0   2 115   1  78   1  28   1
  83   7  15   8  26   0   0   2 115   1  82   1  28   1  16   1  27  27
   1   7  65   1  12   1  69   8  26   0   2 115   1  89   1  28   1  17
   1   9   1  82  26   0   0   2 115   1  90   1  28   1   7  78   1   4
   1  82   8   1  10   1   7  78   1  14   1  82   8   1   9   1  89  26
   0   0   2 115   1  94   1  28   1  90   1  10   1  82  26   0   0   2
 115   1  95   1  28   1  63  51  90  52  26   0   2 115   1  96   1  28
   1  63  51  94  52  26   0   0   2 115   1  99   1  28   1  16   1  27
  27   1  65  26   0   0   2  91   1   7   7  78   1  14   1  99   8   1
   4   1  17   1  28  28   1  16   8   0   2   2  76   1  28   1  16   1
  12   1  76  26   0   0   2 115   1 100  26   0   2 115   1 101  26   0
   2  91   1   7  95   1  29   1  96   8   1 125   0   2   2 100   1  28
   1  95  26   0   2   2 101   1  28   1  96  26   0   2 127   1  77   1
 125   0   2   2 100   1  28   1  96  26   0   2   2 101   1  28   1  95
  26   0   2 127   0   0   2  91   1   7  76   8   1 125   0   2   2  63
  51  90  52   1  28   1 101  26   0   2   2  63  51  94  52   1  28   1
 100  26   0   2 127   1  77   1 125   0   2   2  63  51  90  52   1  28
   1 100  26   0   2   2  63  51  94  52   1  28   1 101  26   0   2 127
   0 127   0]"
mvUncoal,1,0.645811459781496,1.8806786639438104,-0.6729242813890078,-0.314668188237022,-1.3642941546347498,0.793239950056374,-0.12001537635019,4296992.0,4228832.0,50180333.0,34133925.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76   8   1 125   0   2 115   1  78   1  28   1  83
   7  15   8  26   0   2  91   1   7  78   1  27   1  73   8   1 125   0
   2   2  71   1  58   1  80   9   1  82   1  28   1  63   1  10   1  78
   1   9   1  69  26   0   0   2   2  80   1  89   1  28   1  15  26   0
   2   2  81   1   7  93   1  90   1  28   1  15  26   1  90   1  27   1
  69  26   1  10  10  90   8   0   2   2   2  89   1  10  28   1  82  51
  90  52   1   9   1  65  51  90  52  26   0   0   2   2  76  51  78  52
   1  28   1  89  26   0   2 127   0 127]"
mvUncoal,2,0.7830447382028729,1.6758485475787,-0.865677717995968,-0.6095250337415861,-1.31513601677328,0.38236791783990703,-0.139612829063888,5955008.0,8041888.0,45480778.0,21755259.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76   8   1 125   0   2 115   1  78   1  28   1  83
   7  15   8  26   0   2  91   1   7  78   1  27   1  73   8   1 125   0
   2   2  71   1  58   1  80   9   1  82   1  28   1  63   1  10   1  78
   1   9   1  69  26   0   0   2   2  80   1  89   1  28   1  15  26   0
   2   2  81   1   7  93   1  90   1  28   1  15  26   1  90   1  27   1
  69  26   1  10  10  90   8   0   2   2   2  89   1  10  28   1  82  51
  90  52   1   9   1  65  51  90  52  26   0   0   2   2  76  51  78  52
   1  28   1  89  26   0   2 127   0 127]"
mvUncoal,4,0.798358519048876,1.5167188731268102,-1.1187533859193,-0.816700268426833,-1.23688166047608,-0.12169801388136,-0.24206454356600304,10962848.0,6580160.0,37056445.0,25815556.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76   8   1 125   0   2 115   1  78   1  28   1  83
   7  15   8  26   0   2  91   1   7  78   1  27   1  73   8   1 125   0
   2   2  71   1  58   1  80   9   1  82   1  28   1  63   1  10   1  78
   1   9   1  69  26   0   0   2   2  80   1  89   1  28   1  15  26   0
   2   2  81   1   7  93   1  90   1  28   1  15  26   1  90   1  27   1
  69  26   1  10  10  90   8   0   2   2   2  89   1  10  28   1  82  51
  90  52   1   9   1  65  51  90  52  26   0   0   2   2  76  51  78  52
   1  28   1  89  26   0   2 127   0 127]"
mvUncoal,8,0.577888420929543,1.4442235958341598,-1.4964943066443102,-0.878115866795115,-1.09808091138187,-0.8288034400712959,-0.513104039106595,8682176.0,7720800.0,26158445.0,28837630.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76   8   1 125   0   2 115   1  78   1  28   1  83
   7  15   8  26   0   2  91   1   7  78   1  27   1  73   8   1 125   0
   2   2  71   1  58   1  80   9   1  82   1  28   1  63   1  10   1  78
   1   9   1  69  26   0   0   2   2  80   1  89   1  28   1  15  26   0
   2   2  81   1   7  93   1  90   1  28   1  15  26   1  90   1  27   1
  69  26   1  10  10  90   8   0   2   2   2  89   1  10  28   1  82  51
  90  52   1   9   1  65  51  90  52  26   0   0   2   2  76  51  78  52
   1  28   1  89  26   0   2 127   0 127]"
mvUncoal,16,-0.0546099309847232,1.48856921662839,-2.15357730090424,-0.7429414610089201,-0.832515419107773,-2.01798986374648,-1.1086138434979298,9142016.0,7701472.0,27420000.0,27277037.0,"__kernel void A(const __global float* a, const __global float* b, uint c, uint d, __global float* e) {
  uint f = get_global_id(0);
  if (f < d) {
    const __global float* g = a + f * c;

    float h = 0;
    for (int i = 0; i < c; ++i)
      h += g[i] * b[i];

    e[f] = h;
  }
}","[ 59   1 118   1  31   7  71   1  58   1  80   9   1  63  11   1  71   1
  58   1  80   9   1  65  11   1 115   1  69  11   1 115   1  73  11   1
  58   1  80   9   1  76   8   1 125   0   2 115   1  78   1  28   1  83
   7  15   8  26   0   2  91   1   7  78   1  27   1  73   8   1 125   0
   2   2  71   1  58   1  80   9   1  82   1  28   1  63   1  10   1  78
   1   9   1  69  26   0   0   2   2  80   1  89   1  28   1  15  26   0
   2   2  81   1   7  93   1  90   1  28   1  15  26   1  90   1  27   1
  69  26   1  10  10  90   8   0   2   2   2  89   1  10  28   1  82  51
  90  52   1   9   1  65  51  90  52  26   0   0   2   2  76  51  78  52
   1  28   1  89  26   0   2 127   0 127]"
sobel,1,1.95142037707225,-1.34317644969957,0.0295662909081444,1.4067512861593,-0.557614240710147,0.5090244309333739,0.8944787602318041,887552.0,416288.0,411333.0,149482.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
sobel,2,2.00182194768729,-1.46306239416847,0.0494924220728699,1.70629624841277,-0.422611617323761,0.5956779553866589,0.7231842612595061,892512.0,390112.0,394889.0,148888.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
sobel,4,2.13445858121213,-1.6780513686468,0.0765361650439023,1.83907367287743,-0.280673642210266,0.508382943339505,0.667341251504069,902848.0,430080.0,390889.0,150370.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
sobel,8,2.20985529427134,-1.80939987497817,0.0939231064463189,1.91927951856052,-0.19579313647233804,0.46025094329379,0.628530418817692,905536.0,492160.0,393333.0,179407.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
sobel,16,2.24678310630363,-1.88438023499911,0.103191267376346,1.96338018920495,-0.14993053046014002,0.43392314300796,0.6055756988453349,923296.0,569696.0,526000.0,268741.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
sobel,32,-4.29256324013299,7.47095656763408,4.40017882235293,-0.04336584492849098,1.18367756855873,2.56461385039037,-0.7135504506808579,1611296.0,1138144.0,1001778.0,587408.0,"__kernel void A(__global uchar4* a, __global uchar4* b) {
  uint c = get_global_id(0);
  uint d = get_global_id(1);

  uint e = get_global_size(0);
  uint f = get_global_size(1);

  float4 g = (float4)(0);
  float4 h = g;

  int i = c + d * e;

  if (c >= 1 && c < (e - 1) && d >= 1 && d < f - 1) {
    float4 j = convert_float4(a[i - 1 - e]);
    float4 k = convert_float4(a[i - e]);
    float4 l = convert_float4(a[i + 1 - e]);
    float4 m = convert_float4(a[i - 1]);
    float4 n = convert_float4(a[i]);
    float4 o = convert_float4(a[i + 1]);
    float4 p = convert_float4(a[i - 1 + e]);
    float4 q = convert_float4(a[i + e]);
    float4 r = convert_float4(a[i + 1 + e]);

    g = j + (float4)(2) * k + l - p - (float4)(2) * q - r;

    h = j - l + (float4)(2) * m - (float4)(2) * o + p - r;

    b[i] = convert_uchar4(hypot(g, h) / (float4)(2));
  }
}
","[ 59   1 118   1  31   7  58   1 114  19   9   1  63  11   1  58   1 114
  19   9   1  65   8   1 125   0   2 115   1  69   1  28   1  83   7  15
   8  26   0   2 115   1  73   1  28   1  83   7  16   8  26   0   0   2
 115   1  76   1  28   1  84   7  15   8  26   0   2 115   1  78   1  28
   1  84   7  16   8  26   0   0   2  80  19   1  82   1  28   1   7  80
  19   8   7  15   8  26   0   2  80  19   1  89   1  28   1  82  26   0
   0   2  93   1  90   1  28   1  69   1  10   1  73   1   9   1  76  26
   0   0   2  91   1   7  69   1  29  28   1  16   1   5   5   1  69   1
  27   1   7  76   1  12   1  16   8   1   5   5   1  73   1  29  28   1
  16   1   5   5   1  73   1  27   1  78   1  12   1  16   8   1 125   0
   2   2  80  19   1  94   1  28   1  69 101 100 117  76 104 111  54  80
  19   7  63  51  90   1  12   1  16   1  12   1  76  52   8  26   0   2
   2  80  19   1  95   1  28   1  69 101 100 117  76 104 111  54  80  19
   7  63  51  90   1  12   1  76  52   8  26   0   2   2  80  19   1  96
   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1
  10   1  16   1  12   1  76  52   8  26   0   2   2  80  19   1  99   1
  28   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12
   1  16  52   8  26   0   2   2  80  19   1 100   1  28   1  69 101 100
 117  76 104 111  54  80  19   7  63  51  90  52   8  26   0   2   2  80
  19   1 101   1  28   1  69 101 100 117  76 104 111  54  80  19   7  63
  51  90   1  10   1  16  52   8  26   0   2   2  80  19   1 102   1  28
   1  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  12   1
  16   1  10   1  76  52   8  26   0   2   2  80  19   1 103   1  28   1
  69 101 100 117  76 104 111  54  80  19   7  63  51  90   1  10   1  76
  52   8  26   0   2   2  80  19   1 104   1  28   1  69 101 100 117  76
 104 111  54  80  19   7  63  51  90   1  10   1  16   1  10   1  76  52
   8  26   0   0   2   2  82   1  28   1  94   1  10   1   7  80  19   8
   7  17   8   1   9   1  95   1  10   1  96   1  12   1 102   1  12   1
   7  80  19   8   7  17   8   1   9   1 103   1  12   1 104  26   0   0
   2   2  89   1  28   1  94   1  12   1  96   1  10   1   7  80  19   8
   7  17   8   1   9   1  99   1  12   1   7  80  19   8   7  17   8   1
   9   1 101   1  10   1 102   1  12   1 104  26   0   0   2   2  65  51
  90  52   1  28   1  69 101 100 117  76 104 111  54 114  19   7  89 123
 102 101 111   7  82  11   1  89   8   1  14   1   7  80  19   8   7  17
   8   8  26   0   2 127   0 127   0]"
reduce,1,1.74816772240522,-1.96812154718066,0.755707558859774,-1.09721606791526,2.7616534042999703,1.00543546545465,-2.004507625739,2988672.0,2663552.0,3883445.0,1116593.0,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[ 59   1 118   1  31   7  58   1 115  19   9   1  63  11   1  58   1 115
  19   9   1  65  11   1  60   1 115  19   9   1  69   8   1 125   0   2
 116   1  93   1  73   1  28   1  85   7  15   8  26   0   2 116   1  93
   1  76   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7
  15   8  26   0   2 116   1  93   1  78   1  28   1  83   7  15   8  26
   0   0   2 116   1  93   1  82   1  28   1  86   7  15   8  26   0   2
 116   1  93   1  89   1  28   1  78   1   9   1  17  26   0   2  69  51
  73  52   1  28   1  63  51  89  52   1  10   1  63  51  89   1  10   1
  16  52  26   0   0   2  66   7  16   8  26   0   0   2  81   1   7 116
   1  93   1  90   1  28   1  82   1  29  29   1  16  26   1  90   1  29
   1  15  26   1  90   1  29  29  28   1  16   8   1 125   0   2   2  91
   1   7  73   1  27   1  90   8   1 125   0   2   2   2  69  51  73  52
   1  10  28   1  69  51  73   1  10   1  90  52  26   0   2   2 127   0
   2   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  73   1
  28  28   1  15   8   0   2   2  65  51  76  52   1  28   1  69  51  15
  52  26   0 127   0]"
reduce,2,1.54337950359281,-2.11074064987292,0.902382247579808,-1.2171425364040602,2.3650044374148704,0.547973549803953,-0.6499932070112371,2825824.0,2741504.0,3153445.0,1117778.0,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[ 59   1 118   1  31   7  58   1 115  19   9   1  63  11   1  58   1 115
  19   9   1  65  11   1  60   1 115  19   9   1  69   8   1 125   0   2
 116   1  93   1  73   1  28   1  85   7  15   8  26   0   2 116   1  93
   1  76   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7
  15   8  26   0   2 116   1  93   1  78   1  28   1  83   7  15   8  26
   0   0   2 116   1  93   1  82   1  28   1  86   7  15   8  26   0   2
 116   1  93   1  89   1  28   1  78   1   9   1  17  26   0   2  69  51
  73  52   1  28   1  63  51  89  52   1  10   1  63  51  89   1  10   1
  16  52  26   0   0   2  66   7  16   8  26   0   0   2  81   1   7 116
   1  93   1  90   1  28   1  82   1  29  29   1  16  26   1  90   1  29
   1  15  26   1  90   1  29  29  28   1  16   8   1 125   0   2   2  91
   1   7  73   1  27   1  90   8   1 125   0   2   2   2  69  51  73  52
   1  10  28   1  69  51  73   1  10   1  90  52  26   0   2   2 127   0
   2   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  73   1
  28  28   1  15   8   0   2   2  65  51  76  52   1  28   1  69  51  15
  52  26   0 127   0]"
reduce,4,1.15932627344226,-2.5692774080844303,1.01619772081294,-1.2824298283573,2.35358565758558,0.42770802073488506,-0.158625506293046,2650176.0,2931936.0,3558333.0,1121926.0,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[ 59   1 118   1  31   7  58   1 115  19   9   1  63  11   1  58   1 115
  19   9   1  65  11   1  60   1 115  19   9   1  69   8   1 125   0   2
 116   1  93   1  73   1  28   1  85   7  15   8  26   0   2 116   1  93
   1  76   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7
  15   8  26   0   2 116   1  93   1  78   1  28   1  83   7  15   8  26
   0   0   2 116   1  93   1  82   1  28   1  86   7  15   8  26   0   2
 116   1  93   1  89   1  28   1  78   1   9   1  17  26   0   2  69  51
  73  52   1  28   1  63  51  89  52   1  10   1  63  51  89   1  10   1
  16  52  26   0   0   2  66   7  16   8  26   0   0   2  81   1   7 116
   1  93   1  90   1  28   1  82   1  29  29   1  16  26   1  90   1  29
   1  15  26   1  90   1  29  29  28   1  16   8   1 125   0   2   2  91
   1   7  73   1  27   1  90   8   1 125   0   2   2   2  69  51  73  52
   1  10  28   1  69  51  73   1  10   1  90  52  26   0   2   2 127   0
   2   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  73   1
  28  28   1  15   8   0   2   2  65  51  76  52   1  28   1  69  51  15
  52  26   0 127   0]"
reduce,8,0.283719773800372,-3.29577695476832,1.08791198777789,-1.56653359609764,2.3564296623895897,0.3961522143133421,0.34931531207572697,2903616.0,2784704.0,5162445.0,1136741.0,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[ 59   1 118   1  31   7  58   1 115  19   9   1  63  11   1  58   1 115
  19   9   1  65  11   1  60   1 115  19   9   1  69   8   1 125   0   2
 116   1  93   1  73   1  28   1  85   7  15   8  26   0   2 116   1  93
   1  76   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7
  15   8  26   0   2 116   1  93   1  78   1  28   1  83   7  15   8  26
   0   0   2 116   1  93   1  82   1  28   1  86   7  15   8  26   0   2
 116   1  93   1  89   1  28   1  78   1   9   1  17  26   0   2  69  51
  73  52   1  28   1  63  51  89  52   1  10   1  63  51  89   1  10   1
  16  52  26   0   0   2  66   7  16   8  26   0   0   2  81   1   7 116
   1  93   1  90   1  28   1  82   1  29  29   1  16  26   1  90   1  29
   1  15  26   1  90   1  29  29  28   1  16   8   1 125   0   2   2  91
   1   7  73   1  27   1  90   8   1 125   0   2   2   2  69  51  73  52
   1  10  28   1  69  51  73   1  10   1  90  52  26   0   2   2 127   0
   2   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  73   1
  28  28   1  15   8   0   2   2  65  51  76  52   1  28   1  69  51  15
  52  26   0 127   0]"
reduce,16,-1.53512718540179,-4.6277552198536505,1.13196715343416,-2.21888347731085,2.3688843193577203,0.461695161042618,1.08516802221032,3560480.0,4749504.0,9764111.0,1310815.0,"__kernel void A(__global uint4* a, __global uint4* b, __local uint4* c) {
  unsigned int d = get_local_id(0);
  unsigned int e = get_group_id(0);
  unsigned int f = get_global_id(0);

  unsigned int g = get_local_size(0);
  unsigned int h = f * 2;
  c[d] = a[h] + a[h + 1];

  barrier(1);

  for (unsigned int i = g >> 1; i > 0; i >>= 1) {
    if (d < i) {
      c[d] += c[d + i];
    }
    barrier(1);
  }

  if (d == 0)
    b[e] = c[0];
}
","[ 59   1 118   1  31   7  58   1 115  19   9   1  63  11   1  58   1 115
  19   9   1  65  11   1  60   1 115  19   9   1  69   8   1 125   0   2
 116   1  93   1  73   1  28   1  85   7  15   8  26   0   2 116   1  93
   1  76   1  28   1  82  76 111  54  82 104 101 113 102  54  90  73   7
  15   8  26   0   2 116   1  93   1  78   1  28   1  83   7  15   8  26
   0   0   2 116   1  93   1  82   1  28   1  86   7  15   8  26   0   2
 116   1  93   1  89   1  28   1  78   1   9   1  17  26   0   2  69  51
  73  52   1  28   1  63  51  89  52   1  10   1  63  51  89   1  10   1
  16  52  26   0   0   2  66   7  16   8  26   0   0   2  81   1   7 116
   1  93   1  90   1  28   1  82   1  29  29   1  16  26   1  90   1  29
   1  15  26   1  90   1  29  29  28   1  16   8   1 125   0   2   2  91
   1   7  73   1  27   1  90   8   1 125   0   2   2   2  69  51  73  52
   1  10  28   1  69  51  73   1  10   1  90  52  26   0   2   2 127   0
   2   2  66   7  16   8  26   0   2 127   0   0   2  91   1   7  73   1
  28  28   1  15   8   0   2   2  65  51  76  52   1  28   1  69  51  15
  52  26   0 127   0]"
nbody,1,0.147379372923516,0.5511160101579661,-2.3674455687199902,-0.6394304067798771,0.00586659491912519,2.43347530586092,-1.34776692227903,54232576.0,28226752.0,113667000.0,21965482.0,"__kernel void A(__global float4* a, __global float4* b, unsigned int c, float d, float e, __global float4* f, __global float4* g) {
  unsigned int h = get_global_id(0);
  float4 i = a[h];
  float4 j = (float4)0.0f;

  unsigned int k = 0;
  for (; (k + 8) < c;) {
    for (int l = 0; l < 8; l++, k++) {
      float4 m = a[k];
      float4 n;
      n.xyz = m.xyz - i.xyz;
      float o = n.x * n.x + n.y * n.y + n.z * n.z;

      float p = 1.0f / sqrt(o + e);
      float q = p * p * p;
      float r = m.w * q;

      j.xyz += r * n.xyz;
    }
  }
  for (; k < c; k++) {
    float4 m = a[k];

    float4 n;
    n.xyz = m.xyz - i.xyz;
    float o = n.x * n.x + n.y * n.y + n.z * n.z;

    float p = 1.0f / sqrt(o + e);
    float q = p * p * p;
    float r = m.w * q;

    j.xyz += r * n.xyz;
  }

  float4 s = b[h];

  float4 t;
  t.xyz = i.xyz + s.xyz * d + j.xyz * 0.5f * d * d;
  t.w = i.w;

  float4 u;
  u.xyz = s.xyz + j.xyz * d;
  u.w = s.w;

  f[h] = t;
  g[h] = u;
}
","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1 116   1  93   1  69  11   1  80   1  73  11   1
  80   1  76  11   1  58   1  80  19   9   1  78  11   1  58   1  80  19
   9   1  82   8   1 125   0   2 116   1  93   1  89   1  28   1  83   7
  15   8  26   0   2  80  19   1  90   1  28   1  63  51  89  52  26   0
   2  80  19   1  94   1  28   1   7  80  19   8  15  13  15  78  26   0
   0   2 116   1  93   1  95   1  28   1  15  26   0   2  81   1   7  26
   1   7  95   1  10   1  23   8   1  27   1  69  26   8   1 125   0   2
   2  81   1   7  93   1  96   1  28   1  15  26   1  96   1  27   1  23
  26   1  96  10  10  11   1  95  10  10   8   1 125   0   2   2   2  80
  19   1  99   1  28   1  63  51  95  52  26   0   2   2   2  80  19   1
 100  26   0   2   2   2 100  13 122 123 124   1  28   1  99  13 122 123
 124   1  12   1  90  13 122 123 124  26   0   2   2   2  80   1 101   1
  28   1 100  13 122   1   9   1 100  13 122   1  10   1 100  13 123   1
   9   1 100  13 123   1  10   1 100  13 124   1   9   1 100  13 124  26
   0   0   2   2   2  80   1 102   1  28   1  16  13  15  78   1  14   1
 110   7 101   1  10   1  76   8  26   0   2   2   2  80   1 103   1  28
   1 102   1   9   1 102   1   9   1 102  26   0   2   2   2  80   1 104
   1  28   1  99  13 120   1   9   1 103  26   0   0   2   2   2  94  13
 122 123 124   1  10  28   1 104   1   9   1 100  13 122 123 124  26   0
   2   2 127   0   2 127   0   2  81   1   7  26   1  95   1  27   1  69
  26   1  95  10  10   8   1 125   0   2   2  80  19   1  99   1  28   1
  63  51  95  52  26   0   0   2   2  80  19   1 100  26   0   2   2 100
  13 122 123 124   1  28   1  99  13 122 123 124   1  12   1  90  13 122
 123 124  26   0   2   2  80   1 101   1  28   1 100  13 122   1   9   1
 100  13 122   1  10   1 100  13 123   1   9   1 100  13 123   1  10   1
 100  13 124   1   9   1 100  13 124  26   0   0   2   2  80   1 102   1
  28   1  16  13  15  78   1  14   1 110   7 101   1  10   1  76   8  26
   0   2   2  80   1 103   1  28   1 102   1   9   1 102   1   9   1 102
  26   0   2   2  80   1 104   1  28   1  99  13 120   1   9   1 103  26
   0   0   2   2  94  13 122 123 124   1  10  28   1 104   1   9   1 100
  13 122 123 124  26   0   2 127   0   0   2  80  19   1 107   1  28   1
  65  51  89  52  26   0   0   2  80  19   1 111  26   0   2 111  13 122
 123 124   1  28   1  90  13 122 123 124   1  10   1 107  13 122 123 124
   1   9   1  73   1  10   1  94  13 122 123 124   1   9   1  15  13  20
  78   1   9   1  73   1   9   1  73  26   0   2 111  13 120   1  28   1
  90  13 120  26   0   0   2  80  19   1 113  26   0   2 113  13 122 123
 124   1  28   1 107  13 122 123 124   1  10   1  94  13 122 123 124   1
   9   1  73  26   0   2 113  13 120   1  28   1 107  13 120  26   0   0
   2  78  51  89  52   1  28   1 111  26   0   2  82  51  89  52   1  28
   1 113  26   0 127   0]"
nbody,2,-0.0986965383429528,0.466055177287964,-2.93434717953808,-0.8382053592838951,-0.116478673706507,2.3805736774091004,-1.28342800169806,53400608.0,21404416.0,63235777.0,21135110.0,"__kernel void A(__global float4* a, __global float4* b, unsigned int c, float d, float e, __global float4* f, __global float4* g) {
  unsigned int h = get_global_id(0);
  float4 i = a[h];
  float4 j = (float4)0.0f;

  unsigned int k = 0;
  for (; (k + 8) < c;) {
    for (int l = 0; l < 8; l++, k++) {
      float4 m = a[k];
      float4 n;
      n.xyz = m.xyz - i.xyz;
      float o = n.x * n.x + n.y * n.y + n.z * n.z;

      float p = 1.0f / sqrt(o + e);
      float q = p * p * p;
      float r = m.w * q;

      j.xyz += r * n.xyz;
    }
  }
  for (; k < c; k++) {
    float4 m = a[k];

    float4 n;
    n.xyz = m.xyz - i.xyz;
    float o = n.x * n.x + n.y * n.y + n.z * n.z;

    float p = 1.0f / sqrt(o + e);
    float q = p * p * p;
    float r = m.w * q;

    j.xyz += r * n.xyz;
  }

  float4 s = b[h];

  float4 t;
  t.xyz = i.xyz + s.xyz * d + j.xyz * 0.5f * d * d;
  t.w = i.w;

  float4 u;
  u.xyz = s.xyz + j.xyz * d;
  u.w = s.w;

  f[h] = t;
  g[h] = u;
}
","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1 116   1  93   1  69  11   1  80   1  73  11   1
  80   1  76  11   1  58   1  80  19   9   1  78  11   1  58   1  80  19
   9   1  82   8   1 125   0   2 116   1  93   1  89   1  28   1  83   7
  15   8  26   0   2  80  19   1  90   1  28   1  63  51  89  52  26   0
   2  80  19   1  94   1  28   1   7  80  19   8  15  13  15  78  26   0
   0   2 116   1  93   1  95   1  28   1  15  26   0   2  81   1   7  26
   1   7  95   1  10   1  23   8   1  27   1  69  26   8   1 125   0   2
   2  81   1   7  93   1  96   1  28   1  15  26   1  96   1  27   1  23
  26   1  96  10  10  11   1  95  10  10   8   1 125   0   2   2   2  80
  19   1  99   1  28   1  63  51  95  52  26   0   2   2   2  80  19   1
 100  26   0   2   2   2 100  13 122 123 124   1  28   1  99  13 122 123
 124   1  12   1  90  13 122 123 124  26   0   2   2   2  80   1 101   1
  28   1 100  13 122   1   9   1 100  13 122   1  10   1 100  13 123   1
   9   1 100  13 123   1  10   1 100  13 124   1   9   1 100  13 124  26
   0   0   2   2   2  80   1 102   1  28   1  16  13  15  78   1  14   1
 110   7 101   1  10   1  76   8  26   0   2   2   2  80   1 103   1  28
   1 102   1   9   1 102   1   9   1 102  26   0   2   2   2  80   1 104
   1  28   1  99  13 120   1   9   1 103  26   0   0   2   2   2  94  13
 122 123 124   1  10  28   1 104   1   9   1 100  13 122 123 124  26   0
   2   2 127   0   2 127   0   2  81   1   7  26   1  95   1  27   1  69
  26   1  95  10  10   8   1 125   0   2   2  80  19   1  99   1  28   1
  63  51  95  52  26   0   0   2   2  80  19   1 100  26   0   2   2 100
  13 122 123 124   1  28   1  99  13 122 123 124   1  12   1  90  13 122
 123 124  26   0   2   2  80   1 101   1  28   1 100  13 122   1   9   1
 100  13 122   1  10   1 100  13 123   1   9   1 100  13 123   1  10   1
 100  13 124   1   9   1 100  13 124  26   0   0   2   2  80   1 102   1
  28   1  16  13  15  78   1  14   1 110   7 101   1  10   1  76   8  26
   0   2   2  80   1 103   1  28   1 102   1   9   1 102   1   9   1 102
  26   0   2   2  80   1 104   1  28   1  99  13 120   1   9   1 103  26
   0   0   2   2  94  13 122 123 124   1  10  28   1 104   1   9   1 100
  13 122 123 124  26   0   2 127   0   0   2  80  19   1 107   1  28   1
  65  51  89  52  26   0   0   2  80  19   1 111  26   0   2 111  13 122
 123 124   1  28   1  90  13 122 123 124   1  10   1 107  13 122 123 124
   1   9   1  73   1  10   1  94  13 122 123 124   1   9   1  15  13  20
  78   1   9   1  73   1   9   1  73  26   0   2 111  13 120   1  28   1
  90  13 120  26   0   0   2  80  19   1 113  26   0   2 113  13 122 123
 124   1  28   1 107  13 122 123 124   1  10   1  94  13 122 123 124   1
   9   1  73  26   0   2 113  13 120   1  28   1 107  13 120  26   0   0
   2  78  51  89  52   1  28   1 111  26   0   2  82  51  89  52   1  28
   1 113  26   0 127   0]"
nbody,4,-0.57878948407634,0.10487746874934402,-3.50154279848216,-1.08749928163828,0.24480562618558604,1.8581394348366893,-0.995404093988118,57056128.0,23252352.0,40613334.0,22035110.0,"__kernel void A(__global float4* a, __global float4* b, unsigned int c, float d, float e, __global float4* f, __global float4* g) {
  unsigned int h = get_global_id(0);
  float4 i = a[h];
  float4 j = (float4)0.0f;

  unsigned int k = 0;
  for (; (k + 8) < c;) {
    for (int l = 0; l < 8; l++, k++) {
      float4 m = a[k];
      float4 n;
      n.xyz = m.xyz - i.xyz;
      float o = n.x * n.x + n.y * n.y + n.z * n.z;

      float p = 1.0f / sqrt(o + e);
      float q = p * p * p;
      float r = m.w * q;

      j.xyz += r * n.xyz;
    }
  }
  for (; k < c; k++) {
    float4 m = a[k];

    float4 n;
    n.xyz = m.xyz - i.xyz;
    float o = n.x * n.x + n.y * n.y + n.z * n.z;

    float p = 1.0f / sqrt(o + e);
    float q = p * p * p;
    float r = m.w * q;

    j.xyz += r * n.xyz;
  }

  float4 s = b[h];

  float4 t;
  t.xyz = i.xyz + s.xyz * d + j.xyz * 0.5f * d * d;
  t.w = i.w;

  float4 u;
  u.xyz = s.xyz + j.xyz * d;
  u.w = s.w;

  f[h] = t;
  g[h] = u;
}
","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1 116   1  93   1  69  11   1  80   1  73  11   1
  80   1  76  11   1  58   1  80  19   9   1  78  11   1  58   1  80  19
   9   1  82   8   1 125   0   2 116   1  93   1  89   1  28   1  83   7
  15   8  26   0   2  80  19   1  90   1  28   1  63  51  89  52  26   0
   2  80  19   1  94   1  28   1   7  80  19   8  15  13  15  78  26   0
   0   2 116   1  93   1  95   1  28   1  15  26   0   2  81   1   7  26
   1   7  95   1  10   1  23   8   1  27   1  69  26   8   1 125   0   2
   2  81   1   7  93   1  96   1  28   1  15  26   1  96   1  27   1  23
  26   1  96  10  10  11   1  95  10  10   8   1 125   0   2   2   2  80
  19   1  99   1  28   1  63  51  95  52  26   0   2   2   2  80  19   1
 100  26   0   2   2   2 100  13 122 123 124   1  28   1  99  13 122 123
 124   1  12   1  90  13 122 123 124  26   0   2   2   2  80   1 101   1
  28   1 100  13 122   1   9   1 100  13 122   1  10   1 100  13 123   1
   9   1 100  13 123   1  10   1 100  13 124   1   9   1 100  13 124  26
   0   0   2   2   2  80   1 102   1  28   1  16  13  15  78   1  14   1
 110   7 101   1  10   1  76   8  26   0   2   2   2  80   1 103   1  28
   1 102   1   9   1 102   1   9   1 102  26   0   2   2   2  80   1 104
   1  28   1  99  13 120   1   9   1 103  26   0   0   2   2   2  94  13
 122 123 124   1  10  28   1 104   1   9   1 100  13 122 123 124  26   0
   2   2 127   0   2 127   0   2  81   1   7  26   1  95   1  27   1  69
  26   1  95  10  10   8   1 125   0   2   2  80  19   1  99   1  28   1
  63  51  95  52  26   0   0   2   2  80  19   1 100  26   0   2   2 100
  13 122 123 124   1  28   1  99  13 122 123 124   1  12   1  90  13 122
 123 124  26   0   2   2  80   1 101   1  28   1 100  13 122   1   9   1
 100  13 122   1  10   1 100  13 123   1   9   1 100  13 123   1  10   1
 100  13 124   1   9   1 100  13 124  26   0   0   2   2  80   1 102   1
  28   1  16  13  15  78   1  14   1 110   7 101   1  10   1  76   8  26
   0   2   2  80   1 103   1  28   1 102   1   9   1 102   1   9   1 102
  26   0   2   2  80   1 104   1  28   1  99  13 120   1   9   1 103  26
   0   0   2   2  94  13 122 123 124   1  10  28   1 104   1   9   1 100
  13 122 123 124  26   0   2 127   0   0   2  80  19   1 107   1  28   1
  65  51  89  52  26   0   0   2  80  19   1 111  26   0   2 111  13 122
 123 124   1  28   1  90  13 122 123 124   1  10   1 107  13 122 123 124
   1   9   1  73   1  10   1  94  13 122 123 124   1   9   1  15  13  20
  78   1   9   1  73   1   9   1  73  26   0   2 111  13 120   1  28   1
  90  13 120  26   0   0   2  80  19   1 113  26   0   2 113  13 122 123
 124   1  28   1 107  13 122 123 124   1  10   1  94  13 122 123 124   1
   9   1  73  26   0   2 113  13 120   1  28   1 107  13 120  26   0   0
   2  78  51  89  52   1  28   1 111  26   0   2  82  51  89  52   1  28
   1 113  26   0 127   0]"
nbody,8,-1.75309464785951,-0.428577337732303,-4.53486648560708,-1.2793604632316,0.9414897534580172,1.10618472551388,-0.531706067541586,332913280.0,30859456.0,35734111.0,36427408.0,"__kernel void A(__global float4* a, __global float4* b, unsigned int c, float d, float e, __global float4* f, __global float4* g) {
  unsigned int h = get_global_id(0);
  float4 i = a[h];
  float4 j = (float4)0.0f;

  unsigned int k = 0;
  for (; (k + 8) < c;) {
    for (int l = 0; l < 8; l++, k++) {
      float4 m = a[k];
      float4 n;
      n.xyz = m.xyz - i.xyz;
      float o = n.x * n.x + n.y * n.y + n.z * n.z;

      float p = 1.0f / sqrt(o + e);
      float q = p * p * p;
      float r = m.w * q;

      j.xyz += r * n.xyz;
    }
  }
  for (; k < c; k++) {
    float4 m = a[k];

    float4 n;
    n.xyz = m.xyz - i.xyz;
    float o = n.x * n.x + n.y * n.y + n.z * n.z;

    float p = 1.0f / sqrt(o + e);
    float q = p * p * p;
    float r = m.w * q;

    j.xyz += r * n.xyz;
  }

  float4 s = b[h];

  float4 t;
  t.xyz = i.xyz + s.xyz * d + j.xyz * 0.5f * d * d;
  t.w = i.w;

  float4 u;
  u.xyz = s.xyz + j.xyz * d;
  u.w = s.w;

  f[h] = t;
  g[h] = u;
}
","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1 116   1  93   1  69  11   1  80   1  73  11   1
  80   1  76  11   1  58   1  80  19   9   1  78  11   1  58   1  80  19
   9   1  82   8   1 125   0   2 116   1  93   1  89   1  28   1  83   7
  15   8  26   0   2  80  19   1  90   1  28   1  63  51  89  52  26   0
   2  80  19   1  94   1  28   1   7  80  19   8  15  13  15  78  26   0
   0   2 116   1  93   1  95   1  28   1  15  26   0   2  81   1   7  26
   1   7  95   1  10   1  23   8   1  27   1  69  26   8   1 125   0   2
   2  81   1   7  93   1  96   1  28   1  15  26   1  96   1  27   1  23
  26   1  96  10  10  11   1  95  10  10   8   1 125   0   2   2   2  80
  19   1  99   1  28   1  63  51  95  52  26   0   2   2   2  80  19   1
 100  26   0   2   2   2 100  13 122 123 124   1  28   1  99  13 122 123
 124   1  12   1  90  13 122 123 124  26   0   2   2   2  80   1 101   1
  28   1 100  13 122   1   9   1 100  13 122   1  10   1 100  13 123   1
   9   1 100  13 123   1  10   1 100  13 124   1   9   1 100  13 124  26
   0   0   2   2   2  80   1 102   1  28   1  16  13  15  78   1  14   1
 110   7 101   1  10   1  76   8  26   0   2   2   2  80   1 103   1  28
   1 102   1   9   1 102   1   9   1 102  26   0   2   2   2  80   1 104
   1  28   1  99  13 120   1   9   1 103  26   0   0   2   2   2  94  13
 122 123 124   1  10  28   1 104   1   9   1 100  13 122 123 124  26   0
   2   2 127   0   2 127   0   2  81   1   7  26   1  95   1  27   1  69
  26   1  95  10  10   8   1 125   0   2   2  80  19   1  99   1  28   1
  63  51  95  52  26   0   0   2   2  80  19   1 100  26   0   2   2 100
  13 122 123 124   1  28   1  99  13 122 123 124   1  12   1  90  13 122
 123 124  26   0   2   2  80   1 101   1  28   1 100  13 122   1   9   1
 100  13 122   1  10   1 100  13 123   1   9   1 100  13 123   1  10   1
 100  13 124   1   9   1 100  13 124  26   0   0   2   2  80   1 102   1
  28   1  16  13  15  78   1  14   1 110   7 101   1  10   1  76   8  26
   0   2   2  80   1 103   1  28   1 102   1   9   1 102   1   9   1 102
  26   0   2   2  80   1 104   1  28   1  99  13 120   1   9   1 103  26
   0   0   2   2  94  13 122 123 124   1  10  28   1 104   1   9   1 100
  13 122 123 124  26   0   2 127   0   0   2  80  19   1 107   1  28   1
  65  51  89  52  26   0   0   2  80  19   1 111  26   0   2 111  13 122
 123 124   1  28   1  90  13 122 123 124   1  10   1 107  13 122 123 124
   1   9   1  73   1  10   1  94  13 122 123 124   1   9   1  15  13  20
  78   1   9   1  73   1   9   1  73  26   0   2 111  13 120   1  28   1
  90  13 120  26   0   0   2  80  19   1 113  26   0   2 113  13 122 123
 124   1  28   1 107  13 122 123 124   1  10   1  94  13 122 123 124   1
   9   1  73  26   0   2 113  13 120   1  28   1 107  13 120  26   0   0
   2  78  51  89  52   1  28   1 111  26   0   2  82  51  89  52   1  28
   1 113  26   0 127   0]"
nbody,16,-4.2796160744385805,-1.3284539100717,-6.52944784952753,-1.4155951523592902,2.2901638591125,-0.138573455782606,0.294632590716198,,,42521556.0,65451704.0,"__kernel void A(__global float4* a, __global float4* b, unsigned int c, float d, float e, __global float4* f, __global float4* g) {
  unsigned int h = get_global_id(0);
  float4 i = a[h];
  float4 j = (float4)0.0f;

  unsigned int k = 0;
  for (; (k + 8) < c;) {
    for (int l = 0; l < 8; l++, k++) {
      float4 m = a[k];
      float4 n;
      n.xyz = m.xyz - i.xyz;
      float o = n.x * n.x + n.y * n.y + n.z * n.z;

      float p = 1.0f / sqrt(o + e);
      float q = p * p * p;
      float r = m.w * q;

      j.xyz += r * n.xyz;
    }
  }
  for (; k < c; k++) {
    float4 m = a[k];

    float4 n;
    n.xyz = m.xyz - i.xyz;
    float o = n.x * n.x + n.y * n.y + n.z * n.z;

    float p = 1.0f / sqrt(o + e);
    float q = p * p * p;
    float r = m.w * q;

    j.xyz += r * n.xyz;
  }

  float4 s = b[h];

  float4 t;
  t.xyz = i.xyz + s.xyz * d + j.xyz * 0.5f * d * d;
  t.w = i.w;

  float4 u;
  u.xyz = s.xyz + j.xyz * d;
  u.w = s.w;

  f[h] = t;
  g[h] = u;
}
","[ 59   1 118   1  31   7  58   1  80  19   9   1  63  11   1  58   1  80
  19   9   1  65  11   1 116   1  93   1  69  11   1  80   1  73  11   1
  80   1  76  11   1  58   1  80  19   9   1  78  11   1  58   1  80  19
   9   1  82   8   1 125   0   2 116   1  93   1  89   1  28   1  83   7
  15   8  26   0   2  80  19   1  90   1  28   1  63  51  89  52  26   0
   2  80  19   1  94   1  28   1   7  80  19   8  15  13  15  78  26   0
   0   2 116   1  93   1  95   1  28   1  15  26   0   2  81   1   7  26
   1   7  95   1  10   1  23   8   1  27   1  69  26   8   1 125   0   2
   2  81   1   7  93   1  96   1  28   1  15  26   1  96   1  27   1  23
  26   1  96  10  10  11   1  95  10  10   8   1 125   0   2   2   2  80
  19   1  99   1  28   1  63  51  95  52  26   0   2   2   2  80  19   1
 100  26   0   2   2   2 100  13 122 123 124   1  28   1  99  13 122 123
 124   1  12   1  90  13 122 123 124  26   0   2   2   2  80   1 101   1
  28   1 100  13 122   1   9   1 100  13 122   1  10   1 100  13 123   1
   9   1 100  13 123   1  10   1 100  13 124   1   9   1 100  13 124  26
   0   0   2   2   2  80   1 102   1  28   1  16  13  15  78   1  14   1
 110   7 101   1  10   1  76   8  26   0   2   2   2  80   1 103   1  28
   1 102   1   9   1 102   1   9   1 102  26   0   2   2   2  80   1 104
   1  28   1  99  13 120   1   9   1 103  26   0   0   2   2   2  94  13
 122 123 124   1  10  28   1 104   1   9   1 100  13 122 123 124  26   0
   2   2 127   0   2 127   0   2  81   1   7  26   1  95   1  27   1  69
  26   1  95  10  10   8   1 125   0   2   2  80  19   1  99   1  28   1
  63  51  95  52  26   0   0   2   2  80  19   1 100  26   0   2   2 100
  13 122 123 124   1  28   1  99  13 122 123 124   1  12   1  90  13 122
 123 124  26   0   2   2  80   1 101   1  28   1 100  13 122   1   9   1
 100  13 122   1  10   1 100  13 123   1   9   1 100  13 123   1  10   1
 100  13 124   1   9   1 100  13 124  26   0   0   2   2  80   1 102   1
  28   1  16  13  15  78   1  14   1 110   7 101   1  10   1  76   8  26
   0   2   2  80   1 103   1  28   1 102   1   9   1 102   1   9   1 102
  26   0   2   2  80   1 104   1  28   1  99  13 120   1   9   1 103  26
   0   0   2   2  94  13 122 123 124   1  10  28   1 104   1   9   1 100
  13 122 123 124  26   0   2 127   0   0   2  80  19   1 107   1  28   1
  65  51  89  52  26   0   0   2  80  19   1 111  26   0   2 111  13 122
 123 124   1  28   1  90  13 122 123 124   1  10   1 107  13 122 123 124
   1   9   1  73   1  10   1  94  13 122 123 124   1   9   1  15  13  20
  78   1   9   1  73   1   9   1  73  26   0   2 111  13 120   1  28   1
  90  13 120  26   0   0   2  80  19   1 113  26   0   2 113  13 122 123
 124   1  28   1 107  13 122 123 124   1  10   1  94  13 122 123 124   1
   9   1  73  26   0   2 113  13 120   1  28   1 107  13 120  26   0   0
   2  78  51  89  52   1  28   1 111  26   0   2  82  51  89  52   1  28
   1 113  26   0 127   0]"
