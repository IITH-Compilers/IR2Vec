; ModuleID = 'shoc-1.1.5-S3D-rdwdot6_kernel.cl'
source_filename = "shoc-1.1.5-S3D-rdwdot6_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @rdwdot6_kernel(float* readonly, float* readonly, float* nocapture, float, float* nocapture readonly) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %6 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %7 = add i64 %6, 224
  %8 = getelementptr inbounds float, float* %0, i64 %7
  %9 = load float, float* %8, align 4, !tbaa !8
  %10 = getelementptr inbounds float, float* %1, i64 %7
  %11 = load float, float* %10, align 4, !tbaa !8
  %12 = fsub float %9, %11
  %13 = fsub float -0.000000e+00, %12
  %14 = add i64 %6, 232
  %15 = getelementptr inbounds float, float* %0, i64 %14
  %16 = load float, float* %15, align 4, !tbaa !8
  %17 = getelementptr inbounds float, float* %1, i64 %14
  %18 = load float, float* %17, align 4, !tbaa !8
  %19 = fsub float %16, %18
  %20 = fsub float %13, %19
  %21 = add i64 %6, 240
  %22 = getelementptr inbounds float, float* %0, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !8
  %24 = getelementptr inbounds float, float* %1, i64 %21
  %25 = load float, float* %24, align 4, !tbaa !8
  %26 = fsub float %23, %25
  %27 = fsub float %20, %26
  %28 = add i64 %6, 248
  %29 = getelementptr inbounds float, float* %0, i64 %28
  %30 = load float, float* %29, align 4, !tbaa !8
  %31 = getelementptr inbounds float, float* %1, i64 %28
  %32 = load float, float* %31, align 4, !tbaa !8
  %33 = fsub float %30, %32
  %34 = fsub float %27, %33
  %35 = add i64 %6, 256
  %36 = getelementptr inbounds float, float* %0, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !8
  %38 = getelementptr inbounds float, float* %1, i64 %35
  %39 = load float, float* %38, align 4, !tbaa !8
  %40 = fsub float %37, %39
  %41 = fsub float %34, %40
  %42 = add i64 %6, 264
  %43 = getelementptr inbounds float, float* %0, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !8
  %45 = getelementptr inbounds float, float* %1, i64 %42
  %46 = load float, float* %45, align 4, !tbaa !8
  %47 = fsub float %44, %46
  %48 = fadd float %41, %47
  %49 = add i64 %6, 304
  %50 = getelementptr inbounds float, float* %0, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !8
  %52 = getelementptr inbounds float, float* %1, i64 %49
  %53 = load float, float* %52, align 4, !tbaa !8
  %54 = fsub float %51, %53
  %55 = fsub float %48, %54
  %56 = add i64 %6, 312
  %57 = getelementptr inbounds float, float* %0, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !8
  %59 = getelementptr inbounds float, float* %1, i64 %56
  %60 = load float, float* %59, align 4, !tbaa !8
  %61 = fsub float %58, %60
  %62 = fadd float %55, %61
  %63 = add i64 %6, 328
  %64 = getelementptr inbounds float, float* %0, i64 %63
  %65 = load float, float* %64, align 4, !tbaa !8
  %66 = getelementptr inbounds float, float* %1, i64 %63
  %67 = load float, float* %66, align 4, !tbaa !8
  %68 = fsub float %65, %67
  %69 = fadd float %62, %68
  %70 = add i64 %6, 336
  %71 = getelementptr inbounds float, float* %0, i64 %70
  %72 = load float, float* %71, align 4, !tbaa !8
  %73 = getelementptr inbounds float, float* %1, i64 %70
  %74 = load float, float* %73, align 4, !tbaa !8
  %75 = fsub float %72, %74
  %76 = fadd float %69, %75
  %77 = add i64 %6, 352
  %78 = getelementptr inbounds float, float* %0, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !8
  %80 = getelementptr inbounds float, float* %1, i64 %77
  %81 = load float, float* %80, align 4, !tbaa !8
  %82 = fsub float %79, %81
  %83 = fadd float %76, %82
  %84 = add i64 %6, 360
  %85 = getelementptr inbounds float, float* %0, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !8
  %87 = getelementptr inbounds float, float* %1, i64 %84
  %88 = load float, float* %87, align 4, !tbaa !8
  %89 = fsub float %86, %88
  %90 = fadd float %83, %89
  %91 = add i64 %6, 368
  %92 = getelementptr inbounds float, float* %0, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !8
  %94 = getelementptr inbounds float, float* %1, i64 %91
  %95 = load float, float* %94, align 4, !tbaa !8
  %96 = fsub float %93, %95
  %97 = fadd float %90, %96
  %98 = add i64 %6, 440
  %99 = getelementptr inbounds float, float* %0, i64 %98
  %100 = load float, float* %99, align 4, !tbaa !8
  %101 = getelementptr inbounds float, float* %1, i64 %98
  %102 = load float, float* %101, align 4, !tbaa !8
  %103 = fsub float %100, %102
  %104 = fsub float %97, %103
  %105 = add i64 %6, 480
  %106 = getelementptr inbounds float, float* %0, i64 %105
  %107 = load float, float* %106, align 4, !tbaa !8
  %108 = getelementptr inbounds float, float* %1, i64 %105
  %109 = load float, float* %108, align 4, !tbaa !8
  %110 = fsub float %107, %109
  %111 = fadd float %104, %110
  %112 = add i64 %6, 512
  %113 = getelementptr inbounds float, float* %0, i64 %112
  %114 = load float, float* %113, align 4, !tbaa !8
  %115 = getelementptr inbounds float, float* %1, i64 %112
  %116 = load float, float* %115, align 4, !tbaa !8
  %117 = fsub float %114, %116
  %118 = fadd float %111, %117
  %119 = add i64 %6, 520
  %120 = getelementptr inbounds float, float* %0, i64 %119
  %121 = load float, float* %120, align 4, !tbaa !8
  %122 = getelementptr inbounds float, float* %1, i64 %119
  %123 = load float, float* %122, align 4, !tbaa !8
  %124 = fsub float %121, %123
  %125 = fadd float %118, %124
  %126 = add i64 %6, 552
  %127 = getelementptr inbounds float, float* %0, i64 %126
  %128 = load float, float* %127, align 4, !tbaa !8
  %129 = getelementptr inbounds float, float* %1, i64 %126
  %130 = load float, float* %129, align 4, !tbaa !8
  %131 = fsub float %128, %130
  %132 = fadd float %125, %131
  %133 = add i64 %6, 696
  %134 = getelementptr inbounds float, float* %0, i64 %133
  %135 = load float, float* %134, align 4, !tbaa !8
  %136 = getelementptr inbounds float, float* %1, i64 %133
  %137 = load float, float* %136, align 4, !tbaa !8
  %138 = fsub float %135, %137
  %139 = fadd float %132, %138
  %140 = add i64 %6, 752
  %141 = getelementptr inbounds float, float* %0, i64 %140
  %142 = load float, float* %141, align 4, !tbaa !8
  %143 = getelementptr inbounds float, float* %1, i64 %140
  %144 = load float, float* %143, align 4, !tbaa !8
  %145 = fsub float %142, %144
  %146 = fadd float %139, %145
  %147 = add i64 %6, 856
  %148 = getelementptr inbounds float, float* %0, i64 %147
  %149 = load float, float* %148, align 4, !tbaa !8
  %150 = getelementptr inbounds float, float* %1, i64 %147
  %151 = load float, float* %150, align 4, !tbaa !8
  %152 = fsub float %149, %151
  %153 = fadd float %146, %152
  %154 = add i64 %6, 864
  %155 = getelementptr inbounds float, float* %0, i64 %154
  %156 = load float, float* %155, align 4, !tbaa !8
  %157 = getelementptr inbounds float, float* %1, i64 %154
  %158 = load float, float* %157, align 4, !tbaa !8
  %159 = fsub float %156, %158
  %160 = fadd float %153, %159
  %161 = fadd float %159, %160
  %162 = add i64 %6, 872
  %163 = getelementptr inbounds float, float* %0, i64 %162
  %164 = load float, float* %163, align 4, !tbaa !8
  %165 = getelementptr inbounds float, float* %1, i64 %162
  %166 = load float, float* %165, align 4, !tbaa !8
  %167 = fsub float %164, %166
  %168 = fadd float %161, %167
  %169 = fadd float %167, %168
  %170 = add i64 %6, 880
  %171 = getelementptr inbounds float, float* %0, i64 %170
  %172 = load float, float* %171, align 4, !tbaa !8
  %173 = getelementptr inbounds float, float* %1, i64 %170
  %174 = load float, float* %173, align 4, !tbaa !8
  %175 = fsub float %172, %174
  %176 = fadd float %169, %175
  %177 = add i64 %6, 888
  %178 = getelementptr inbounds float, float* %0, i64 %177
  %179 = load float, float* %178, align 4, !tbaa !8
  %180 = getelementptr inbounds float, float* %1, i64 %177
  %181 = load float, float* %180, align 4, !tbaa !8
  %182 = fsub float %179, %181
  %183 = fadd float %176, %182
  %184 = add i64 %6, 896
  %185 = getelementptr inbounds float, float* %0, i64 %184
  %186 = load float, float* %185, align 4, !tbaa !8
  %187 = getelementptr inbounds float, float* %1, i64 %184
  %188 = load float, float* %187, align 4, !tbaa !8
  %189 = fsub float %186, %188
  %190 = fadd float %183, %189
  %191 = fadd float %189, %190
  %192 = add i64 %6, 928
  %193 = getelementptr inbounds float, float* %0, i64 %192
  %194 = load float, float* %193, align 4, !tbaa !8
  %195 = getelementptr inbounds float, float* %1, i64 %192
  %196 = load float, float* %195, align 4, !tbaa !8
  %197 = fsub float %194, %196
  %198 = fadd float %191, %197
  %199 = add i64 %6, 944
  %200 = getelementptr inbounds float, float* %0, i64 %199
  %201 = load float, float* %200, align 4, !tbaa !8
  %202 = getelementptr inbounds float, float* %1, i64 %199
  %203 = load float, float* %202, align 4, !tbaa !8
  %204 = fsub float %201, %203
  %205 = fadd float %198, %204
  %206 = add i64 %6, 952
  %207 = getelementptr inbounds float, float* %0, i64 %206
  %208 = load float, float* %207, align 4, !tbaa !8
  %209 = getelementptr inbounds float, float* %1, i64 %206
  %210 = load float, float* %209, align 4, !tbaa !8
  %211 = fsub float %208, %210
  %212 = fadd float %205, %211
  %213 = add i64 %6, 976
  %214 = getelementptr inbounds float, float* %0, i64 %213
  %215 = load float, float* %214, align 4, !tbaa !8
  %216 = getelementptr inbounds float, float* %1, i64 %213
  %217 = load float, float* %216, align 4, !tbaa !8
  %218 = fsub float %215, %217
  %219 = fadd float %212, %218
  %220 = add i64 %6, 1016
  %221 = getelementptr inbounds float, float* %0, i64 %220
  %222 = load float, float* %221, align 4, !tbaa !8
  %223 = getelementptr inbounds float, float* %1, i64 %220
  %224 = load float, float* %223, align 4, !tbaa !8
  %225 = fsub float %222, %224
  %226 = fadd float %219, %225
  %227 = add i64 %6, 1080
  %228 = getelementptr inbounds float, float* %0, i64 %227
  %229 = load float, float* %228, align 4, !tbaa !8
  %230 = getelementptr inbounds float, float* %1, i64 %227
  %231 = load float, float* %230, align 4, !tbaa !8
  %232 = fsub float %229, %231
  %233 = fadd float %226, %232
  %234 = add i64 %6, 1136
  %235 = getelementptr inbounds float, float* %0, i64 %234
  %236 = load float, float* %235, align 4, !tbaa !8
  %237 = getelementptr inbounds float, float* %1, i64 %234
  %238 = load float, float* %237, align 4, !tbaa !8
  %239 = fsub float %236, %238
  %240 = fadd float %233, %239
  %241 = add i64 %6, 1168
  %242 = getelementptr inbounds float, float* %0, i64 %241
  %243 = load float, float* %242, align 4, !tbaa !8
  %244 = getelementptr inbounds float, float* %1, i64 %241
  %245 = load float, float* %244, align 4, !tbaa !8
  %246 = fsub float %243, %245
  %247 = fadd float %240, %246
  %248 = add i64 %6, 1224
  %249 = getelementptr inbounds float, float* %0, i64 %248
  %250 = load float, float* %249, align 4, !tbaa !8
  %251 = getelementptr inbounds float, float* %1, i64 %248
  %252 = load float, float* %251, align 4, !tbaa !8
  %253 = fsub float %250, %252
  %254 = fadd float %247, %253
  %255 = add i64 %6, 1304
  %256 = getelementptr inbounds float, float* %0, i64 %255
  %257 = load float, float* %256, align 4, !tbaa !8
  %258 = getelementptr inbounds float, float* %1, i64 %255
  %259 = load float, float* %258, align 4, !tbaa !8
  %260 = fsub float %257, %259
  %261 = fadd float %254, %260
  %262 = add i64 %6, 1424
  %263 = getelementptr inbounds float, float* %0, i64 %262
  %264 = load float, float* %263, align 4, !tbaa !8
  %265 = getelementptr inbounds float, float* %1, i64 %262
  %266 = load float, float* %265, align 4, !tbaa !8
  %267 = fsub float %264, %266
  %268 = fadd float %261, %267
  %269 = add i64 %6, 1504
  %270 = getelementptr inbounds float, float* %0, i64 %269
  %271 = load float, float* %270, align 4, !tbaa !8
  %272 = getelementptr inbounds float, float* %1, i64 %269
  %273 = load float, float* %272, align 4, !tbaa !8
  %274 = fsub float %271, %273
  %275 = fadd float %268, %274
  %276 = fmul float %275, %3
  %277 = getelementptr inbounds float, float* %4, i64 10
  %278 = load float, float* %277, align 4, !tbaa !8
  %279 = fmul float %278, %276
  %280 = add i64 %6, 80
  %281 = getelementptr inbounds float, float* %2, i64 %280
  store float %279, float* %281, align 4, !tbaa !8
  %282 = load float, float* %8, align 4, !tbaa !8
  %283 = load float, float* %10, align 4, !tbaa !8
  %284 = fsub float %282, %283
  %285 = load float, float* %15, align 4, !tbaa !8
  %286 = load float, float* %17, align 4, !tbaa !8
  %287 = fsub float %285, %286
  %288 = fadd float %284, %287
  %289 = load float, float* %29, align 4, !tbaa !8
  %290 = load float, float* %31, align 4, !tbaa !8
  %291 = fsub float %289, %290
  %292 = fadd float %288, %291
  %293 = load float, float* %36, align 4, !tbaa !8
  %294 = load float, float* %38, align 4, !tbaa !8
  %295 = fsub float %293, %294
  %296 = fadd float %292, %295
  %297 = load float, float* %57, align 4, !tbaa !8
  %298 = load float, float* %59, align 4, !tbaa !8
  %299 = fsub float %297, %298
  %300 = fsub float %296, %299
  %301 = add i64 %6, 344
  %302 = getelementptr inbounds float, float* %0, i64 %301
  %303 = load float, float* %302, align 4, !tbaa !8
  %304 = getelementptr inbounds float, float* %1, i64 %301
  %305 = load float, float* %304, align 4, !tbaa !8
  %306 = fsub float %303, %305
  %307 = fadd float %300, %306
  %308 = add i64 %6, 408
  %309 = getelementptr inbounds float, float* %0, i64 %308
  %310 = load float, float* %309, align 4, !tbaa !8
  %311 = getelementptr inbounds float, float* %1, i64 %308
  %312 = load float, float* %311, align 4, !tbaa !8
  %313 = fsub float %310, %312
  %314 = fadd float %307, %313
  %315 = load float, float* %127, align 4, !tbaa !8
  %316 = load float, float* %129, align 4, !tbaa !8
  %317 = fsub float %315, %316
  %318 = fsub float %314, %317
  %319 = add i64 %6, 992
  %320 = getelementptr inbounds float, float* %0, i64 %319
  %321 = load float, float* %320, align 4, !tbaa !8
  %322 = getelementptr inbounds float, float* %1, i64 %319
  %323 = load float, float* %322, align 4, !tbaa !8
  %324 = fsub float %321, %323
  %325 = fadd float %318, %324
  %326 = add i64 %6, 1032
  %327 = getelementptr inbounds float, float* %0, i64 %326
  %328 = load float, float* %327, align 4, !tbaa !8
  %329 = getelementptr inbounds float, float* %1, i64 %326
  %330 = load float, float* %329, align 4, !tbaa !8
  %331 = fsub float %328, %330
  %332 = fadd float %325, %331
  %333 = fmul float %332, %3
  %334 = getelementptr inbounds float, float* %4, i64 11
  %335 = load float, float* %334, align 4, !tbaa !8
  %336 = fmul float %335, %333
  %337 = add i64 %6, 88
  %338 = getelementptr inbounds float, float* %2, i64 %337
  store float %336, float* %338, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 0, i32 1}
!5 = !{!"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float", !"float*"}
!7 = !{!"const", !"const", !"", !"", !"const"}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
