; ModuleID = 'shoc-1.1.5-S3D-ratxb_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratxb_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratxb_kernel(float* nocapture readonly, float* nocapture readonly, float* nocapture, float* nocapture, float* nocapture readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %7 = tail call i64 @_Z13get_global_idj(i32 0) #3
  %8 = getelementptr inbounds float, float* %0, i64 %7
  %9 = load float, float* %8, align 4, !tbaa !8
  %10 = getelementptr inbounds float, float* %1, i64 %7
  %11 = load float, float* %10, align 4, !tbaa !8
  %12 = fadd float %11, 0.000000e+00
  %13 = add i64 %7, 8
  %14 = getelementptr inbounds float, float* %1, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = fadd float %12, %15
  %17 = add i64 %7, 16
  %18 = getelementptr inbounds float, float* %1, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !8
  %20 = fadd float %16, %19
  %21 = add i64 %7, 24
  %22 = getelementptr inbounds float, float* %1, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !8
  %24 = fadd float %20, %23
  %25 = add i64 %7, 32
  %26 = getelementptr inbounds float, float* %1, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !8
  %28 = fadd float %24, %27
  %29 = add i64 %7, 40
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !8
  %32 = fadd float %28, %31
  %33 = add i64 %7, 48
  %34 = getelementptr inbounds float, float* %1, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !8
  %36 = fadd float %32, %35
  %37 = add i64 %7, 56
  %38 = getelementptr inbounds float, float* %1, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !8
  %40 = fadd float %36, %39
  %41 = add i64 %7, 64
  %42 = getelementptr inbounds float, float* %1, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !8
  %44 = fadd float %40, %43
  %45 = add i64 %7, 72
  %46 = getelementptr inbounds float, float* %1, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !8
  %48 = fadd float %44, %47
  %49 = add i64 %7, 80
  %50 = getelementptr inbounds float, float* %1, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !8
  %52 = fadd float %48, %51
  %53 = add i64 %7, 88
  %54 = getelementptr inbounds float, float* %1, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !8
  %56 = fadd float %52, %55
  %57 = add i64 %7, 96
  %58 = getelementptr inbounds float, float* %1, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !8
  %60 = fadd float %56, %59
  %61 = add i64 %7, 104
  %62 = getelementptr inbounds float, float* %1, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !8
  %64 = fadd float %60, %63
  %65 = add i64 %7, 112
  %66 = getelementptr inbounds float, float* %1, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !8
  %68 = fadd float %64, %67
  %69 = add i64 %7, 120
  %70 = getelementptr inbounds float, float* %1, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !8
  %72 = fadd float %68, %71
  %73 = add i64 %7, 128
  %74 = getelementptr inbounds float, float* %1, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !8
  %76 = fadd float %72, %75
  %77 = add i64 %7, 136
  %78 = getelementptr inbounds float, float* %1, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !8
  %80 = fadd float %76, %79
  %81 = add i64 %7, 144
  %82 = getelementptr inbounds float, float* %1, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !8
  %84 = fadd float %80, %83
  %85 = add i64 %7, 152
  %86 = getelementptr inbounds float, float* %1, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !8
  %88 = fadd float %84, %87
  %89 = add i64 %7, 160
  %90 = getelementptr inbounds float, float* %1, i64 %89
  %91 = load float, float* %90, align 4, !tbaa !8
  %92 = fadd float %88, %91
  %93 = add i64 %7, 168
  %94 = getelementptr inbounds float, float* %1, i64 %93
  %95 = load float, float* %94, align 4, !tbaa !8
  %96 = fadd float %92, %95
  %97 = fmul float %9, %5
  %98 = fsub float %96, %11
  %99 = fsub float %98, %31
  %100 = fadd float %99, %47
  %101 = fsub float %100, %55
  %102 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %101)
  %103 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %102)
  %104 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %103)
  %105 = tail call float @llvm.fmuladd.f32(float %11, float 0xBFD147AE20000000, float %96)
  %106 = tail call float @llvm.fmuladd.f32(float %31, float 0x4005333340000000, float %105)
  %107 = fadd float %106, %47
  %108 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %107)
  %109 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %108)
  %110 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %109)
  %111 = fadd float %96, %11
  %112 = tail call float @llvm.fmuladd.f32(float %31, float 5.000000e+00, float %111)
  %113 = fadd float %112, %47
  %114 = tail call float @llvm.fmuladd.f32(float %51, float 5.000000e-01, float %113)
  %115 = fadd float %55, %114
  %116 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %115)
  %117 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %116)
  %118 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %117)
  %119 = tail call float @llvm.fmuladd.f32(float %11, float 0x3FF6666660000000, float %96)
  %120 = tail call float @llvm.fmuladd.f32(float %31, float 0x402CCCCCC0000000, float %119)
  %121 = fadd float %120, %47
  %122 = tail call float @llvm.fmuladd.f32(float %51, float 7.500000e-01, float %121)
  %123 = tail call float @llvm.fmuladd.f32(float %55, float 0x4004CCCCC0000000, float %122)
  %124 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %123)
  %125 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %124)
  %126 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %125)
  %127 = load float, float* %22, align 4, !tbaa !8
  %128 = fsub float %96, %127
  %129 = fsub float %128, %31
  %130 = tail call float @llvm.fmuladd.f32(float %51, float -2.500000e-01, float %129)
  %131 = tail call float @llvm.fmuladd.f32(float %55, float 5.000000e-01, float %130)
  %132 = tail call float @llvm.fmuladd.f32(float %71, float 5.000000e-01, float %131)
  %133 = fsub float %132, %95
  %134 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %133)
  %135 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %134)
  %136 = tail call float @llvm.fmuladd.f32(float %127, float 5.000000e+00, float %111)
  %137 = tail call float @llvm.fmuladd.f32(float %31, float 5.000000e+00, float %136)
  %138 = fadd float %47, %137
  %139 = tail call float @llvm.fmuladd.f32(float %51, float 5.000000e-01, float %138)
  %140 = tail call float @llvm.fmuladd.f32(float %55, float 2.500000e+00, float %139)
  %141 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %140)
  %142 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %141)
  %143 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %142)
  %144 = getelementptr inbounds float, float* %2, i64 %25
  %145 = load float, float* %144, align 4, !tbaa !8
  %146 = fmul float %104, %145
  %147 = load float, float* %14, align 4, !tbaa !8
  %148 = fmul float %146, %147
  %149 = fmul float %147, %148
  store float %149, float* %144, align 4, !tbaa !8
  %150 = getelementptr inbounds float, float* %3, i64 %25
  %151 = load float, float* %150, align 4, !tbaa !8
  %152 = fmul float %104, %151
  %153 = load float, float* %10, align 4, !tbaa !8
  %154 = fmul float %152, %153
  store float %154, float* %150, align 4, !tbaa !8
  %155 = getelementptr inbounds float, float* %2, i64 %41
  %156 = load float, float* %155, align 4, !tbaa !8
  %157 = fmul float %110, %156
  %158 = load float, float* %14, align 4, !tbaa !8
  %159 = fmul float %157, %158
  %160 = load float, float* %26, align 4, !tbaa !8
  %161 = fmul float %159, %160
  store float %161, float* %155, align 4, !tbaa !8
  %162 = getelementptr inbounds float, float* %3, i64 %41
  %163 = load float, float* %162, align 4, !tbaa !8
  %164 = fmul float %110, %163
  %165 = load float, float* %30, align 4, !tbaa !8
  %166 = fmul float %164, %165
  store float %166, float* %162, align 4, !tbaa !8
  %167 = getelementptr inbounds float, float* %2, i64 %45
  %168 = load float, float* %167, align 4, !tbaa !8
  %169 = fmul float %118, %168
  %170 = load float, float* %18, align 4, !tbaa !8
  %171 = fmul float %169, %170
  %172 = load float, float* %14, align 4, !tbaa !8
  %173 = fmul float %171, %172
  store float %173, float* %167, align 4, !tbaa !8
  %174 = getelementptr inbounds float, float* %3, i64 %45
  %175 = load float, float* %174, align 4, !tbaa !8
  %176 = fmul float %118, %175
  %177 = load float, float* %26, align 4, !tbaa !8
  %178 = fmul float %176, %177
  store float %178, float* %174, align 4, !tbaa !8
  %179 = getelementptr inbounds float, float* %2, i64 %49
  %180 = load float, float* %179, align 4, !tbaa !8
  %181 = fmul float %126, %180
  %182 = load float, float* %18, align 4, !tbaa !8
  %183 = fmul float %181, %182
  %184 = fmul float %182, %183
  store float %184, float* %179, align 4, !tbaa !8
  %185 = getelementptr inbounds float, float* %3, i64 %49
  %186 = load float, float* %185, align 4, !tbaa !8
  %187 = fmul float %126, %186
  %188 = load float, float* %22, align 4, !tbaa !8
  %189 = fmul float %187, %188
  store float %189, float* %185, align 4, !tbaa !8
  %190 = getelementptr inbounds float, float* %2, i64 %53
  %191 = load float, float* %190, align 4, !tbaa !8
  %192 = fmul float %135, %191
  %193 = load float, float* %14, align 4, !tbaa !8
  %194 = fmul float %192, %193
  %195 = load float, float* %22, align 4, !tbaa !8
  %196 = fmul float %194, %195
  store float %196, float* %190, align 4, !tbaa !8
  %197 = getelementptr inbounds float, float* %3, i64 %53
  %198 = load float, float* %197, align 4, !tbaa !8
  %199 = fmul float %135, %198
  %200 = load float, float* %34, align 4, !tbaa !8
  %201 = fmul float %199, %200
  store float %201, float* %197, align 4, !tbaa !8
  %202 = add i64 %7, 224
  %203 = getelementptr inbounds float, float* %2, i64 %202
  %204 = load float, float* %203, align 4, !tbaa !8
  %205 = fmul float %143, %204
  %206 = load float, float* %50, align 4, !tbaa !8
  %207 = fmul float %205, %206
  %208 = load float, float* %18, align 4, !tbaa !8
  %209 = fmul float %207, %208
  store float %209, float* %203, align 4, !tbaa !8
  %210 = getelementptr inbounds float, float* %3, i64 %202
  %211 = load float, float* %210, align 4, !tbaa !8
  %212 = fmul float %143, %211
  %213 = load float, float* %54, align 4, !tbaa !8
  %214 = fmul float %212, %213
  store float %214, float* %210, align 4, !tbaa !8
  %215 = add i64 %7, 360
  %216 = getelementptr inbounds float, float* %2, i64 %215
  %217 = load float, float* %216, align 4, !tbaa !8
  %218 = fmul float %118, %217
  store float %218, float* %216, align 4, !tbaa !8
  %219 = getelementptr inbounds float, float* %3, i64 %215
  %220 = load float, float* %219, align 4, !tbaa !8
  %221 = fmul float %118, %220
  %222 = load float, float* %50, align 4, !tbaa !8
  %223 = fmul float %221, %222
  %224 = load float, float* %14, align 4, !tbaa !8
  %225 = fmul float %223, %224
  store float %225, float* %219, align 4, !tbaa !8
  %226 = add i64 %7, 960
  %227 = getelementptr inbounds float, float* %2, i64 %226
  %228 = load float, float* %227, align 4, !tbaa !8
  %229 = fmul float %96, %228
  %230 = load float, float* %62, align 4, !tbaa !8
  %231 = fmul float %229, %230
  %232 = load float, float* %42, align 4, !tbaa !8
  %233 = fmul float %231, %232
  store float %233, float* %227, align 4, !tbaa !8
  %234 = getelementptr inbounds float, float* %3, i64 %226
  %235 = load float, float* %234, align 4, !tbaa !8
  %236 = fmul float %96, %235
  %237 = load float, float* %86, align 4, !tbaa !8
  %238 = fmul float %236, %237
  store float %238, float* %234, align 4, !tbaa !8
  %239 = getelementptr inbounds float, float* %4, i64 %57
  %240 = load float, float* %239, align 4, !tbaa !8
  %241 = add i64 %7, 1000
  %242 = getelementptr inbounds float, float* %2, i64 %241
  %243 = load float, float* %242, align 4, !tbaa !8
  %244 = fdiv float 1.000000e+00, %243, !fpmath !12
  %245 = fmul float %118, %244
  %246 = fmul float %240, %245
  %247 = fadd float %246, 1.000000e+00
  %248 = fdiv float 1.000000e+00, %247, !fpmath !12
  %249 = fmul float %246, %248
  %250 = tail call float @_Z4fmaxff(float %246, float 0x3810000000000000) #3
  %251 = tail call float @_Z5log10f(float %250) #3
  %252 = fmul float %97, 0xBF43323D80000000
  %253 = tail call float @_Z3expf(float %252) #3
  %254 = fmul float %97, 0xBF347AE140000000
  %255 = tail call float @_Z3expf(float %254) #3
  %256 = fmul float %255, 0x3FD5916880000000
  %257 = tail call float @llvm.fmuladd.f32(float %253, float 0x3FE5374BC0000000, float %256)
  %258 = fdiv float 1.000000e+00, %97, !fpmath !12
  %259 = fmul float %258, -4.131000e+03
  %260 = tail call float @_Z3expf(float %259) #3
  %261 = fadd float %260, %257
  %262 = tail call float @_Z4fmaxff(float %261, float 0x3810000000000000) #3
  %263 = tail call float @_Z5log10f(float %262) #3
  %264 = tail call float @llvm.fmuladd.f32(float %263, float 0xBFF451EB80000000, float 7.500000e-01)
  %265 = tail call float @llvm.fmuladd.f32(float %263, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %266 = fsub float %251, %265
  %267 = tail call float @llvm.fmuladd.f32(float %266, float 0xBFC1EB8520000000, float %264)
  %268 = fdiv float 1.000000e+00, %267, !fpmath !12
  %269 = fmul float %266, %268
  %270 = tail call float @llvm.fmuladd.f32(float %269, float %269, float 1.000000e+00)
  %271 = fdiv float 1.000000e+00, %270, !fpmath !12
  %272 = fmul float %263, %271
  %273 = tail call float @_Z5exp10f(float %272) #3
  %274 = fmul float %249, %273
  %275 = fmul float %243, %274
  store float %275, float* %242, align 4, !tbaa !8
  %276 = getelementptr inbounds float, float* %3, i64 %241
  %277 = load float, float* %276, align 4, !tbaa !8
  %278 = fmul float %274, %277
  store float %278, float* %276, align 4, !tbaa !8
  %279 = getelementptr inbounds float, float* %4, i64 %61
  %280 = load float, float* %279, align 4, !tbaa !8
  %281 = add i64 %7, 1048
  %282 = getelementptr inbounds float, float* %2, i64 %281
  %283 = load float, float* %282, align 4, !tbaa !8
  %284 = fdiv float 1.000000e+00, %283, !fpmath !12
  %285 = fmul float %118, %284
  %286 = fmul float %280, %285
  %287 = fadd float %286, 1.000000e+00
  %288 = fdiv float 1.000000e+00, %287, !fpmath !12
  %289 = fmul float %286, %288
  %290 = tail call float @_Z4fmaxff(float %286, float 0x3810000000000000) #3
  %291 = tail call float @_Z5log10f(float %290) #3
  %292 = fmul float %97, 0xBF73BD60E0000000
  %293 = tail call float @_Z3expf(float %292) #3
  %294 = fmul float %97, 0xBF389C1E60000000
  %295 = tail call float @_Z3expf(float %294) #3
  %296 = fmul float %295, 0x3FE90624E0000000
  %297 = tail call float @llvm.fmuladd.f32(float %293, float 0x3FCBE76C80000000, float %296)
  %298 = fmul float %258, -6.095000e+03
  %299 = tail call float @_Z3expf(float %298) #3
  %300 = fadd float %299, %297
  %301 = tail call float @_Z4fmaxff(float %300, float 0x3810000000000000) #3
  %302 = tail call float @_Z5log10f(float %301) #3
  %303 = tail call float @llvm.fmuladd.f32(float %302, float 0xBFF451EB80000000, float 7.500000e-01)
  %304 = tail call float @llvm.fmuladd.f32(float %302, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %305 = fsub float %291, %304
  %306 = tail call float @llvm.fmuladd.f32(float %305, float 0xBFC1EB8520000000, float %303)
  %307 = fdiv float 1.000000e+00, %306, !fpmath !12
  %308 = fmul float %305, %307
  %309 = tail call float @llvm.fmuladd.f32(float %308, float %308, float 1.000000e+00)
  %310 = fdiv float 1.000000e+00, %309, !fpmath !12
  %311 = fmul float %302, %310
  %312 = tail call float @_Z5exp10f(float %311) #3
  %313 = fmul float %289, %312
  %314 = fmul float %283, %313
  store float %314, float* %282, align 4, !tbaa !8
  %315 = getelementptr inbounds float, float* %3, i64 %281
  %316 = load float, float* %315, align 4, !tbaa !8
  %317 = fmul float %313, %316
  store float %317, float* %315, align 4, !tbaa !8
  %318 = getelementptr inbounds float, float* %4, i64 %65
  %319 = load float, float* %318, align 4, !tbaa !8
  %320 = add i64 %7, 1152
  %321 = getelementptr inbounds float, float* %2, i64 %320
  %322 = load float, float* %321, align 4, !tbaa !8
  %323 = fdiv float 1.000000e+00, %322, !fpmath !12
  %324 = fmul float %118, %323
  %325 = fmul float %319, %324
  %326 = fadd float %325, 1.000000e+00
  %327 = fdiv float 1.000000e+00, %326, !fpmath !12
  %328 = fmul float %325, %327
  %329 = tail call float @_Z4fmaxff(float %325, float 0x3810000000000000) #3
  %330 = tail call float @_Z5log10f(float %329) #3
  %331 = fmul float %97, 0xBF48715A80000000
  %332 = tail call float @_Z3expf(float %331) #3
  %333 = fmul float %97, 0xBEF179ECA0000000
  %334 = tail call float @_Z3expf(float %333) #3
  %335 = fmul float %334, 0x3FC6666660000000
  %336 = tail call float @llvm.fmuladd.f32(float %332, float 0x3FEA666660000000, float %335)
  %337 = fmul float %258, 0xC0C3CDE660000000
  %338 = tail call float @_Z3expf(float %337) #3
  %339 = fadd float %338, %336
  %340 = tail call float @_Z4fmaxff(float %339, float 0x3810000000000000) #3
  %341 = tail call float @_Z5log10f(float %340) #3
  %342 = tail call float @llvm.fmuladd.f32(float %341, float 0xBFF451EB80000000, float 7.500000e-01)
  %343 = tail call float @llvm.fmuladd.f32(float %341, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %344 = fsub float %330, %343
  %345 = tail call float @llvm.fmuladd.f32(float %344, float 0xBFC1EB8520000000, float %342)
  %346 = fdiv float 1.000000e+00, %345, !fpmath !12
  %347 = fmul float %344, %346
  %348 = tail call float @llvm.fmuladd.f32(float %347, float %347, float 1.000000e+00)
  %349 = fdiv float 1.000000e+00, %348, !fpmath !12
  %350 = fmul float %341, %349
  %351 = tail call float @_Z5exp10f(float %350) #3
  %352 = fmul float %328, %351
  %353 = fmul float %322, %352
  store float %353, float* %321, align 4, !tbaa !8
  %354 = getelementptr inbounds float, float* %3, i64 %320
  %355 = load float, float* %354, align 4, !tbaa !8
  %356 = fmul float %352, %355
  store float %356, float* %354, align 4, !tbaa !8
  %357 = getelementptr inbounds float, float* %4, i64 %69
  %358 = load float, float* %357, align 4, !tbaa !8
  %359 = add i64 %7, 1176
  %360 = getelementptr inbounds float, float* %2, i64 %359
  %361 = load float, float* %360, align 4, !tbaa !8
  %362 = fdiv float 1.000000e+00, %361, !fpmath !12
  %363 = fmul float %118, %362
  %364 = fmul float %358, %363
  %365 = fadd float %364, 1.000000e+00
  %366 = fdiv float 1.000000e+00, %365, !fpmath !12
  %367 = fmul float %364, %366
  %368 = tail call float @_Z4fmaxff(float %364, float 0x3810000000000000) #3
  %369 = tail call float @_Z5log10f(float %368) #3
  %370 = fmul float %97, 0xBF1D745260000000
  %371 = tail call float @_Z3expf(float %370) #3
  %372 = fmul float %97, 0xBF2E21A9A0000000
  %373 = tail call float @_Z3expf(float %372) #3
  %374 = fmul float %373, 0x3FE19999A0000000
  %375 = tail call float @llvm.fmuladd.f32(float %371, float 0x3FDCCCCCC0000000, float %374)
  %376 = fmul float %258, -7.244000e+03
  %377 = tail call float @_Z3expf(float %376) #3
  %378 = fadd float %377, %375
  %379 = tail call float @_Z4fmaxff(float %378, float 0x3810000000000000) #3
  %380 = tail call float @_Z5log10f(float %379) #3
  %381 = tail call float @llvm.fmuladd.f32(float %380, float 0xBFF451EB80000000, float 7.500000e-01)
  %382 = tail call float @llvm.fmuladd.f32(float %380, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %383 = fsub float %369, %382
  %384 = tail call float @llvm.fmuladd.f32(float %383, float 0xBFC1EB8520000000, float %381)
  %385 = fdiv float 1.000000e+00, %384, !fpmath !12
  %386 = fmul float %383, %385
  %387 = tail call float @llvm.fmuladd.f32(float %386, float %386, float 1.000000e+00)
  %388 = fdiv float 1.000000e+00, %387, !fpmath !12
  %389 = fmul float %380, %388
  %390 = tail call float @_Z5exp10f(float %389) #3
  %391 = fmul float %367, %390
  %392 = fmul float %361, %391
  store float %392, float* %360, align 4, !tbaa !8
  %393 = getelementptr inbounds float, float* %3, i64 %359
  %394 = load float, float* %393, align 4, !tbaa !8
  %395 = fmul float %391, %394
  store float %395, float* %393, align 4, !tbaa !8
  %396 = getelementptr inbounds float, float* %4, i64 %73
  %397 = load float, float* %396, align 4, !tbaa !8
  %398 = add i64 %7, 1232
  %399 = getelementptr inbounds float, float* %2, i64 %398
  %400 = load float, float* %399, align 4, !tbaa !8
  %401 = fdiv float 1.000000e+00, %400, !fpmath !12
  %402 = fmul float %118, %401
  %403 = fmul float %397, %402
  %404 = fadd float %403, 1.000000e+00
  %405 = fdiv float 1.000000e+00, %404, !fpmath !12
  %406 = fmul float %403, %405
  %407 = tail call float @_Z4fmaxff(float %403, float 0x3810000000000000) #3
  %408 = tail call float @_Z5log10f(float %407) #3
  %409 = fmul float %97, 0xBF76C16C20000000
  %410 = tail call float @_Z3expf(float %409) #3
  %411 = fmul float %97, 0xBF4FA8EF60000000
  %412 = tail call float @_Z3expf(float %411) #3
  %413 = fmul float %412, 0x3FE7810620000000
  %414 = tail call float @llvm.fmuladd.f32(float %410, float 0x3FD0FDF3C0000000, float %413)
  %415 = fmul float %258, -5.417000e+03
  %416 = tail call float @_Z3expf(float %415) #3
  %417 = fadd float %416, %414
  %418 = tail call float @_Z4fmaxff(float %417, float 0x3810000000000000) #3
  %419 = tail call float @_Z5log10f(float %418) #3
  %420 = tail call float @llvm.fmuladd.f32(float %419, float 0xBFF451EB80000000, float 7.500000e-01)
  %421 = tail call float @llvm.fmuladd.f32(float %419, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %422 = fsub float %408, %421
  %423 = tail call float @llvm.fmuladd.f32(float %422, float 0xBFC1EB8520000000, float %420)
  %424 = fdiv float 1.000000e+00, %423, !fpmath !12
  %425 = fmul float %422, %424
  %426 = tail call float @llvm.fmuladd.f32(float %425, float %425, float 1.000000e+00)
  %427 = fdiv float 1.000000e+00, %426, !fpmath !12
  %428 = fmul float %419, %427
  %429 = tail call float @_Z5exp10f(float %428) #3
  %430 = fmul float %406, %429
  %431 = fmul float %400, %430
  store float %431, float* %399, align 4, !tbaa !8
  %432 = getelementptr inbounds float, float* %3, i64 %398
  %433 = load float, float* %432, align 4, !tbaa !8
  %434 = fmul float %430, %433
  store float %434, float* %432, align 4, !tbaa !8
  %435 = getelementptr inbounds float, float* %4, i64 %77
  %436 = load float, float* %435, align 4, !tbaa !8
  %437 = add i64 %7, 1240
  %438 = getelementptr inbounds float, float* %2, i64 %437
  %439 = load float, float* %438, align 4, !tbaa !8
  %440 = fdiv float 1.000000e+00, %439, !fpmath !12
  %441 = fmul float %118, %440
  %442 = fmul float %436, %441
  %443 = fadd float %442, 1.000000e+00
  %444 = fdiv float 1.000000e+00, %443, !fpmath !12
  %445 = fmul float %442, %444
  %446 = tail call float @_Z4fmaxff(float %442, float 0x3810000000000000) #3
  %447 = tail call float @_Z5log10f(float %446) #3
  %448 = fmul float %97, 0xBF73813820000000
  %449 = tail call float @_Z3expf(float %448) #3
  %450 = fmul float %97, 0xBF50A68100000000
  %451 = tail call float @_Z3expf(float %450) #3
  %452 = fmul float %451, 0x3FEF35A860000000
  %453 = tail call float @llvm.fmuladd.f32(float %449, float 0x3F994AF500000000, float %452)
  %454 = fmul float %258, -4.374000e+03
  %455 = tail call float @_Z3expf(float %454) #3
  %456 = fadd float %455, %453
  %457 = tail call float @_Z4fmaxff(float %456, float 0x3810000000000000) #3
  %458 = tail call float @_Z5log10f(float %457) #3
  %459 = tail call float @llvm.fmuladd.f32(float %458, float 0xBFF451EB80000000, float 7.500000e-01)
  %460 = tail call float @llvm.fmuladd.f32(float %458, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %461 = fsub float %447, %460
  %462 = tail call float @llvm.fmuladd.f32(float %461, float 0xBFC1EB8520000000, float %459)
  %463 = fdiv float 1.000000e+00, %462, !fpmath !12
  %464 = fmul float %461, %463
  %465 = tail call float @llvm.fmuladd.f32(float %464, float %464, float 1.000000e+00)
  %466 = fdiv float 1.000000e+00, %465, !fpmath !12
  %467 = fmul float %458, %466
  %468 = tail call float @_Z5exp10f(float %467) #3
  %469 = fmul float %445, %468
  %470 = fmul float %439, %469
  store float %470, float* %438, align 4, !tbaa !8
  %471 = getelementptr inbounds float, float* %3, i64 %437
  %472 = load float, float* %471, align 4, !tbaa !8
  %473 = fmul float %469, %472
  store float %473, float* %471, align 4, !tbaa !8
  %474 = getelementptr inbounds float, float* %4, i64 %81
  %475 = load float, float* %474, align 4, !tbaa !8
  %476 = add i64 %7, 1352
  %477 = getelementptr inbounds float, float* %2, i64 %476
  %478 = load float, float* %477, align 4, !tbaa !8
  %479 = fdiv float 1.000000e+00, %478, !fpmath !12
  %480 = fmul float %118, %479
  %481 = fmul float %475, %480
  %482 = fadd float %481, 1.000000e+00
  %483 = fdiv float 1.000000e+00, %482, !fpmath !12
  %484 = fmul float %481, %483
  %485 = tail call float @_Z4fmaxff(float %481, float 0x3810000000000000) #3
  %486 = tail call float @_Z5log10f(float %485) #3
  %487 = fmul float %97, 0xBF80624DE0000000
  %488 = tail call float @_Z3expf(float %487) #3
  %489 = fmul float %97, 0xBF3D88B5E0000000
  %490 = tail call float @_Z3expf(float %489) #3
  %491 = fmul float %490, 0x3FEAF34D60000000
  %492 = tail call float @llvm.fmuladd.f32(float %488, float 0x3FC432CA60000000, float %491)
  %493 = fmul float %258, -6.882000e+03
  %494 = tail call float @_Z3expf(float %493) #3
  %495 = fadd float %494, %492
  %496 = tail call float @_Z4fmaxff(float %495, float 0x3810000000000000) #3
  %497 = tail call float @_Z5log10f(float %496) #3
  %498 = tail call float @llvm.fmuladd.f32(float %497, float 0xBFF451EB80000000, float 7.500000e-01)
  %499 = tail call float @llvm.fmuladd.f32(float %497, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %500 = fsub float %486, %499
  %501 = tail call float @llvm.fmuladd.f32(float %500, float 0xBFC1EB8520000000, float %498)
  %502 = fdiv float 1.000000e+00, %501, !fpmath !12
  %503 = fmul float %500, %502
  %504 = tail call float @llvm.fmuladd.f32(float %503, float %503, float 1.000000e+00)
  %505 = fdiv float 1.000000e+00, %504, !fpmath !12
  %506 = fmul float %497, %505
  %507 = tail call float @_Z5exp10f(float %506) #3
  %508 = fmul float %484, %507
  %509 = fmul float %478, %508
  store float %509, float* %477, align 4, !tbaa !8
  %510 = getelementptr inbounds float, float* %3, i64 %476
  %511 = load float, float* %510, align 4, !tbaa !8
  %512 = fmul float %508, %511
  store float %512, float* %510, align 4, !tbaa !8
  %513 = getelementptr inbounds float, float* %4, i64 %85
  %514 = load float, float* %513, align 4, !tbaa !8
  %515 = add i64 %7, 1472
  %516 = getelementptr inbounds float, float* %2, i64 %515
  %517 = load float, float* %516, align 4, !tbaa !8
  %518 = fdiv float 1.000000e+00, %517, !fpmath !12
  %519 = fmul float %118, %518
  %520 = fmul float %514, %519
  %521 = fadd float %520, 1.000000e+00
  %522 = fdiv float 1.000000e+00, %521, !fpmath !12
  %523 = fmul float %520, %522
  %524 = tail call float @_Z4fmaxff(float %520, float 0x3810000000000000) #3
  %525 = tail call float @_Z5log10f(float %524) #3
  %526 = fmul float %97, 0xBF4DE1A6E0000000
  %527 = tail call float @_Z3expf(float %526) #3
  %528 = fmul float %527, 0x3F947AE140000000
  %529 = tail call float @llvm.fmuladd.f32(float %527, float 0x3FEF5C2900000000, float %528)
  %530 = fmul float %258, -6.859500e+03
  %531 = tail call float @_Z3expf(float %530) #3
  %532 = fadd float %531, %529
  %533 = tail call float @_Z4fmaxff(float %532, float 0x3810000000000000) #3
  %534 = tail call float @_Z5log10f(float %533) #3
  %535 = tail call float @llvm.fmuladd.f32(float %534, float 0xBFF451EB80000000, float 7.500000e-01)
  %536 = tail call float @llvm.fmuladd.f32(float %534, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %537 = fsub float %525, %536
  %538 = tail call float @llvm.fmuladd.f32(float %537, float 0xBFC1EB8520000000, float %535)
  %539 = fdiv float 1.000000e+00, %538, !fpmath !12
  %540 = fmul float %537, %539
  %541 = tail call float @llvm.fmuladd.f32(float %540, float %540, float 1.000000e+00)
  %542 = fdiv float 1.000000e+00, %541, !fpmath !12
  %543 = fmul float %534, %542
  %544 = tail call float @_Z5exp10f(float %543) #3
  %545 = fmul float %523, %544
  %546 = fmul float %517, %545
  store float %546, float* %516, align 4, !tbaa !8
  %547 = getelementptr inbounds float, float* %3, i64 %515
  %548 = load float, float* %547, align 4, !tbaa !8
  %549 = fmul float %545, %548
  store float %549, float* %547, align 4, !tbaa !8
  %550 = getelementptr inbounds float, float* %4, i64 %89
  %551 = load float, float* %550, align 4, !tbaa !8
  %552 = add i64 %7, 1512
  %553 = getelementptr inbounds float, float* %2, i64 %552
  %554 = load float, float* %553, align 4, !tbaa !8
  %555 = fdiv float 1.000000e+00, %554, !fpmath !12
  %556 = fmul float %116, %555
  %557 = fmul float %551, %556
  %558 = fadd float %557, 1.000000e+00
  %559 = fdiv float 1.000000e+00, %558, !fpmath !12
  %560 = fmul float %557, %559
  %561 = tail call float @_Z4fmaxff(float %557, float 0x3810000000000000) #3
  %562 = tail call float @_Z5log10f(float %561) #3
  %563 = fmul float %97, 0xBF50624DE0000000
  %564 = tail call float @_Z3expf(float %563) #3
  %565 = fmul float %97, 0xBF49038480000000
  %566 = tail call float @_Z3expf(float %565) #3
  %567 = tail call float @llvm.fmuladd.f32(float %564, float 0.000000e+00, float %566)
  %568 = fmul float %258, -4.809700e+04
  %569 = tail call float @_Z3expf(float %568) #3
  %570 = fadd float %567, %569
  %571 = tail call float @_Z4fmaxff(float %570, float 0x3810000000000000) #3
  %572 = tail call float @_Z5log10f(float %571) #3
  %573 = tail call float @llvm.fmuladd.f32(float %572, float 0xBFF451EB80000000, float 7.500000e-01)
  %574 = tail call float @llvm.fmuladd.f32(float %572, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %575 = fsub float %562, %574
  %576 = tail call float @llvm.fmuladd.f32(float %575, float 0xBFC1EB8520000000, float %573)
  %577 = fdiv float 1.000000e+00, %576, !fpmath !12
  %578 = fmul float %575, %577
  %579 = tail call float @llvm.fmuladd.f32(float %578, float %578, float 1.000000e+00)
  %580 = fdiv float 1.000000e+00, %579, !fpmath !12
  %581 = fmul float %572, %580
  %582 = tail call float @_Z5exp10f(float %581) #3
  %583 = fmul float %560, %582
  %584 = fmul float %554, %583
  store float %584, float* %553, align 4, !tbaa !8
  %585 = getelementptr inbounds float, float* %3, i64 %552
  %586 = load float, float* %585, align 4, !tbaa !8
  %587 = fmul float %583, %586
  store float %587, float* %585, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: nounwind readnone
declare float @_Z5log10f(float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fmaxff(float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z3expf(float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z5exp10f(float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
