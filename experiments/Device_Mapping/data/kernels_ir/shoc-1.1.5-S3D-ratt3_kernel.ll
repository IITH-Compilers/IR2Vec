; ModuleID = 'shoc-1.1.5-S3D-ratt3_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratt3_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratt3_kernel(float* nocapture readonly, float* readonly, float*, float* nocapture readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %6 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %7 = getelementptr inbounds float, float* %0, i64 %6
  %8 = load float, float* %7, align 4, !tbaa !8
  %9 = fmul float %8, %4
  %10 = fmul float %9, 0x4193D2C640000000
  %11 = fdiv float 1.000000e+00, %10, !fpmath !12
  %12 = fmul float %11, 1.013250e+06
  %13 = add i64 %6, 16
  %14 = getelementptr inbounds float, float* %3, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = add i64 %6, 56
  %17 = getelementptr inbounds float, float* %3, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !8
  %19 = fmul float %15, %18
  %20 = add i64 %6, 32
  %21 = getelementptr inbounds float, float* %3, i64 %20
  %22 = load float, float* %21, align 4, !tbaa !8
  %23 = add i64 %6, 48
  %24 = getelementptr inbounds float, float* %3, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !8
  %26 = fmul float %22, %25
  %27 = fdiv float 1.000000e+00, %26, !fpmath !12
  %28 = fmul float %19, %27
  %29 = add i64 %6, 200
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !8
  %32 = tail call float @_Z4fminff(float %28, float 0x4415AF1D80000000) #2
  %33 = fmul float %31, %32
  %34 = getelementptr inbounds float, float* %2, i64 %29
  store float %33, float* %34, align 4, !tbaa !8
  %35 = load float, float* %21, align 4, !tbaa !8
  %36 = load float, float* %17, align 4, !tbaa !8
  %37 = fmul float %35, %36
  %38 = add i64 %6, 40
  %39 = getelementptr inbounds float, float* %3, i64 %38
  %40 = load float, float* %39, align 4, !tbaa !8
  %41 = load float, float* %24, align 4, !tbaa !8
  %42 = fmul float %40, %41
  %43 = fdiv float 1.000000e+00, %42, !fpmath !12
  %44 = fmul float %37, %43
  %45 = add i64 %6, 208
  %46 = getelementptr inbounds float, float* %1, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !8
  %48 = tail call float @_Z4fminff(float %44, float 0x4415AF1D80000000) #2
  %49 = fmul float %47, %48
  %50 = getelementptr inbounds float, float* %2, i64 %45
  store float %49, float* %50, align 4, !tbaa !8
  %51 = load float, float* %21, align 4, !tbaa !8
  %52 = load float, float* %17, align 4, !tbaa !8
  %53 = fmul float %51, %52
  %54 = load float, float* %39, align 4, !tbaa !8
  %55 = load float, float* %24, align 4, !tbaa !8
  %56 = fmul float %54, %55
  %57 = fdiv float 1.000000e+00, %56, !fpmath !12
  %58 = fmul float %53, %57
  %59 = add i64 %6, 216
  %60 = getelementptr inbounds float, float* %1, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !8
  %62 = tail call float @_Z4fminff(float %58, float 0x4415AF1D80000000) #2
  %63 = fmul float %61, %62
  %64 = getelementptr inbounds float, float* %2, i64 %59
  store float %63, float* %64, align 4, !tbaa !8
  %65 = load float, float* %14, align 4, !tbaa !8
  %66 = add i64 %6, 104
  %67 = getelementptr inbounds float, float* %3, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !8
  %69 = fmul float %65, %68
  %70 = fmul float %12, %69
  %71 = add i64 %6, 112
  %72 = getelementptr inbounds float, float* %3, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !8
  %74 = fdiv float 1.000000e+00, %73, !fpmath !12
  %75 = fmul float %70, %74
  %76 = add i64 %6, 224
  %77 = getelementptr inbounds float, float* %1, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !8
  %79 = tail call float @_Z4fminff(float %75, float 0x4415AF1D80000000) #2
  %80 = fmul float %78, %79
  %81 = getelementptr inbounds float, float* %2, i64 %76
  store float %80, float* %81, align 4, !tbaa !8
  %82 = load float, float* %21, align 4, !tbaa !8
  %83 = load float, float* %67, align 4, !tbaa !8
  %84 = fmul float %82, %83
  %85 = add i64 %6, 8
  %86 = getelementptr inbounds float, float* %3, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !8
  %88 = load float, float* %72, align 4, !tbaa !8
  %89 = fmul float %87, %88
  %90 = fdiv float 1.000000e+00, %89, !fpmath !12
  %91 = fmul float %84, %90
  %92 = add i64 %6, 232
  %93 = getelementptr inbounds float, float* %1, i64 %92
  %94 = load float, float* %93, align 4, !tbaa !8
  %95 = tail call float @_Z4fminff(float %91, float 0x4415AF1D80000000) #2
  %96 = fmul float %94, %95
  %97 = getelementptr inbounds float, float* %2, i64 %92
  store float %96, float* %97, align 4, !tbaa !8
  %98 = getelementptr inbounds float, float* %3, i64 %6
  %99 = load float, float* %98, align 4, !tbaa !8
  %100 = load float, float* %67, align 4, !tbaa !8
  %101 = fmul float %99, %100
  %102 = fmul float %12, %101
  %103 = add i64 %6, 128
  %104 = getelementptr inbounds float, float* %3, i64 %103
  %105 = load float, float* %104, align 4, !tbaa !8
  %106 = fdiv float 1.000000e+00, %105, !fpmath !12
  %107 = fmul float %102, %106
  %108 = add i64 %6, 240
  %109 = getelementptr inbounds float, float* %1, i64 %108
  %110 = load float, float* %109, align 4, !tbaa !8
  %111 = tail call float @_Z4fminff(float %107, float 0x4415AF1D80000000) #2
  %112 = fmul float %110, %111
  %113 = getelementptr inbounds float, float* %2, i64 %108
  store float %112, float* %113, align 4, !tbaa !8
  %114 = add i64 %6, 24
  %115 = getelementptr inbounds float, float* %3, i64 %114
  %116 = load float, float* %115, align 4, !tbaa !8
  %117 = load float, float* %67, align 4, !tbaa !8
  %118 = fmul float %116, %117
  %119 = load float, float* %14, align 4, !tbaa !8
  %120 = load float, float* %72, align 4, !tbaa !8
  %121 = fmul float %119, %120
  %122 = fdiv float 1.000000e+00, %121, !fpmath !12
  %123 = fmul float %118, %122
  %124 = add i64 %6, 248
  %125 = getelementptr inbounds float, float* %1, i64 %124
  %126 = load float, float* %125, align 4, !tbaa !8
  %127 = tail call float @_Z4fminff(float %123, float 0x4415AF1D80000000) #2
  %128 = fmul float %126, %127
  %129 = getelementptr inbounds float, float* %2, i64 %124
  store float %128, float* %129, align 4, !tbaa !8
  %130 = load float, float* %24, align 4, !tbaa !8
  %131 = load float, float* %67, align 4, !tbaa !8
  %132 = fmul float %130, %131
  %133 = load float, float* %21, align 4, !tbaa !8
  %134 = load float, float* %72, align 4, !tbaa !8
  %135 = fmul float %133, %134
  %136 = fdiv float 1.000000e+00, %135, !fpmath !12
  %137 = fmul float %132, %136
  %138 = add i64 %6, 256
  %139 = getelementptr inbounds float, float* %1, i64 %138
  %140 = load float, float* %139, align 4, !tbaa !8
  %141 = tail call float @_Z4fminff(float %137, float 0x4415AF1D80000000) #2
  %142 = fmul float %140, %141
  %143 = getelementptr inbounds float, float* %2, i64 %138
  store float %142, float* %143, align 4, !tbaa !8
  %144 = load float, float* %14, align 4, !tbaa !8
  %145 = add i64 %6, 64
  %146 = getelementptr inbounds float, float* %3, i64 %145
  %147 = load float, float* %146, align 4, !tbaa !8
  %148 = fmul float %144, %147
  %149 = load float, float* %86, align 4, !tbaa !8
  %150 = load float, float* %67, align 4, !tbaa !8
  %151 = fmul float %149, %150
  %152 = fdiv float 1.000000e+00, %151, !fpmath !12
  %153 = fmul float %148, %152
  %154 = add i64 %6, 264
  %155 = getelementptr inbounds float, float* %1, i64 %154
  %156 = load float, float* %155, align 4, !tbaa !8
  %157 = tail call float @_Z4fminff(float %153, float 0x4415AF1D80000000) #2
  %158 = fmul float %156, %157
  %159 = getelementptr inbounds float, float* %2, i64 %154
  store float %158, float* %159, align 4, !tbaa !8
  %160 = load float, float* %21, align 4, !tbaa !8
  %161 = load float, float* %146, align 4, !tbaa !8
  %162 = fmul float %160, %161
  %163 = load float, float* %86, align 4, !tbaa !8
  %164 = add i64 %6, 120
  %165 = getelementptr inbounds float, float* %3, i64 %164
  %166 = load float, float* %165, align 4, !tbaa !8
  %167 = fmul float %163, %166
  %168 = fdiv float 1.000000e+00, %167, !fpmath !12
  %169 = fmul float %162, %168
  %170 = add i64 %6, 272
  %171 = getelementptr inbounds float, float* %1, i64 %170
  %172 = load float, float* %171, align 4, !tbaa !8
  %173 = tail call float @_Z4fminff(float %169, float 0x4415AF1D80000000) #2
  %174 = fmul float %172, %173
  %175 = getelementptr inbounds float, float* %2, i64 %170
  store float %174, float* %175, align 4, !tbaa !8
  %176 = load float, float* %98, align 4, !tbaa !8
  %177 = load float, float* %146, align 4, !tbaa !8
  %178 = fmul float %176, %177
  %179 = load float, float* %86, align 4, !tbaa !8
  %180 = add i64 %6, 72
  %181 = getelementptr inbounds float, float* %3, i64 %180
  %182 = load float, float* %181, align 4, !tbaa !8
  %183 = fmul float %179, %182
  %184 = fdiv float 1.000000e+00, %183, !fpmath !12
  %185 = fmul float %178, %184
  %186 = add i64 %6, 280
  %187 = getelementptr inbounds float, float* %1, i64 %186
  %188 = load float, float* %187, align 4, !tbaa !8
  %189 = tail call float @_Z4fminff(float %185, float 0x4415AF1D80000000) #2
  %190 = fmul float %188, %189
  %191 = getelementptr inbounds float, float* %2, i64 %186
  store float %190, float* %191, align 4, !tbaa !8
  %192 = load float, float* %39, align 4, !tbaa !8
  %193 = load float, float* %146, align 4, !tbaa !8
  %194 = fmul float %192, %193
  %195 = load float, float* %86, align 4, !tbaa !8
  %196 = load float, float* %104, align 4, !tbaa !8
  %197 = fmul float %195, %196
  %198 = fdiv float 1.000000e+00, %197, !fpmath !12
  %199 = fmul float %194, %198
  %200 = add i64 %6, 288
  %201 = getelementptr inbounds float, float* %1, i64 %200
  %202 = load float, float* %201, align 4, !tbaa !8
  %203 = tail call float @_Z4fminff(float %199, float 0x4415AF1D80000000) #2
  %204 = fmul float %202, %203
  %205 = getelementptr inbounds float, float* %2, i64 %200
  store float %204, float* %205, align 4, !tbaa !8
  %206 = load float, float* %115, align 4, !tbaa !8
  %207 = load float, float* %146, align 4, !tbaa !8
  %208 = fmul float %206, %207
  %209 = load float, float* %14, align 4, !tbaa !8
  %210 = load float, float* %165, align 4, !tbaa !8
  %211 = fmul float %209, %210
  %212 = fdiv float 1.000000e+00, %211, !fpmath !12
  %213 = fmul float %208, %212
  %214 = add i64 %6, 296
  %215 = getelementptr inbounds float, float* %1, i64 %214
  %216 = load float, float* %215, align 4, !tbaa !8
  %217 = tail call float @_Z4fminff(float %213, float 0x4415AF1D80000000) #2
  %218 = fmul float %216, %217
  %219 = getelementptr inbounds float, float* %2, i64 %214
  store float %218, float* %219, align 4, !tbaa !8
  %220 = load float, float* %146, align 4, !tbaa !8
  %221 = load float, float* %67, align 4, !tbaa !8
  %222 = fmul float %220, %221
  %223 = fmul float %12, %222
  %224 = add i64 %6, 192
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = load float, float* %225, align 4, !tbaa !8
  %227 = fdiv float 1.000000e+00, %226, !fpmath !12
  %228 = fmul float %223, %227
  %229 = add i64 %6, 304
  %230 = getelementptr inbounds float, float* %1, i64 %229
  %231 = load float, float* %230, align 4, !tbaa !8
  %232 = tail call float @_Z4fminff(float %228, float 0x4415AF1D80000000) #2
  %233 = fmul float %231, %232
  %234 = getelementptr inbounds float, float* %2, i64 %229
  store float %233, float* %234, align 4, !tbaa !8
  %235 = load float, float* %146, align 4, !tbaa !8
  %236 = load float, float* %72, align 4, !tbaa !8
  %237 = fmul float %235, %236
  %238 = load float, float* %67, align 4, !tbaa !8
  %239 = load float, float* %165, align 4, !tbaa !8
  %240 = fmul float %238, %239
  %241 = fdiv float 1.000000e+00, %240, !fpmath !12
  %242 = fmul float %237, %241
  %243 = add i64 %6, 312
  %244 = getelementptr inbounds float, float* %1, i64 %243
  %245 = load float, float* %244, align 4, !tbaa !8
  %246 = tail call float @_Z4fminff(float %242, float 0x4415AF1D80000000) #2
  %247 = fmul float %245, %246
  %248 = getelementptr inbounds float, float* %2, i64 %243
  store float %247, float* %248, align 4, !tbaa !8
  %249 = load float, float* %86, align 4, !tbaa !8
  %250 = load float, float* %165, align 4, !tbaa !8
  %251 = fmul float %249, %250
  %252 = fmul float %12, %251
  %253 = load float, float* %104, align 4, !tbaa !8
  %254 = fdiv float 1.000000e+00, %253, !fpmath !12
  %255 = fmul float %252, %254
  %256 = add i64 %6, 320
  %257 = getelementptr inbounds float, float* %1, i64 %256
  %258 = load float, float* %257, align 4, !tbaa !8
  %259 = tail call float @_Z4fminff(float %255, float 0x4415AF1D80000000) #2
  %260 = fmul float %258, %259
  %261 = getelementptr inbounds float, float* %2, i64 %256
  store float %260, float* %261, align 4, !tbaa !8
  %262 = load float, float* %86, align 4, !tbaa !8
  %263 = load float, float* %165, align 4, !tbaa !8
  %264 = fmul float %262, %263
  %265 = load float, float* %98, align 4, !tbaa !8
  %266 = load float, float* %67, align 4, !tbaa !8
  %267 = fmul float %265, %266
  %268 = fdiv float 1.000000e+00, %267, !fpmath !12
  %269 = fmul float %264, %268
  %270 = add i64 %6, 328
  %271 = getelementptr inbounds float, float* %1, i64 %270
  %272 = load float, float* %271, align 4, !tbaa !8
  %273 = tail call float @_Z4fminff(float %269, float 0x4415AF1D80000000) #2
  %274 = fmul float %272, %273
  %275 = getelementptr inbounds float, float* %2, i64 %270
  store float %274, float* %275, align 4, !tbaa !8
  %276 = load float, float* %14, align 4, !tbaa !8
  %277 = load float, float* %165, align 4, !tbaa !8
  %278 = fmul float %276, %277
  %279 = load float, float* %21, align 4, !tbaa !8
  %280 = load float, float* %67, align 4, !tbaa !8
  %281 = fmul float %279, %280
  %282 = fdiv float 1.000000e+00, %281, !fpmath !12
  %283 = fmul float %278, %282
  %284 = add i64 %6, 336
  %285 = getelementptr inbounds float, float* %1, i64 %284
  %286 = load float, float* %285, align 4, !tbaa !8
  %287 = tail call float @_Z4fminff(float %283, float 0x4415AF1D80000000) #2
  %288 = fmul float %286, %287
  %289 = getelementptr inbounds float, float* %2, i64 %284
  store float %288, float* %289, align 4, !tbaa !8
  %290 = load float, float* %14, align 4, !tbaa !8
  %291 = load float, float* %165, align 4, !tbaa !8
  %292 = fmul float %290, %291
  %293 = load float, float* %86, align 4, !tbaa !8
  %294 = load float, float* %72, align 4, !tbaa !8
  %295 = fmul float %293, %294
  %296 = fdiv float 1.000000e+00, %295, !fpmath !12
  %297 = fmul float %292, %296
  %298 = add i64 %6, 344
  %299 = getelementptr inbounds float, float* %1, i64 %298
  %300 = load float, float* %299, align 4, !tbaa !8
  %301 = tail call float @_Z4fminff(float %297, float 0x4415AF1D80000000) #2
  %302 = fmul float %300, %301
  %303 = getelementptr inbounds float, float* %2, i64 %298
  store float %302, float* %303, align 4, !tbaa !8
  %304 = load float, float* %21, align 4, !tbaa !8
  %305 = load float, float* %165, align 4, !tbaa !8
  %306 = fmul float %304, %305
  %307 = load float, float* %39, align 4, !tbaa !8
  %308 = load float, float* %67, align 4, !tbaa !8
  %309 = fmul float %307, %308
  %310 = fdiv float 1.000000e+00, %309, !fpmath !12
  %311 = fmul float %306, %310
  %312 = add i64 %6, 352
  %313 = getelementptr inbounds float, float* %1, i64 %312
  %314 = load float, float* %313, align 4, !tbaa !8
  %315 = tail call float @_Z4fminff(float %311, float 0x4415AF1D80000000) #2
  %316 = fmul float %314, %315
  %317 = getelementptr inbounds float, float* %2, i64 %312
  store float %316, float* %317, align 4, !tbaa !8
  %318 = load float, float* %165, align 4, !tbaa !8
  %319 = fmul float %12, %318
  %320 = load float, float* %86, align 4, !tbaa !8
  %321 = load float, float* %67, align 4, !tbaa !8
  %322 = fmul float %320, %321
  %323 = fdiv float 1.000000e+00, %322, !fpmath !12
  %324 = fmul float %319, %323
  %325 = add i64 %6, 360
  %326 = getelementptr inbounds float, float* %1, i64 %325
  %327 = load float, float* %326, align 4, !tbaa !8
  %328 = tail call float @_Z4fminff(float %324, float 0x4415AF1D80000000) #2
  %329 = fmul float %327, %328
  %330 = getelementptr inbounds float, float* %2, i64 %325
  store float %329, float* %330, align 4, !tbaa !8
  %331 = load float, float* %115, align 4, !tbaa !8
  %332 = load float, float* %165, align 4, !tbaa !8
  %333 = fmul float %331, %332
  %334 = load float, float* %24, align 4, !tbaa !8
  %335 = load float, float* %67, align 4, !tbaa !8
  %336 = fmul float %334, %335
  %337 = fdiv float 1.000000e+00, %336, !fpmath !12
  %338 = fmul float %333, %337
  %339 = add i64 %6, 368
  %340 = getelementptr inbounds float, float* %1, i64 %339
  %341 = load float, float* %340, align 4, !tbaa !8
  %342 = tail call float @_Z4fminff(float %338, float 0x4415AF1D80000000) #2
  %343 = fmul float %341, %342
  %344 = getelementptr inbounds float, float* %2, i64 %339
  store float %343, float* %344, align 4, !tbaa !8
  %345 = load float, float* %86, align 4, !tbaa !8
  %346 = load float, float* %181, align 4, !tbaa !8
  %347 = fmul float %345, %346
  %348 = fmul float %12, %347
  %349 = add i64 %6, 88
  %350 = getelementptr inbounds float, float* %3, i64 %349
  %351 = load float, float* %350, align 4, !tbaa !8
  %352 = fdiv float 1.000000e+00, %351, !fpmath !12
  %353 = fmul float %348, %352
  %354 = add i64 %6, 376
  %355 = getelementptr inbounds float, float* %1, i64 %354
  %356 = load float, float* %355, align 4, !tbaa !8
  %357 = tail call float @_Z4fminff(float %353, float 0x4415AF1D80000000) #2
  %358 = fmul float %356, %357
  %359 = getelementptr inbounds float, float* %2, i64 %354
  store float %358, float* %359, align 4, !tbaa !8
  %360 = load float, float* %98, align 4, !tbaa !8
  %361 = load float, float* %181, align 4, !tbaa !8
  %362 = fmul float %360, %361
  %363 = load float, float* %86, align 4, !tbaa !8
  %364 = load float, float* %350, align 4, !tbaa !8
  %365 = fmul float %363, %364
  %366 = fdiv float 1.000000e+00, %365, !fpmath !12
  %367 = fmul float %362, %366
  %368 = add i64 %6, 384
  %369 = getelementptr inbounds float, float* %1, i64 %368
  %370 = load float, float* %369, align 4, !tbaa !8
  %371 = tail call float @_Z4fminff(float %367, float 0x4415AF1D80000000) #2
  %372 = fmul float %370, %371
  %373 = getelementptr inbounds float, float* %2, i64 %368
  store float %372, float* %373, align 4, !tbaa !8
  %374 = load float, float* %14, align 4, !tbaa !8
  %375 = load float, float* %181, align 4, !tbaa !8
  %376 = fmul float %374, %375
  %377 = load float, float* %86, align 4, !tbaa !8
  %378 = load float, float* %165, align 4, !tbaa !8
  %379 = fmul float %377, %378
  %380 = fdiv float 1.000000e+00, %379, !fpmath !12
  %381 = fmul float %376, %380
  %382 = add i64 %6, 392
  %383 = getelementptr inbounds float, float* %1, i64 %382
  %384 = load float, float* %383, align 4, !tbaa !8
  %385 = tail call float @_Z4fminff(float %381, float 0x4415AF1D80000000) #2
  %386 = fmul float %384, %385
  %387 = getelementptr inbounds float, float* %2, i64 %382
  store float %386, float* %387, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fminff(float, float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
