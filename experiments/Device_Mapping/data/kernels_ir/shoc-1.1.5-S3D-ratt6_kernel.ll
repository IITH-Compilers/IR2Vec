; ModuleID = 'shoc-1.1.5-S3D-ratt6_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratt6_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratt6_kernel(float* nocapture readonly, float* readonly, float*, float* readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %6 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %7 = getelementptr inbounds float, float* %0, i64 %6
  %8 = load float, float* %7, align 4, !tbaa !8
  %9 = fmul float %8, %4
  %10 = fmul float %9, 0x4193D2C640000000
  %11 = fdiv float 1.000000e+00, %10, !fpmath !12
  %12 = fmul float %11, 1.013250e+06
  %13 = add i64 %6, 24
  %14 = getelementptr inbounds float, float* %3, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = add i64 %6, 136
  %17 = getelementptr inbounds float, float* %3, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !8
  %19 = fmul float %15, %18
  %20 = add i64 %6, 48
  %21 = getelementptr inbounds float, float* %3, i64 %20
  %22 = load float, float* %21, align 4, !tbaa !8
  %23 = add i64 %6, 128
  %24 = getelementptr inbounds float, float* %3, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !8
  %26 = fmul float %22, %25
  %27 = fdiv float 1.000000e+00, %26, !fpmath !12
  %28 = fmul float %19, %27
  %29 = add i64 %6, 800
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !8
  %32 = tail call float @_Z4fminff(float %28, float 0x4415AF1D80000000) #2
  %33 = fmul float %31, %32
  %34 = getelementptr inbounds float, float* %2, i64 %29
  store float %33, float* %34, align 4, !tbaa !8
  %35 = add i64 %6, 8
  %36 = getelementptr inbounds float, float* %3, i64 %35
  %37 = load float, float* %36, align 4, !tbaa !8
  %38 = add i64 %6, 96
  %39 = getelementptr inbounds float, float* %3, i64 %38
  %40 = load float, float* %39, align 4, !tbaa !8
  %41 = fmul float %37, %40
  %42 = getelementptr inbounds float, float* %3, i64 %6
  %43 = load float, float* %42, align 4, !tbaa !8
  %44 = add i64 %6, 88
  %45 = getelementptr inbounds float, float* %3, i64 %44
  %46 = load float, float* %45, align 4, !tbaa !8
  %47 = fmul float %43, %46
  %48 = fdiv float 1.000000e+00, %47, !fpmath !12
  %49 = fmul float %41, %48
  %50 = add i64 %6, 808
  %51 = getelementptr inbounds float, float* %1, i64 %50
  %52 = load float, float* %51, align 4, !tbaa !8
  %53 = tail call float @_Z4fminff(float %49, float 0x4415AF1D80000000) #2
  %54 = fmul float %52, %53
  %55 = getelementptr inbounds float, float* %2, i64 %50
  store float %54, float* %55, align 4, !tbaa !8
  %56 = add i64 %6, 16
  %57 = getelementptr inbounds float, float* %3, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !8
  %59 = load float, float* %39, align 4, !tbaa !8
  %60 = fmul float %58, %59
  %61 = add i64 %6, 32
  %62 = getelementptr inbounds float, float* %3, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !8
  %64 = load float, float* %45, align 4, !tbaa !8
  %65 = fmul float %63, %64
  %66 = fdiv float 1.000000e+00, %65, !fpmath !12
  %67 = fmul float %60, %66
  %68 = add i64 %6, 816
  %69 = getelementptr inbounds float, float* %1, i64 %68
  %70 = load float, float* %69, align 4, !tbaa !8
  %71 = tail call float @_Z4fminff(float %67, float 0x4415AF1D80000000) #2
  %72 = fmul float %70, %71
  %73 = getelementptr inbounds float, float* %2, i64 %68
  store float %72, float* %73, align 4, !tbaa !8
  %74 = load float, float* %62, align 4, !tbaa !8
  %75 = load float, float* %39, align 4, !tbaa !8
  %76 = fmul float %74, %75
  %77 = add i64 %6, 40
  %78 = getelementptr inbounds float, float* %3, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !8
  %80 = load float, float* %45, align 4, !tbaa !8
  %81 = fmul float %79, %80
  %82 = fdiv float 1.000000e+00, %81, !fpmath !12
  %83 = fmul float %76, %82
  %84 = add i64 %6, 824
  %85 = getelementptr inbounds float, float* %1, i64 %84
  %86 = load float, float* %85, align 4, !tbaa !8
  %87 = tail call float @_Z4fminff(float %83, float 0x4415AF1D80000000) #2
  %88 = fmul float %86, %87
  %89 = getelementptr inbounds float, float* %2, i64 %84
  store float %88, float* %89, align 4, !tbaa !8
  %90 = add i64 %6, 64
  %91 = getelementptr inbounds float, float* %3, i64 %90
  %92 = load float, float* %91, align 4, !tbaa !8
  %93 = load float, float* %39, align 4, !tbaa !8
  %94 = fmul float %92, %93
  %95 = load float, float* %36, align 4, !tbaa !8
  %96 = add i64 %6, 168
  %97 = getelementptr inbounds float, float* %3, i64 %96
  %98 = load float, float* %97, align 4, !tbaa !8
  %99 = fmul float %95, %98
  %100 = fdiv float 1.000000e+00, %99, !fpmath !12
  %101 = fmul float %94, %100
  %102 = add i64 %6, 832
  %103 = getelementptr inbounds float, float* %1, i64 %102
  %104 = load float, float* %103, align 4, !tbaa !8
  %105 = tail call float @_Z4fminff(float %101, float 0x4415AF1D80000000) #2
  %106 = fmul float %104, %105
  %107 = getelementptr inbounds float, float* %2, i64 %102
  store float %106, float* %107, align 4, !tbaa !8
  %108 = add i64 %6, 72
  %109 = getelementptr inbounds float, float* %3, i64 %108
  %110 = load float, float* %109, align 4, !tbaa !8
  %111 = load float, float* %39, align 4, !tbaa !8
  %112 = fmul float %110, %111
  %113 = load float, float* %45, align 4, !tbaa !8
  %114 = fmul float %113, %113
  %115 = fdiv float 1.000000e+00, %114, !fpmath !12
  %116 = fmul float %112, %115
  %117 = add i64 %6, 840
  %118 = getelementptr inbounds float, float* %1, i64 %117
  %119 = load float, float* %118, align 4, !tbaa !8
  %120 = tail call float @_Z4fminff(float %116, float 0x4415AF1D80000000) #2
  %121 = fmul float %119, %120
  %122 = getelementptr inbounds float, float* %2, i64 %117
  store float %121, float* %122, align 4, !tbaa !8
  %123 = add i64 %6, 80
  %124 = getelementptr inbounds float, float* %3, i64 %123
  %125 = load float, float* %124, align 4, !tbaa !8
  %126 = load float, float* %39, align 4, !tbaa !8
  %127 = fmul float %125, %126
  %128 = load float, float* %45, align 4, !tbaa !8
  %129 = fmul float %128, %128
  %130 = fdiv float 1.000000e+00, %129, !fpmath !12
  %131 = fmul float %127, %130
  %132 = add i64 %6, 848
  %133 = getelementptr inbounds float, float* %1, i64 %132
  %134 = load float, float* %133, align 4, !tbaa !8
  %135 = tail call float @_Z4fminff(float %131, float 0x4415AF1D80000000) #2
  %136 = fmul float %134, %135
  %137 = getelementptr inbounds float, float* %2, i64 %132
  store float %136, float* %137, align 4, !tbaa !8
  %138 = load float, float* %36, align 4, !tbaa !8
  %139 = add i64 %6, 192
  %140 = getelementptr inbounds float, float* %3, i64 %139
  %141 = load float, float* %140, align 4, !tbaa !8
  %142 = fmul float %138, %141
  %143 = load float, float* %124, align 4, !tbaa !8
  %144 = add i64 %6, 104
  %145 = getelementptr inbounds float, float* %3, i64 %144
  %146 = load float, float* %145, align 4, !tbaa !8
  %147 = fmul float %143, %146
  %148 = fdiv float 1.000000e+00, %147, !fpmath !12
  %149 = fmul float %142, %148
  %150 = add i64 %6, 856
  %151 = getelementptr inbounds float, float* %1, i64 %150
  %152 = load float, float* %151, align 4, !tbaa !8
  %153 = tail call float @_Z4fminff(float %149, float 0x4415AF1D80000000) #2
  %154 = fmul float %152, %153
  %155 = getelementptr inbounds float, float* %2, i64 %150
  store float %154, float* %155, align 4, !tbaa !8
  %156 = load float, float* %57, align 4, !tbaa !8
  %157 = load float, float* %140, align 4, !tbaa !8
  %158 = fmul float %156, %157
  %159 = load float, float* %36, align 4, !tbaa !8
  %160 = load float, float* %145, align 4, !tbaa !8
  %161 = fmul float %159, %160
  %162 = fmul float %160, %161
  %163 = fmul float %12, %162
  %164 = fdiv float 1.000000e+00, %163, !fpmath !12
  %165 = fmul float %158, %164
  %166 = add i64 %6, 864
  %167 = getelementptr inbounds float, float* %1, i64 %166
  %168 = load float, float* %167, align 4, !tbaa !8
  %169 = tail call float @_Z4fminff(float %165, float 0x4415AF1D80000000) #2
  %170 = fmul float %168, %169
  %171 = getelementptr inbounds float, float* %2, i64 %166
  store float %170, float* %171, align 4, !tbaa !8
  %172 = load float, float* %14, align 4, !tbaa !8
  %173 = load float, float* %140, align 4, !tbaa !8
  %174 = fmul float %172, %173
  %175 = load float, float* %62, align 4, !tbaa !8
  %176 = load float, float* %145, align 4, !tbaa !8
  %177 = fmul float %175, %176
  %178 = fmul float %176, %177
  %179 = fmul float %12, %178
  %180 = fdiv float 1.000000e+00, %179, !fpmath !12
  %181 = fmul float %174, %180
  %182 = add i64 %6, 872
  %183 = getelementptr inbounds float, float* %1, i64 %182
  %184 = load float, float* %183, align 4, !tbaa !8
  %185 = tail call float @_Z4fminff(float %181, float 0x4415AF1D80000000) #2
  %186 = fmul float %184, %185
  %187 = getelementptr inbounds float, float* %2, i64 %182
  store float %186, float* %187, align 4, !tbaa !8
  %188 = load float, float* %91, align 4, !tbaa !8
  %189 = load float, float* %140, align 4, !tbaa !8
  %190 = fmul float %188, %189
  %191 = load float, float* %145, align 4, !tbaa !8
  %192 = add i64 %6, 144
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = load float, float* %193, align 4, !tbaa !8
  %195 = fmul float %191, %194
  %196 = fdiv float 1.000000e+00, %195, !fpmath !12
  %197 = fmul float %190, %196
  %198 = add i64 %6, 880
  %199 = getelementptr inbounds float, float* %1, i64 %198
  %200 = load float, float* %199, align 4, !tbaa !8
  %201 = tail call float @_Z4fminff(float %197, float 0x4415AF1D80000000) #2
  %202 = fmul float %200, %201
  %203 = getelementptr inbounds float, float* %2, i64 %198
  store float %202, float* %203, align 4, !tbaa !8
  %204 = load float, float* %109, align 4, !tbaa !8
  %205 = load float, float* %140, align 4, !tbaa !8
  %206 = fmul float %204, %205
  %207 = load float, float* %145, align 4, !tbaa !8
  %208 = add i64 %6, 160
  %209 = getelementptr inbounds float, float* %3, i64 %208
  %210 = load float, float* %209, align 4, !tbaa !8
  %211 = fmul float %207, %210
  %212 = fdiv float 1.000000e+00, %211, !fpmath !12
  %213 = fmul float %206, %212
  %214 = add i64 %6, 888
  %215 = getelementptr inbounds float, float* %1, i64 %214
  %216 = load float, float* %215, align 4, !tbaa !8
  %217 = tail call float @_Z4fminff(float %213, float 0x4415AF1D80000000) #2
  %218 = fmul float %216, %217
  %219 = getelementptr inbounds float, float* %2, i64 %214
  store float %218, float* %219, align 4, !tbaa !8
  %220 = load float, float* %140, align 4, !tbaa !8
  %221 = fmul float %220, %220
  %222 = load float, float* %145, align 4, !tbaa !8
  %223 = fmul float %222, %222
  %224 = load float, float* %193, align 4, !tbaa !8
  %225 = fmul float %223, %224
  %226 = fmul float %12, %225
  %227 = fdiv float 1.000000e+00, %226, !fpmath !12
  %228 = fmul float %221, %227
  %229 = add i64 %6, 896
  %230 = getelementptr inbounds float, float* %1, i64 %229
  %231 = load float, float* %230, align 4, !tbaa !8
  %232 = tail call float @_Z4fminff(float %228, float 0x4415AF1D80000000) #2
  %233 = fmul float %231, %232
  %234 = getelementptr inbounds float, float* %2, i64 %229
  store float %233, float* %234, align 4, !tbaa !8
  %235 = load float, float* %193, align 4, !tbaa !8
  %236 = add i64 %6, 152
  %237 = getelementptr inbounds float, float* %3, i64 %236
  %238 = load float, float* %237, align 4, !tbaa !8
  %239 = fdiv float 1.000000e+00, %238, !fpmath !12
  %240 = fmul float %235, %239
  %241 = add i64 %6, 904
  %242 = getelementptr inbounds float, float* %1, i64 %241
  %243 = load float, float* %242, align 4, !tbaa !8
  %244 = tail call float @_Z4fminff(float %240, float 0x4415AF1D80000000) #2
  %245 = fmul float %243, %244
  %246 = getelementptr inbounds float, float* %2, i64 %241
  store float %245, float* %246, align 4, !tbaa !8
  %247 = load float, float* %209, align 4, !tbaa !8
  %248 = load float, float* %36, align 4, !tbaa !8
  %249 = load float, float* %193, align 4, !tbaa !8
  %250 = fmul float %248, %249
  %251 = fmul float %12, %250
  %252 = fdiv float 1.000000e+00, %251, !fpmath !12
  %253 = fmul float %247, %252
  %254 = add i64 %6, 912
  %255 = getelementptr inbounds float, float* %1, i64 %254
  %256 = load float, float* %255, align 4, !tbaa !8
  %257 = tail call float @_Z4fminff(float %253, float 0x4415AF1D80000000) #2
  %258 = fmul float %256, %257
  %259 = getelementptr inbounds float, float* %2, i64 %254
  store float %258, float* %259, align 4, !tbaa !8
  %260 = load float, float* %57, align 4, !tbaa !8
  %261 = load float, float* %193, align 4, !tbaa !8
  %262 = fmul float %260, %261
  %263 = load float, float* %36, align 4, !tbaa !8
  %264 = load float, float* %140, align 4, !tbaa !8
  %265 = fmul float %263, %264
  %266 = fdiv float 1.000000e+00, %265, !fpmath !12
  %267 = fmul float %262, %266
  %268 = add i64 %6, 920
  %269 = getelementptr inbounds float, float* %1, i64 %268
  %270 = load float, float* %269, align 4, !tbaa !8
  %271 = tail call float @_Z4fminff(float %267, float 0x4415AF1D80000000) #2
  %272 = fmul float %270, %271
  %273 = getelementptr inbounds float, float* %2, i64 %268
  store float %272, float* %273, align 4, !tbaa !8
  %274 = load float, float* %57, align 4, !tbaa !8
  %275 = load float, float* %193, align 4, !tbaa !8
  %276 = fmul float %274, %275
  %277 = load float, float* %109, align 4, !tbaa !8
  %278 = load float, float* %145, align 4, !tbaa !8
  %279 = fmul float %277, %278
  %280 = fdiv float 1.000000e+00, %279, !fpmath !12
  %281 = fmul float %276, %280
  %282 = add i64 %6, 928
  %283 = getelementptr inbounds float, float* %1, i64 %282
  %284 = load float, float* %283, align 4, !tbaa !8
  %285 = tail call float @_Z4fminff(float %281, float 0x4415AF1D80000000) #2
  %286 = fmul float %284, %285
  %287 = getelementptr inbounds float, float* %2, i64 %282
  store float %286, float* %287, align 4, !tbaa !8
  %288 = load float, float* %62, align 4, !tbaa !8
  %289 = load float, float* %193, align 4, !tbaa !8
  %290 = fmul float %288, %289
  %291 = load float, float* %36, align 4, !tbaa !8
  %292 = add i64 %6, 200
  %293 = getelementptr inbounds float, float* %3, i64 %292
  %294 = load float, float* %293, align 4, !tbaa !8
  %295 = fmul float %291, %294
  %296 = fdiv float 1.000000e+00, %295, !fpmath !12
  %297 = fmul float %290, %296
  %298 = add i64 %6, 936
  %299 = getelementptr inbounds float, float* %1, i64 %298
  %300 = load float, float* %299, align 4, !tbaa !8
  %301 = tail call float @_Z4fminff(float %297, float 0x4415AF1D80000000) #2
  %302 = fmul float %300, %301
  %303 = getelementptr inbounds float, float* %2, i64 %298
  store float %302, float* %303, align 4, !tbaa !8
  %304 = load float, float* %62, align 4, !tbaa !8
  %305 = load float, float* %193, align 4, !tbaa !8
  %306 = fmul float %304, %305
  %307 = load float, float* %45, align 4, !tbaa !8
  %308 = load float, float* %145, align 4, !tbaa !8
  %309 = fmul float %307, %308
  %310 = fdiv float 1.000000e+00, %309, !fpmath !12
  %311 = fmul float %306, %310
  %312 = add i64 %6, 944
  %313 = getelementptr inbounds float, float* %1, i64 %312
  %314 = load float, float* %313, align 4, !tbaa !8
  %315 = tail call float @_Z4fminff(float %311, float 0x4415AF1D80000000) #2
  %316 = fmul float %314, %315
  %317 = getelementptr inbounds float, float* %2, i64 %312
  store float %316, float* %317, align 4, !tbaa !8
  %318 = add i64 %6, 120
  %319 = getelementptr inbounds float, float* %3, i64 %318
  %320 = load float, float* %319, align 4, !tbaa !8
  %321 = load float, float* %193, align 4, !tbaa !8
  %322 = fmul float %320, %321
  %323 = load float, float* %145, align 4, !tbaa !8
  %324 = load float, float* %209, align 4, !tbaa !8
  %325 = fmul float %323, %324
  %326 = fdiv float 1.000000e+00, %325, !fpmath !12
  %327 = fmul float %322, %326
  %328 = add i64 %6, 952
  %329 = getelementptr inbounds float, float* %1, i64 %328
  %330 = load float, float* %329, align 4, !tbaa !8
  %331 = tail call float @_Z4fminff(float %327, float 0x4415AF1D80000000) #2
  %332 = fmul float %330, %331
  %333 = getelementptr inbounds float, float* %2, i64 %328
  store float %332, float* %333, align 4, !tbaa !8
  %334 = load float, float* %45, align 4, !tbaa !8
  %335 = load float, float* %193, align 4, !tbaa !8
  %336 = fmul float %334, %335
  %337 = fmul float %12, %336
  %338 = add i64 %6, 224
  %339 = getelementptr inbounds float, float* %3, i64 %338
  %340 = load float, float* %339, align 4, !tbaa !8
  %341 = fdiv float 1.000000e+00, %340, !fpmath !12
  %342 = fmul float %337, %341
  %343 = add i64 %6, 960
  %344 = getelementptr inbounds float, float* %1, i64 %343
  %345 = load float, float* %344, align 4, !tbaa !8
  %346 = tail call float @_Z4fminff(float %342, float 0x4415AF1D80000000) #2
  %347 = fmul float %345, %346
  %348 = getelementptr inbounds float, float* %2, i64 %343
  store float %347, float* %348, align 4, !tbaa !8
  %349 = load float, float* %193, align 4, !tbaa !8
  %350 = load float, float* %237, align 4, !tbaa !8
  %351 = fdiv float 1.000000e+00, %350, !fpmath !12
  %352 = fmul float %349, %351
  %353 = add i64 %6, 968
  %354 = getelementptr inbounds float, float* %1, i64 %353
  %355 = load float, float* %354, align 4, !tbaa !8
  %356 = tail call float @_Z4fminff(float %352, float 0x4415AF1D80000000) #2
  %357 = fmul float %355, %356
  %358 = getelementptr inbounds float, float* %2, i64 %353
  store float %357, float* %358, align 4, !tbaa !8
  %359 = load float, float* %57, align 4, !tbaa !8
  %360 = load float, float* %237, align 4, !tbaa !8
  %361 = fmul float %359, %360
  %362 = load float, float* %109, align 4, !tbaa !8
  %363 = load float, float* %145, align 4, !tbaa !8
  %364 = fmul float %362, %363
  %365 = fdiv float 1.000000e+00, %364, !fpmath !12
  %366 = fmul float %361, %365
  %367 = add i64 %6, 976
  %368 = getelementptr inbounds float, float* %1, i64 %367
  %369 = load float, float* %368, align 4, !tbaa !8
  %370 = tail call float @_Z4fminff(float %366, float 0x4415AF1D80000000) #2
  %371 = fmul float %369, %370
  %372 = getelementptr inbounds float, float* %2, i64 %367
  store float %371, float* %372, align 4, !tbaa !8
  %373 = load float, float* %62, align 4, !tbaa !8
  %374 = load float, float* %237, align 4, !tbaa !8
  %375 = fmul float %373, %374
  %376 = load float, float* %36, align 4, !tbaa !8
  %377 = load float, float* %293, align 4, !tbaa !8
  %378 = fmul float %376, %377
  %379 = fdiv float 1.000000e+00, %378, !fpmath !12
  %380 = fmul float %375, %379
  %381 = add i64 %6, 984
  %382 = getelementptr inbounds float, float* %1, i64 %381
  %383 = load float, float* %382, align 4, !tbaa !8
  %384 = tail call float @_Z4fminff(float %380, float 0x4415AF1D80000000) #2
  %385 = fmul float %383, %384
  %386 = getelementptr inbounds float, float* %2, i64 %381
  store float %385, float* %386, align 4, !tbaa !8
  %387 = load float, float* %14, align 4, !tbaa !8
  %388 = load float, float* %237, align 4, !tbaa !8
  %389 = fmul float %387, %388
  %390 = load float, float* %109, align 4, !tbaa !8
  %391 = add i64 %6, 112
  %392 = getelementptr inbounds float, float* %3, i64 %391
  %393 = load float, float* %392, align 4, !tbaa !8
  %394 = fmul float %390, %393
  %395 = fdiv float 1.000000e+00, %394, !fpmath !12
  %396 = fmul float %389, %395
  %397 = add i64 %6, 992
  %398 = getelementptr inbounds float, float* %1, i64 %397
  %399 = load float, float* %398, align 4, !tbaa !8
  %400 = tail call float @_Z4fminff(float %396, float 0x4415AF1D80000000) #2
  %401 = fmul float %399, %400
  %402 = getelementptr inbounds float, float* %2, i64 %397
  store float %401, float* %402, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fminff(float, float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
