; ModuleID = 'shoc-1.1.5-S3D-ratx_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratx_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratx_kernel(float* nocapture readonly, float* nocapture readonly, float* nocapture, float* nocapture, float* nocapture readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %7 = tail call i64 @_Z13get_global_idj(i32 0) #3
  %8 = getelementptr inbounds float, float* %0, i64 %7
  %9 = load float, float* %8, align 4, !tbaa !8
  %10 = getelementptr inbounds float, float* %1, i64 %7
  %11 = load float, float* %10, align 4, !tbaa !8
  %12 = fadd float %11, 0.000000e+00
  %13 = add i64 %7, 8
  %14 = getelementptr inbounds float, float* %1, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = fadd float %12, %15
  %17 = add i64 %7, 16
  %18 = getelementptr inbounds float, float* %1, i64 %17
  %19 = load float, float* %18, align 4, !tbaa !8
  %20 = fadd float %16, %19
  %21 = add i64 %7, 24
  %22 = getelementptr inbounds float, float* %1, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !8
  %24 = fadd float %20, %23
  %25 = add i64 %7, 32
  %26 = getelementptr inbounds float, float* %1, i64 %25
  %27 = load float, float* %26, align 4, !tbaa !8
  %28 = fadd float %24, %27
  %29 = add i64 %7, 40
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !8
  %32 = fadd float %28, %31
  %33 = add i64 %7, 48
  %34 = getelementptr inbounds float, float* %1, i64 %33
  %35 = load float, float* %34, align 4, !tbaa !8
  %36 = fadd float %32, %35
  %37 = add i64 %7, 56
  %38 = getelementptr inbounds float, float* %1, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !8
  %40 = fadd float %36, %39
  %41 = add i64 %7, 64
  %42 = getelementptr inbounds float, float* %1, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !8
  %44 = fadd float %40, %43
  %45 = add i64 %7, 72
  %46 = getelementptr inbounds float, float* %1, i64 %45
  %47 = load float, float* %46, align 4, !tbaa !8
  %48 = fadd float %44, %47
  %49 = add i64 %7, 80
  %50 = getelementptr inbounds float, float* %1, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !8
  %52 = fadd float %48, %51
  %53 = add i64 %7, 88
  %54 = getelementptr inbounds float, float* %1, i64 %53
  %55 = load float, float* %54, align 4, !tbaa !8
  %56 = fadd float %52, %55
  %57 = add i64 %7, 96
  %58 = getelementptr inbounds float, float* %1, i64 %57
  %59 = load float, float* %58, align 4, !tbaa !8
  %60 = fadd float %56, %59
  %61 = add i64 %7, 104
  %62 = getelementptr inbounds float, float* %1, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !8
  %64 = fadd float %60, %63
  %65 = add i64 %7, 112
  %66 = getelementptr inbounds float, float* %1, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !8
  %68 = fadd float %64, %67
  %69 = add i64 %7, 120
  %70 = getelementptr inbounds float, float* %1, i64 %69
  %71 = load float, float* %70, align 4, !tbaa !8
  %72 = fadd float %68, %71
  %73 = add i64 %7, 128
  %74 = getelementptr inbounds float, float* %1, i64 %73
  %75 = load float, float* %74, align 4, !tbaa !8
  %76 = fadd float %72, %75
  %77 = add i64 %7, 136
  %78 = getelementptr inbounds float, float* %1, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !8
  %80 = fadd float %76, %79
  %81 = add i64 %7, 144
  %82 = getelementptr inbounds float, float* %1, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !8
  %84 = fadd float %80, %83
  %85 = add i64 %7, 152
  %86 = getelementptr inbounds float, float* %1, i64 %85
  %87 = load float, float* %86, align 4, !tbaa !8
  %88 = fadd float %84, %87
  %89 = add i64 %7, 160
  %90 = getelementptr inbounds float, float* %1, i64 %89
  %91 = load float, float* %90, align 4, !tbaa !8
  %92 = fadd float %88, %91
  %93 = add i64 %7, 168
  %94 = getelementptr inbounds float, float* %1, i64 %93
  %95 = load float, float* %94, align 4, !tbaa !8
  %96 = fadd float %92, %95
  %97 = fmul float %9, %5
  %98 = fadd float %96, %11
  %99 = tail call float @llvm.fmuladd.f32(float %31, float 5.000000e+00, float %98)
  %100 = fadd float %99, %47
  %101 = tail call float @llvm.fmuladd.f32(float %51, float 5.000000e-01, float %100)
  %102 = fadd float %101, %55
  %103 = tail call float @llvm.fmuladd.f32(float %71, float 2.000000e+00, float %102)
  %104 = tail call float @llvm.fmuladd.f32(float %63, float 2.000000e+00, float %103)
  %105 = tail call float @llvm.fmuladd.f32(float %67, float 2.000000e+00, float %104)
  %106 = tail call float @llvm.fmuladd.f32(float %63, float 1.500000e+00, float %103)
  %107 = tail call float @llvm.fmuladd.f32(float %67, float 1.500000e+00, float %106)
  %108 = getelementptr inbounds float, float* %4, i64 %7
  %109 = load float, float* %108, align 4, !tbaa !8
  %110 = getelementptr inbounds float, float* %2, i64 %69
  %111 = load float, float* %110, align 4, !tbaa !8
  %112 = fdiv float 1.000000e+00, %111, !fpmath !12
  %113 = fmul float %105, %112
  %114 = fmul float %109, %113
  %115 = fadd float %114, 1.000000e+00
  %116 = fdiv float 1.000000e+00, %115, !fpmath !12
  %117 = fmul float %114, %116
  %118 = tail call float @_Z4fmaxff(float %114, float 0x3810000000000000) #3
  %119 = tail call float @_Z5log10f(float %118) #3
  %120 = fmul float %97, 0xBF85C98820000000
  %121 = tail call float @_Z3expf(float %120) #3
  %122 = fmul float %97, 0xBF42A91CA0000000
  %123 = tail call float @_Z3expf(float %122) #3
  %124 = fmul float %123, 0x3FE781D7E0000000
  %125 = tail call float @llvm.fmuladd.f32(float %121, float 0x3FD0FC5040000000, float %124)
  %126 = fdiv float 1.000000e+00, %97, !fpmath !12
  %127 = fmul float %126, -5.182000e+03
  %128 = tail call float @_Z3expf(float %127) #3
  %129 = fadd float %128, %125
  %130 = tail call float @_Z4fmaxff(float %129, float 0x3810000000000000) #3
  %131 = tail call float @_Z5log10f(float %130) #3
  %132 = tail call float @llvm.fmuladd.f32(float %131, float 0xBFF451EB80000000, float 7.500000e-01)
  %133 = tail call float @llvm.fmuladd.f32(float %131, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %134 = fsub float %119, %133
  %135 = tail call float @llvm.fmuladd.f32(float %134, float 0xBFC1EB8520000000, float %132)
  %136 = fdiv float 1.000000e+00, %135, !fpmath !12
  %137 = fmul float %134, %136
  %138 = tail call float @llvm.fmuladd.f32(float %137, float %137, float 1.000000e+00)
  %139 = fdiv float 1.000000e+00, %138, !fpmath !12
  %140 = fmul float %131, %139
  %141 = tail call float @_Z5exp10f(float %140) #3
  %142 = fmul float %117, %141
  %143 = fmul float %111, %142
  store float %143, float* %110, align 4, !tbaa !8
  %144 = getelementptr inbounds float, float* %3, i64 %69
  %145 = load float, float* %144, align 4, !tbaa !8
  %146 = fmul float %142, %145
  store float %146, float* %144, align 4, !tbaa !8
  %147 = getelementptr inbounds float, float* %4, i64 %13
  %148 = load float, float* %147, align 4, !tbaa !8
  %149 = add i64 %7, 240
  %150 = getelementptr inbounds float, float* %2, i64 %149
  %151 = load float, float* %150, align 4, !tbaa !8
  %152 = fdiv float 1.000000e+00, %151, !fpmath !12
  %153 = fmul float %105, %152
  %154 = fmul float %148, %153
  %155 = fadd float %154, 1.000000e+00
  %156 = fdiv float 1.000000e+00, %155, !fpmath !12
  %157 = fmul float %154, %156
  %158 = tail call float @_Z4fmaxff(float %154, float 0x3810000000000000) #3
  %159 = tail call float @_Z5log10f(float %158) #3
  %160 = fmul float %97, 0xBF74CAB880000000
  %161 = tail call float @_Z3expf(float %160) #3
  %162 = fmul float %97, 0xBF454725E0000000
  %163 = tail call float @_Z3expf(float %162) #3
  %164 = fmul float %163, 0x3FEDD2F1A0000000
  %165 = tail call float @llvm.fmuladd.f32(float %161, float 0x3FB16872C0000000, float %164)
  %166 = fmul float %126, -1.030000e+04
  %167 = tail call float @_Z3expf(float %166) #3
  %168 = fadd float %167, %165
  %169 = tail call float @_Z4fmaxff(float %168, float 0x3810000000000000) #3
  %170 = tail call float @_Z5log10f(float %169) #3
  %171 = tail call float @llvm.fmuladd.f32(float %170, float 0xBFF451EB80000000, float 7.500000e-01)
  %172 = tail call float @llvm.fmuladd.f32(float %170, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %173 = fsub float %159, %172
  %174 = tail call float @llvm.fmuladd.f32(float %173, float 0xBFC1EB8520000000, float %171)
  %175 = fdiv float 1.000000e+00, %174, !fpmath !12
  %176 = fmul float %173, %175
  %177 = tail call float @llvm.fmuladd.f32(float %176, float %176, float 1.000000e+00)
  %178 = fdiv float 1.000000e+00, %177, !fpmath !12
  %179 = fmul float %170, %178
  %180 = tail call float @_Z5exp10f(float %179) #3
  %181 = fmul float %157, %180
  %182 = fmul float %151, %181
  store float %182, float* %150, align 4, !tbaa !8
  %183 = getelementptr inbounds float, float* %3, i64 %149
  %184 = load float, float* %183, align 4, !tbaa !8
  %185 = fmul float %181, %184
  store float %185, float* %183, align 4, !tbaa !8
  %186 = getelementptr inbounds float, float* %4, i64 %17
  %187 = load float, float* %186, align 4, !tbaa !8
  %188 = add i64 %7, 304
  %189 = getelementptr inbounds float, float* %2, i64 %188
  %190 = load float, float* %189, align 4, !tbaa !8
  %191 = fdiv float 1.000000e+00, %190, !fpmath !12
  %192 = fmul float %105, %191
  %193 = fmul float %187, %192
  %194 = fadd float %193, 1.000000e+00
  %195 = fdiv float 1.000000e+00, %194, !fpmath !12
  %196 = fmul float %193, %195
  %197 = tail call float @_Z4fmaxff(float %193, float 0x3810000000000000) #3
  %198 = tail call float @_Z5log10f(float %197) #3
  %199 = fmul float %97, 0xBF71485F00000000
  %200 = tail call float @_Z3expf(float %199) #3
  %201 = fmul float %97, 0xBF43D5D9A0000000
  %202 = tail call float @_Z3expf(float %201) #3
  %203 = fmul float %202, 0x3FE26C2260000000
  %204 = tail call float @llvm.fmuladd.f32(float %200, float 0x3FDB27BB20000000, float %203)
  %205 = fmul float %126, -5.069000e+03
  %206 = tail call float @_Z3expf(float %205) #3
  %207 = fadd float %206, %204
  %208 = tail call float @_Z4fmaxff(float %207, float 0x3810000000000000) #3
  %209 = tail call float @_Z5log10f(float %208) #3
  %210 = tail call float @llvm.fmuladd.f32(float %209, float 0xBFF451EB80000000, float 7.500000e-01)
  %211 = tail call float @llvm.fmuladd.f32(float %209, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %212 = fsub float %198, %211
  %213 = tail call float @llvm.fmuladd.f32(float %212, float 0xBFC1EB8520000000, float %210)
  %214 = fdiv float 1.000000e+00, %213, !fpmath !12
  %215 = fmul float %212, %214
  %216 = tail call float @llvm.fmuladd.f32(float %215, float %215, float 1.000000e+00)
  %217 = fdiv float 1.000000e+00, %216, !fpmath !12
  %218 = fmul float %209, %217
  %219 = tail call float @_Z5exp10f(float %218) #3
  %220 = fmul float %196, %219
  %221 = fmul float %190, %220
  store float %221, float* %189, align 4, !tbaa !8
  %222 = getelementptr inbounds float, float* %3, i64 %188
  %223 = load float, float* %222, align 4, !tbaa !8
  %224 = fmul float %220, %223
  store float %224, float* %222, align 4, !tbaa !8
  %225 = getelementptr inbounds float, float* %4, i64 %21
  %226 = load float, float* %225, align 4, !tbaa !8
  %227 = add i64 %7, 320
  %228 = getelementptr inbounds float, float* %2, i64 %227
  %229 = load float, float* %228, align 4, !tbaa !8
  %230 = fdiv float 1.000000e+00, %229, !fpmath !12
  %231 = fmul float %105, %230
  %232 = fmul float %226, %231
  %233 = fadd float %232, 1.000000e+00
  %234 = fdiv float 1.000000e+00, %233, !fpmath !12
  %235 = fmul float %232, %234
  %236 = tail call float @_Z4fmaxff(float %232, float 0x3810000000000000) #3
  %237 = tail call float @_Z5log10f(float %236) #3
  %238 = fmul float %97, 0xBF6E3A9180000000
  %239 = tail call float @_Z3expf(float %238) #3
  %240 = fmul float %97, 0xBF37C9BBC0000000
  %241 = tail call float @_Z3expf(float %240) #3
  %242 = fmul float %241, 0x3FE9096BC0000000
  %243 = tail call float @llvm.fmuladd.f32(float %239, float 0x3FCBDA5120000000, float %242)
  %244 = fmul float %126, -6.570000e+03
  %245 = tail call float @_Z3expf(float %244) #3
  %246 = fadd float %245, %243
  %247 = tail call float @_Z4fmaxff(float %246, float 0x3810000000000000) #3
  %248 = tail call float @_Z5log10f(float %247) #3
  %249 = tail call float @llvm.fmuladd.f32(float %248, float 0xBFF451EB80000000, float 7.500000e-01)
  %250 = tail call float @llvm.fmuladd.f32(float %248, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %251 = fsub float %237, %250
  %252 = tail call float @llvm.fmuladd.f32(float %251, float 0xBFC1EB8520000000, float %249)
  %253 = fdiv float 1.000000e+00, %252, !fpmath !12
  %254 = fmul float %251, %253
  %255 = tail call float @llvm.fmuladd.f32(float %254, float %254, float 1.000000e+00)
  %256 = fdiv float 1.000000e+00, %255, !fpmath !12
  %257 = fmul float %248, %256
  %258 = tail call float @_Z5exp10f(float %257) #3
  %259 = fmul float %235, %258
  %260 = fmul float %229, %259
  store float %260, float* %228, align 4, !tbaa !8
  %261 = getelementptr inbounds float, float* %3, i64 %227
  %262 = load float, float* %261, align 4, !tbaa !8
  %263 = fmul float %259, %262
  store float %263, float* %261, align 4, !tbaa !8
  %264 = getelementptr inbounds float, float* %4, i64 %25
  %265 = load float, float* %264, align 4, !tbaa !8
  %266 = add i64 %7, 376
  %267 = getelementptr inbounds float, float* %2, i64 %266
  %268 = load float, float* %267, align 4, !tbaa !8
  %269 = fdiv float 1.000000e+00, %268, !fpmath !12
  %270 = fmul float %105, %269
  %271 = fmul float %265, %270
  %272 = fadd float %271, 1.000000e+00
  %273 = fdiv float 1.000000e+00, %272, !fpmath !12
  %274 = fmul float %271, %273
  %275 = tail call float @_Z4fmaxff(float %271, float 0x3810000000000000) #3
  %276 = tail call float @_Z5log10f(float %275) #3
  %277 = fmul float %97, 0xBF8A41A420000000
  %278 = tail call float @_Z3expf(float %277) #3
  %279 = fmul float %97, 0xBF406CD0E0000000
  %280 = tail call float @_Z3expf(float %279) #3
  %281 = fmul float %280, 0x3FE5C28F60000000
  %282 = tail call float @llvm.fmuladd.f32(float %278, float 0x3FD47AE140000000, float %281)
  %283 = fmul float %126, -5.590000e+03
  %284 = tail call float @_Z3expf(float %283) #3
  %285 = fadd float %284, %282
  %286 = tail call float @_Z4fmaxff(float %285, float 0x3810000000000000) #3
  %287 = tail call float @_Z5log10f(float %286) #3
  %288 = tail call float @llvm.fmuladd.f32(float %287, float 0xBFF451EB80000000, float 7.500000e-01)
  %289 = tail call float @llvm.fmuladd.f32(float %287, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %290 = fsub float %276, %289
  %291 = tail call float @llvm.fmuladd.f32(float %290, float 0xBFC1EB8520000000, float %288)
  %292 = fdiv float 1.000000e+00, %291, !fpmath !12
  %293 = fmul float %290, %292
  %294 = tail call float @llvm.fmuladd.f32(float %293, float %293, float 1.000000e+00)
  %295 = fdiv float 1.000000e+00, %294, !fpmath !12
  %296 = fmul float %287, %295
  %297 = tail call float @_Z5exp10f(float %296) #3
  %298 = fmul float %274, %297
  %299 = fmul float %268, %298
  store float %299, float* %267, align 4, !tbaa !8
  %300 = getelementptr inbounds float, float* %3, i64 %266
  %301 = load float, float* %300, align 4, !tbaa !8
  %302 = fmul float %298, %301
  store float %302, float* %300, align 4, !tbaa !8
  %303 = getelementptr inbounds float, float* %4, i64 %29
  %304 = load float, float* %303, align 4, !tbaa !8
  %305 = add i64 %7, 440
  %306 = getelementptr inbounds float, float* %2, i64 %305
  %307 = load float, float* %306, align 4, !tbaa !8
  %308 = fdiv float 1.000000e+00, %307, !fpmath !12
  %309 = fmul float %105, %308
  %310 = fmul float %304, %309
  %311 = fadd float %310, 1.000000e+00
  %312 = fdiv float 1.000000e+00, %311, !fpmath !12
  %313 = fmul float %310, %312
  %314 = tail call float @_Z4fmaxff(float %310, float 0x3810000000000000) #3
  %315 = tail call float @_Z5log10f(float %314) #3
  %316 = fmul float %97, 0xBF6DCA01E0000000
  %317 = tail call float @_Z3expf(float %316) #3
  %318 = fmul float %97, 0xBF4ABA4200000000
  %319 = tail call float @_Z3expf(float %318) #3
  %320 = fmul float %319, 0x3FE2E703A0000000
  %321 = tail call float @llvm.fmuladd.f32(float %317, float 0x3FDA31F8A0000000, float %320)
  %322 = fmul float %126, -5.185000e+03
  %323 = tail call float @_Z3expf(float %322) #3
  %324 = fadd float %323, %321
  %325 = tail call float @_Z4fmaxff(float %324, float 0x3810000000000000) #3
  %326 = tail call float @_Z5log10f(float %325) #3
  %327 = tail call float @llvm.fmuladd.f32(float %326, float 0xBFF451EB80000000, float 7.500000e-01)
  %328 = tail call float @llvm.fmuladd.f32(float %326, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %329 = fsub float %315, %328
  %330 = tail call float @llvm.fmuladd.f32(float %329, float 0xBFC1EB8520000000, float %327)
  %331 = fdiv float 1.000000e+00, %330, !fpmath !12
  %332 = fmul float %329, %331
  %333 = tail call float @llvm.fmuladd.f32(float %332, float %332, float 1.000000e+00)
  %334 = fdiv float 1.000000e+00, %333, !fpmath !12
  %335 = fmul float %326, %334
  %336 = tail call float @_Z5exp10f(float %335) #3
  %337 = fmul float %313, %336
  %338 = fmul float %307, %337
  store float %338, float* %306, align 4, !tbaa !8
  %339 = getelementptr inbounds float, float* %3, i64 %305
  %340 = load float, float* %339, align 4, !tbaa !8
  %341 = fmul float %337, %340
  store float %341, float* %339, align 4, !tbaa !8
  %342 = getelementptr inbounds float, float* %4, i64 %33
  %343 = load float, float* %342, align 4, !tbaa !8
  %344 = add i64 %7, 560
  %345 = getelementptr inbounds float, float* %2, i64 %344
  %346 = load float, float* %345, align 4, !tbaa !8
  %347 = fdiv float 1.000000e+00, %346, !fpmath !12
  %348 = fmul float %105, %347
  %349 = fmul float %343, %348
  %350 = fadd float %349, 1.000000e+00
  %351 = fdiv float 1.000000e+00, %350, !fpmath !12
  %352 = fmul float %349, %351
  %353 = tail call float @_Z4fmaxff(float %349, float 0x3810000000000000) #3
  %354 = tail call float @_Z5log10f(float %353) #3
  %355 = fmul float %97, 0xBF45129A60000000
  %356 = tail call float @_Z3expf(float %355) #3
  %357 = fmul float %356, 0x3FE8418940000000
  %358 = tail call float @llvm.fmuladd.f32(float %121, float 0x3FCEF9DB20000000, float %357)
  %359 = fmul float %126, -4.200000e+03
  %360 = tail call float @_Z3expf(float %359) #3
  %361 = fadd float %360, %358
  %362 = tail call float @_Z4fmaxff(float %361, float 0x3810000000000000) #3
  %363 = tail call float @_Z5log10f(float %362) #3
  %364 = tail call float @llvm.fmuladd.f32(float %363, float 0xBFF451EB80000000, float 7.500000e-01)
  %365 = tail call float @llvm.fmuladd.f32(float %363, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %366 = fsub float %354, %365
  %367 = tail call float @llvm.fmuladd.f32(float %366, float 0xBFC1EB8520000000, float %364)
  %368 = fdiv float 1.000000e+00, %367, !fpmath !12
  %369 = fmul float %366, %368
  %370 = tail call float @llvm.fmuladd.f32(float %369, float %369, float 1.000000e+00)
  %371 = fdiv float 1.000000e+00, %370, !fpmath !12
  %372 = fmul float %363, %371
  %373 = tail call float @_Z5exp10f(float %372) #3
  %374 = fmul float %352, %373
  %375 = fmul float %346, %374
  store float %375, float* %345, align 4, !tbaa !8
  %376 = getelementptr inbounds float, float* %3, i64 %344
  %377 = load float, float* %376, align 4, !tbaa !8
  %378 = fmul float %374, %377
  store float %378, float* %376, align 4, !tbaa !8
  %379 = getelementptr inbounds float, float* %4, i64 %37
  %380 = load float, float* %379, align 4, !tbaa !8
  %381 = add i64 %7, 616
  %382 = getelementptr inbounds float, float* %2, i64 %381
  %383 = load float, float* %382, align 4, !tbaa !8
  %384 = fdiv float 1.000000e+00, %383, !fpmath !12
  %385 = fmul float %105, %384
  %386 = fmul float %380, %385
  %387 = fadd float %386, 1.000000e+00
  %388 = fdiv float 1.000000e+00, %387, !fpmath !12
  %389 = fmul float %386, %388
  %390 = tail call float @_Z4fmaxff(float %386, float 0x3810000000000000) #3
  %391 = tail call float @_Z5log10f(float %390) #3
  %392 = fmul float %97, 0xBF8BACF920000000
  %393 = tail call float @_Z3expf(float %392) #3
  %394 = fmul float %97, 0xBF36489880000000
  %395 = tail call float @_Z3expf(float %394) #3
  %396 = fmul float %395, 0x3FE90E5600000000
  %397 = tail call float @llvm.fmuladd.f32(float %393, float 0x3FCBC6A7E0000000, float %396)
  %398 = fmul float %126, -6.964000e+03
  %399 = tail call float @_Z3expf(float %398) #3
  %400 = fadd float %399, %397
  %401 = tail call float @_Z4fmaxff(float %400, float 0x3810000000000000) #3
  %402 = tail call float @_Z5log10f(float %401) #3
  %403 = tail call float @llvm.fmuladd.f32(float %402, float 0xBFF451EB80000000, float 7.500000e-01)
  %404 = tail call float @llvm.fmuladd.f32(float %402, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %405 = fsub float %391, %404
  %406 = tail call float @llvm.fmuladd.f32(float %405, float 0xBFC1EB8520000000, float %403)
  %407 = fdiv float 1.000000e+00, %406, !fpmath !12
  %408 = fmul float %405, %407
  %409 = tail call float @llvm.fmuladd.f32(float %408, float %408, float 1.000000e+00)
  %410 = fdiv float 1.000000e+00, %409, !fpmath !12
  %411 = fmul float %402, %410
  %412 = tail call float @_Z5exp10f(float %411) #3
  %413 = fmul float %389, %412
  %414 = fmul float %383, %413
  store float %414, float* %382, align 4, !tbaa !8
  %415 = getelementptr inbounds float, float* %3, i64 %381
  %416 = load float, float* %415, align 4, !tbaa !8
  %417 = fmul float %413, %416
  store float %417, float* %415, align 4, !tbaa !8
  %418 = getelementptr inbounds float, float* %4, i64 %41
  %419 = load float, float* %418, align 4, !tbaa !8
  %420 = add i64 %7, 704
  %421 = getelementptr inbounds float, float* %2, i64 %420
  %422 = load float, float* %421, align 4, !tbaa !8
  %423 = fdiv float 1.000000e+00, %422, !fpmath !12
  %424 = fmul float %105, %423
  %425 = fmul float %419, %424
  %426 = fadd float %425, 1.000000e+00
  %427 = fdiv float 1.000000e+00, %426, !fpmath !12
  %428 = fmul float %425, %427
  %429 = tail call float @_Z4fmaxff(float %425, float 0x3810000000000000) #3
  %430 = tail call float @_Z5log10f(float %429) #3
  %431 = fmul float %97, 0xBFB393EE20000000
  %432 = tail call float @_Z3expf(float %431) #3
  %433 = fmul float %97, 0xBF3F89BB80000000
  %434 = tail call float @_Z3expf(float %433) #3
  %435 = fmul float %434, 0x3FE3C0EBE0000000
  %436 = tail call float @llvm.fmuladd.f32(float %432, float 0x3FD87E2820000000, float %435)
  %437 = fmul float %126, -5.093000e+03
  %438 = tail call float @_Z3expf(float %437) #3
  %439 = fadd float %438, %436
  %440 = tail call float @_Z4fmaxff(float %439, float 0x3810000000000000) #3
  %441 = tail call float @_Z5log10f(float %440) #3
  %442 = tail call float @llvm.fmuladd.f32(float %441, float 0xBFF451EB80000000, float 7.500000e-01)
  %443 = tail call float @llvm.fmuladd.f32(float %441, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %444 = fsub float %430, %443
  %445 = tail call float @llvm.fmuladd.f32(float %444, float 0xBFC1EB8520000000, float %442)
  %446 = fdiv float 1.000000e+00, %445, !fpmath !12
  %447 = fmul float %444, %446
  %448 = tail call float @llvm.fmuladd.f32(float %447, float %447, float 1.000000e+00)
  %449 = fdiv float 1.000000e+00, %448, !fpmath !12
  %450 = fmul float %441, %449
  %451 = tail call float @_Z5exp10f(float %450) #3
  %452 = fmul float %428, %451
  %453 = fmul float %422, %452
  store float %453, float* %421, align 4, !tbaa !8
  %454 = getelementptr inbounds float, float* %3, i64 %420
  %455 = load float, float* %454, align 4, !tbaa !8
  %456 = fmul float %452, %455
  store float %456, float* %454, align 4, !tbaa !8
  %457 = getelementptr inbounds float, float* %4, i64 %45
  %458 = load float, float* %457, align 4, !tbaa !8
  %459 = add i64 %7, 736
  %460 = getelementptr inbounds float, float* %2, i64 %459
  %461 = load float, float* %460, align 4, !tbaa !8
  %462 = fdiv float 1.000000e+00, %461, !fpmath !12
  %463 = fmul float %105, %462
  %464 = fmul float %458, %463
  %465 = fadd float %464, 1.000000e+00
  %466 = fdiv float 1.000000e+00, %465, !fpmath !12
  %467 = fmul float %464, %466
  %468 = tail call float @_Z4fmaxff(float %464, float 0x3810000000000000) #3
  %469 = tail call float @_Z5log10f(float %468) #3
  %470 = fmul float %97, 0xBF7B203640000000
  %471 = tail call float @_Z3expf(float %470) #3
  %472 = fmul float %97, 0xBF4F9182C0000000
  %473 = tail call float @_Z3expf(float %472) #3
  %474 = fmul float %473, 0x3FE10A3D80000000
  %475 = tail call float @llvm.fmuladd.f32(float %471, float 0x3FDDEB8520000000, float %474)
  %476 = fmul float %126, -4.970000e+03
  %477 = tail call float @_Z3expf(float %476) #3
  %478 = fadd float %477, %475
  %479 = tail call float @_Z4fmaxff(float %478, float 0x3810000000000000) #3
  %480 = tail call float @_Z5log10f(float %479) #3
  %481 = tail call float @llvm.fmuladd.f32(float %480, float 0xBFF451EB80000000, float 7.500000e-01)
  %482 = tail call float @llvm.fmuladd.f32(float %480, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %483 = fsub float %469, %482
  %484 = tail call float @llvm.fmuladd.f32(float %483, float 0xBFC1EB8520000000, float %481)
  %485 = fdiv float 1.000000e+00, %484, !fpmath !12
  %486 = fmul float %483, %485
  %487 = tail call float @llvm.fmuladd.f32(float %486, float %486, float 1.000000e+00)
  %488 = fdiv float 1.000000e+00, %487, !fpmath !12
  %489 = fmul float %480, %488
  %490 = tail call float @_Z5exp10f(float %489) #3
  %491 = fmul float %467, %490
  %492 = fmul float %461, %491
  store float %492, float* %460, align 4, !tbaa !8
  %493 = getelementptr inbounds float, float* %3, i64 %459
  %494 = load float, float* %493, align 4, !tbaa !8
  %495 = fmul float %491, %494
  store float %495, float* %493, align 4, !tbaa !8
  %496 = getelementptr inbounds float, float* %4, i64 %49
  %497 = load float, float* %496, align 4, !tbaa !8
  %498 = add i64 %7, 904
  %499 = getelementptr inbounds float, float* %2, i64 %498
  %500 = load float, float* %499, align 4, !tbaa !8
  %501 = fdiv float 1.000000e+00, %500, !fpmath !12
  %502 = fmul float %107, %501
  %503 = fmul float %497, %502
  %504 = fadd float %503, 1.000000e+00
  %505 = fdiv float 1.000000e+00, %504, !fpmath !12
  %506 = fmul float %503, %505
  %507 = fmul float %500, %506
  store float %507, float* %499, align 4, !tbaa !8
  %508 = getelementptr inbounds float, float* %3, i64 %498
  %509 = load float, float* %508, align 4, !tbaa !8
  %510 = fmul float %509, %506
  store float %510, float* %508, align 4, !tbaa !8
  %511 = getelementptr inbounds float, float* %4, i64 %53
  %512 = load float, float* %511, align 4, !tbaa !8
  %513 = add i64 %7, 912
  %514 = getelementptr inbounds float, float* %2, i64 %513
  %515 = load float, float* %514, align 4, !tbaa !8
  %516 = fdiv float 1.000000e+00, %515, !fpmath !12
  %517 = fmul float %105, %516
  %518 = fmul float %512, %517
  %519 = fadd float %518, 1.000000e+00
  %520 = fdiv float 1.000000e+00, %519, !fpmath !12
  %521 = fmul float %518, %520
  %522 = tail call float @_Z4fmaxff(float %518, float 0x3810000000000000) #3
  %523 = tail call float @_Z5log10f(float %522) #3
  %524 = fmul float %97, 0xBF285898C0000000
  %525 = tail call float @_Z3expf(float %524) #3
  %526 = fmul float %97, 0xBFCDD08900000000
  %527 = tail call float @_Z3expf(float %526) #3
  %528 = fmul float %527, 0x3FFFB4A240000000
  %529 = tail call float @llvm.fmuladd.f32(float %525, float 0xBFEF694460000000, float %528)
  %530 = fmul float %126, 0x3FB45A1CA0000000
  %531 = tail call float @_Z3expf(float %530) #3
  %532 = fadd float %531, %529
  %533 = tail call float @_Z4fmaxff(float %532, float 0x3810000000000000) #3
  %534 = tail call float @_Z5log10f(float %533) #3
  %535 = tail call float @llvm.fmuladd.f32(float %534, float 0xBFF451EB80000000, float 7.500000e-01)
  %536 = tail call float @llvm.fmuladd.f32(float %534, float 0x3FE570A3E0000000, float 0x3FD99999A0000000)
  %537 = fsub float %523, %536
  %538 = tail call float @llvm.fmuladd.f32(float %537, float 0xBFC1EB8520000000, float %535)
  %539 = fdiv float 1.000000e+00, %538, !fpmath !12
  %540 = fmul float %537, %539
  %541 = tail call float @llvm.fmuladd.f32(float %540, float %540, float 1.000000e+00)
  %542 = fdiv float 1.000000e+00, %541, !fpmath !12
  %543 = fmul float %534, %542
  %544 = tail call float @_Z5exp10f(float %543) #3
  %545 = fmul float %521, %544
  %546 = fmul float %515, %545
  store float %546, float* %514, align 4, !tbaa !8
  %547 = getelementptr inbounds float, float* %3, i64 %513
  %548 = load float, float* %547, align 4, !tbaa !8
  %549 = fmul float %545, %548
  store float %549, float* %547, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fmuladd.f32(float, float, float) #2

; Function Attrs: nounwind readnone
declare float @_Z5log10f(float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fmaxff(float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z3expf(float) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z5exp10f(float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
