; ModuleID = 'shoc-1.1.5-S3D-ratt7_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratt7_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratt7_kernel(float* nocapture readonly, float* readonly, float*, float* readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %6 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %7 = getelementptr inbounds float, float* %0, i64 %6
  %8 = load float, float* %7, align 4, !tbaa !8
  %9 = fmul float %8, %4
  %10 = fmul float %9, 0x4193D2C640000000
  %11 = fdiv float 1.000000e+00, %10, !fpmath !12
  %12 = fmul float %11, 1.013250e+06
  %13 = add i64 %6, 8
  %14 = getelementptr inbounds float, float* %3, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = add i64 %6, 200
  %17 = getelementptr inbounds float, float* %3, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !8
  %19 = fmul float %15, %18
  %20 = fmul float %19, %12
  %21 = add i64 %6, 208
  %22 = getelementptr inbounds float, float* %3, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !8
  %24 = fdiv float 1.000000e+00, %23, !fpmath !12
  %25 = fmul float %24, %20
  %26 = add i64 %6, 1000
  %27 = getelementptr inbounds float, float* %1, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !8
  %29 = tail call float @_Z4fminff(float %25, float 0x4415AF1D80000000) #2
  %30 = fmul float %28, %29
  %31 = getelementptr inbounds float, float* %2, i64 %26
  store float %30, float* %31, align 4, !tbaa !8
  %32 = load float, float* %14, align 4, !tbaa !8
  %33 = load float, float* %17, align 4, !tbaa !8
  %34 = fmul float %32, %33
  %35 = getelementptr inbounds float, float* %3, i64 %6
  %36 = load float, float* %35, align 4, !tbaa !8
  %37 = add i64 %6, 192
  %38 = getelementptr inbounds float, float* %3, i64 %37
  %39 = load float, float* %38, align 4, !tbaa !8
  %40 = fmul float %36, %39
  %41 = fdiv float 1.000000e+00, %40, !fpmath !12
  %42 = fmul float %34, %41
  %43 = add i64 %6, 1008
  %44 = getelementptr inbounds float, float* %1, i64 %43
  %45 = load float, float* %44, align 4, !tbaa !8
  %46 = tail call float @_Z4fminff(float %42, float 0x4415AF1D80000000) #2
  %47 = fmul float %45, %46
  %48 = getelementptr inbounds float, float* %2, i64 %43
  store float %47, float* %48, align 4, !tbaa !8
  %49 = load float, float* %14, align 4, !tbaa !8
  %50 = load float, float* %17, align 4, !tbaa !8
  %51 = fmul float %49, %50
  %52 = add i64 %6, 88
  %53 = getelementptr inbounds float, float* %3, i64 %52
  %54 = load float, float* %53, align 4, !tbaa !8
  %55 = add i64 %6, 104
  %56 = getelementptr inbounds float, float* %3, i64 %55
  %57 = load float, float* %56, align 4, !tbaa !8
  %58 = fmul float %54, %57
  %59 = fdiv float 1.000000e+00, %58, !fpmath !12
  %60 = fmul float %51, %59
  %61 = add i64 %6, 1016
  %62 = getelementptr inbounds float, float* %1, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !8
  %64 = tail call float @_Z4fminff(float %60, float 0x4415AF1D80000000) #2
  %65 = fmul float %63, %64
  %66 = getelementptr inbounds float, float* %2, i64 %61
  store float %65, float* %66, align 4, !tbaa !8
  %67 = add i64 %6, 16
  %68 = getelementptr inbounds float, float* %3, i64 %67
  %69 = load float, float* %68, align 4, !tbaa !8
  %70 = load float, float* %17, align 4, !tbaa !8
  %71 = fmul float %69, %70
  %72 = add i64 %6, 32
  %73 = getelementptr inbounds float, float* %3, i64 %72
  %74 = load float, float* %73, align 4, !tbaa !8
  %75 = load float, float* %38, align 4, !tbaa !8
  %76 = fmul float %74, %75
  %77 = fdiv float 1.000000e+00, %76, !fpmath !12
  %78 = fmul float %71, %77
  %79 = add i64 %6, 1024
  %80 = getelementptr inbounds float, float* %1, i64 %79
  %81 = load float, float* %80, align 4, !tbaa !8
  %82 = tail call float @_Z4fminff(float %78, float 0x4415AF1D80000000) #2
  %83 = fmul float %81, %82
  %84 = getelementptr inbounds float, float* %2, i64 %79
  store float %83, float* %84, align 4, !tbaa !8
  %85 = load float, float* %68, align 4, !tbaa !8
  %86 = load float, float* %17, align 4, !tbaa !8
  %87 = fmul float %85, %86
  %88 = add i64 %6, 72
  %89 = getelementptr inbounds float, float* %3, i64 %88
  %90 = load float, float* %89, align 4, !tbaa !8
  %91 = add i64 %6, 112
  %92 = getelementptr inbounds float, float* %3, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !8
  %94 = fmul float %90, %93
  %95 = fdiv float 1.000000e+00, %94, !fpmath !12
  %96 = fmul float %87, %95
  %97 = add i64 %6, 1032
  %98 = getelementptr inbounds float, float* %1, i64 %97
  %99 = load float, float* %98, align 4, !tbaa !8
  %100 = tail call float @_Z4fminff(float %96, float 0x4415AF1D80000000) #2
  %101 = fmul float %99, %100
  %102 = getelementptr inbounds float, float* %2, i64 %97
  store float %101, float* %102, align 4, !tbaa !8
  %103 = load float, float* %73, align 4, !tbaa !8
  %104 = load float, float* %17, align 4, !tbaa !8
  %105 = fmul float %103, %104
  %106 = add i64 %6, 40
  %107 = getelementptr inbounds float, float* %3, i64 %106
  %108 = load float, float* %107, align 4, !tbaa !8
  %109 = load float, float* %38, align 4, !tbaa !8
  %110 = fmul float %108, %109
  %111 = fdiv float 1.000000e+00, %110, !fpmath !12
  %112 = fmul float %105, %111
  %113 = add i64 %6, 1040
  %114 = getelementptr inbounds float, float* %1, i64 %113
  %115 = load float, float* %114, align 4, !tbaa !8
  %116 = tail call float @_Z4fminff(float %112, float 0x4415AF1D80000000) #2
  %117 = fmul float %115, %116
  %118 = getelementptr inbounds float, float* %2, i64 %113
  store float %117, float* %118, align 4, !tbaa !8
  %119 = load float, float* %14, align 4, !tbaa !8
  %120 = add i64 %6, 160
  %121 = getelementptr inbounds float, float* %3, i64 %120
  %122 = load float, float* %121, align 4, !tbaa !8
  %123 = fmul float %119, %122
  %124 = fmul float %12, %123
  %125 = add i64 %6, 168
  %126 = getelementptr inbounds float, float* %3, i64 %125
  %127 = load float, float* %126, align 4, !tbaa !8
  %128 = fdiv float 1.000000e+00, %127, !fpmath !12
  %129 = fmul float %124, %128
  %130 = add i64 %6, 1048
  %131 = getelementptr inbounds float, float* %1, i64 %130
  %132 = load float, float* %131, align 4, !tbaa !8
  %133 = tail call float @_Z4fminff(float %129, float 0x4415AF1D80000000) #2
  %134 = fmul float %132, %133
  %135 = getelementptr inbounds float, float* %2, i64 %130
  store float %134, float* %135, align 4, !tbaa !8
  %136 = load float, float* %14, align 4, !tbaa !8
  %137 = load float, float* %121, align 4, !tbaa !8
  %138 = fmul float %136, %137
  %139 = load float, float* %35, align 4, !tbaa !8
  %140 = add i64 %6, 144
  %141 = getelementptr inbounds float, float* %3, i64 %140
  %142 = load float, float* %141, align 4, !tbaa !8
  %143 = fmul float %139, %142
  %144 = fdiv float 1.000000e+00, %143, !fpmath !12
  %145 = fmul float %138, %144
  %146 = add i64 %6, 1056
  %147 = getelementptr inbounds float, float* %1, i64 %146
  %148 = load float, float* %147, align 4, !tbaa !8
  %149 = tail call float @_Z4fminff(float %145, float 0x4415AF1D80000000) #2
  %150 = fmul float %148, %149
  %151 = getelementptr inbounds float, float* %2, i64 %146
  store float %150, float* %151, align 4, !tbaa !8
  %152 = load float, float* %14, align 4, !tbaa !8
  %153 = load float, float* %121, align 4, !tbaa !8
  %154 = fmul float %152, %153
  %155 = load float, float* %35, align 4, !tbaa !8
  %156 = add i64 %6, 152
  %157 = getelementptr inbounds float, float* %3, i64 %156
  %158 = load float, float* %157, align 4, !tbaa !8
  %159 = fmul float %155, %158
  %160 = fdiv float 1.000000e+00, %159, !fpmath !12
  %161 = fmul float %154, %160
  %162 = add i64 %6, 1064
  %163 = getelementptr inbounds float, float* %1, i64 %162
  %164 = load float, float* %163, align 4, !tbaa !8
  %165 = tail call float @_Z4fminff(float %161, float 0x4415AF1D80000000) #2
  %166 = fmul float %164, %165
  %167 = getelementptr inbounds float, float* %2, i64 %162
  store float %166, float* %167, align 4, !tbaa !8
  %168 = load float, float* %68, align 4, !tbaa !8
  %169 = load float, float* %121, align 4, !tbaa !8
  %170 = fmul float %168, %169
  %171 = load float, float* %14, align 4, !tbaa !8
  %172 = load float, float* %17, align 4, !tbaa !8
  %173 = fmul float %171, %172
  %174 = fdiv float 1.000000e+00, %173, !fpmath !12
  %175 = fmul float %170, %174
  %176 = add i64 %6, 1072
  %177 = getelementptr inbounds float, float* %1, i64 %176
  %178 = load float, float* %177, align 4, !tbaa !8
  %179 = tail call float @_Z4fminff(float %175, float 0x4415AF1D80000000) #2
  %180 = fmul float %178, %179
  %181 = getelementptr inbounds float, float* %2, i64 %176
  store float %180, float* %181, align 4, !tbaa !8
  %182 = load float, float* %68, align 4, !tbaa !8
  %183 = load float, float* %121, align 4, !tbaa !8
  %184 = fmul float %182, %183
  %185 = load float, float* %53, align 4, !tbaa !8
  %186 = load float, float* %56, align 4, !tbaa !8
  %187 = fmul float %185, %186
  %188 = fdiv float 1.000000e+00, %187, !fpmath !12
  %189 = fmul float %184, %188
  %190 = add i64 %6, 1080
  %191 = getelementptr inbounds float, float* %1, i64 %190
  %192 = load float, float* %191, align 4, !tbaa !8
  %193 = tail call float @_Z4fminff(float %189, float 0x4415AF1D80000000) #2
  %194 = fmul float %192, %193
  %195 = getelementptr inbounds float, float* %2, i64 %190
  store float %194, float* %195, align 4, !tbaa !8
  %196 = load float, float* %73, align 4, !tbaa !8
  %197 = load float, float* %121, align 4, !tbaa !8
  %198 = fmul float %196, %197
  %199 = load float, float* %107, align 4, !tbaa !8
  %200 = load float, float* %141, align 4, !tbaa !8
  %201 = fmul float %199, %200
  %202 = fdiv float 1.000000e+00, %201, !fpmath !12
  %203 = fmul float %198, %202
  %204 = add i64 %6, 1088
  %205 = getelementptr inbounds float, float* %1, i64 %204
  %206 = load float, float* %205, align 4, !tbaa !8
  %207 = tail call float @_Z4fminff(float %203, float 0x4415AF1D80000000) #2
  %208 = fmul float %206, %207
  %209 = getelementptr inbounds float, float* %2, i64 %204
  store float %208, float* %209, align 4, !tbaa !8
  %210 = add i64 %6, 24
  %211 = getelementptr inbounds float, float* %3, i64 %210
  %212 = load float, float* %211, align 4, !tbaa !8
  %213 = load float, float* %121, align 4, !tbaa !8
  %214 = fmul float %212, %213
  %215 = add i64 %6, 48
  %216 = getelementptr inbounds float, float* %3, i64 %215
  %217 = load float, float* %216, align 4, !tbaa !8
  %218 = load float, float* %141, align 4, !tbaa !8
  %219 = fmul float %217, %218
  %220 = fdiv float 1.000000e+00, %219, !fpmath !12
  %221 = fmul float %214, %220
  %222 = add i64 %6, 1096
  %223 = getelementptr inbounds float, float* %1, i64 %222
  %224 = load float, float* %223, align 4, !tbaa !8
  %225 = tail call float @_Z4fminff(float %221, float 0x4415AF1D80000000) #2
  %226 = fmul float %224, %225
  %227 = getelementptr inbounds float, float* %2, i64 %222
  store float %226, float* %227, align 4, !tbaa !8
  %228 = load float, float* %211, align 4, !tbaa !8
  %229 = load float, float* %121, align 4, !tbaa !8
  %230 = fmul float %228, %229
  %231 = load float, float* %68, align 4, !tbaa !8
  %232 = load float, float* %22, align 4, !tbaa !8
  %233 = fmul float %231, %232
  %234 = fdiv float 1.000000e+00, %233, !fpmath !12
  %235 = fmul float %230, %234
  %236 = add i64 %6, 1104
  %237 = getelementptr inbounds float, float* %1, i64 %236
  %238 = load float, float* %237, align 4, !tbaa !8
  %239 = tail call float @_Z4fminff(float %235, float 0x4415AF1D80000000) #2
  %240 = fmul float %238, %239
  %241 = getelementptr inbounds float, float* %2, i64 %236
  store float %240, float* %241, align 4, !tbaa !8
  %242 = load float, float* %211, align 4, !tbaa !8
  %243 = load float, float* %121, align 4, !tbaa !8
  %244 = fmul float %242, %243
  %245 = add i64 %6, 120
  %246 = getelementptr inbounds float, float* %3, i64 %245
  %247 = load float, float* %246, align 4, !tbaa !8
  %248 = add i64 %6, 128
  %249 = getelementptr inbounds float, float* %3, i64 %248
  %250 = load float, float* %249, align 4, !tbaa !8
  %251 = fmul float %247, %250
  %252 = fdiv float 1.000000e+00, %251, !fpmath !12
  %253 = fmul float %244, %252
  %254 = add i64 %6, 1112
  %255 = getelementptr inbounds float, float* %1, i64 %254
  %256 = load float, float* %255, align 4, !tbaa !8
  %257 = tail call float @_Z4fminff(float %253, float 0x4415AF1D80000000) #2
  %258 = fmul float %256, %257
  %259 = getelementptr inbounds float, float* %2, i64 %254
  store float %258, float* %259, align 4, !tbaa !8
  %260 = load float, float* %216, align 4, !tbaa !8
  %261 = load float, float* %121, align 4, !tbaa !8
  %262 = fmul float %260, %261
  %263 = load float, float* %73, align 4, !tbaa !8
  %264 = load float, float* %22, align 4, !tbaa !8
  %265 = fmul float %263, %264
  %266 = fdiv float 1.000000e+00, %265, !fpmath !12
  %267 = fmul float %262, %266
  %268 = add i64 %6, 1120
  %269 = getelementptr inbounds float, float* %1, i64 %268
  %270 = load float, float* %269, align 4, !tbaa !8
  %271 = tail call float @_Z4fminff(float %267, float 0x4415AF1D80000000) #2
  %272 = fmul float %270, %271
  %273 = getelementptr inbounds float, float* %2, i64 %268
  store float %272, float* %273, align 4, !tbaa !8
  %274 = add i64 %6, 56
  %275 = getelementptr inbounds float, float* %3, i64 %274
  %276 = load float, float* %275, align 4, !tbaa !8
  %277 = load float, float* %121, align 4, !tbaa !8
  %278 = fmul float %276, %277
  %279 = load float, float* %216, align 4, !tbaa !8
  %280 = load float, float* %126, align 4, !tbaa !8
  %281 = fmul float %279, %280
  %282 = fdiv float 1.000000e+00, %281, !fpmath !12
  %283 = fmul float %278, %282
  %284 = add i64 %6, 1128
  %285 = getelementptr inbounds float, float* %1, i64 %284
  %286 = load float, float* %285, align 4, !tbaa !8
  %287 = tail call float @_Z4fminff(float %283, float 0x4415AF1D80000000) #2
  %288 = fmul float %286, %287
  %289 = getelementptr inbounds float, float* %2, i64 %284
  store float %288, float* %289, align 4, !tbaa !8
  %290 = load float, float* %246, align 4, !tbaa !8
  %291 = load float, float* %121, align 4, !tbaa !8
  %292 = fmul float %290, %291
  %293 = load float, float* %56, align 4, !tbaa !8
  %294 = load float, float* %126, align 4, !tbaa !8
  %295 = fmul float %293, %294
  %296 = fdiv float 1.000000e+00, %295, !fpmath !12
  %297 = fmul float %292, %296
  %298 = add i64 %6, 1136
  %299 = getelementptr inbounds float, float* %1, i64 %298
  %300 = load float, float* %299, align 4, !tbaa !8
  %301 = tail call float @_Z4fminff(float %297, float 0x4415AF1D80000000) #2
  %302 = fmul float %300, %301
  %303 = getelementptr inbounds float, float* %2, i64 %298
  store float %302, float* %303, align 4, !tbaa !8
  %304 = load float, float* %53, align 4, !tbaa !8
  %305 = load float, float* %121, align 4, !tbaa !8
  %306 = fmul float %304, %305
  %307 = add i64 %6, 96
  %308 = getelementptr inbounds float, float* %3, i64 %307
  %309 = load float, float* %308, align 4, !tbaa !8
  %310 = load float, float* %141, align 4, !tbaa !8
  %311 = fmul float %309, %310
  %312 = fdiv float 1.000000e+00, %311, !fpmath !12
  %313 = fmul float %306, %312
  %314 = add i64 %6, 1144
  %315 = getelementptr inbounds float, float* %1, i64 %314
  %316 = load float, float* %315, align 4, !tbaa !8
  %317 = tail call float @_Z4fminff(float %313, float 0x4415AF1D80000000) #2
  %318 = fmul float %316, %317
  %319 = getelementptr inbounds float, float* %2, i64 %314
  store float %318, float* %319, align 4, !tbaa !8
  %320 = load float, float* %53, align 4, !tbaa !8
  %321 = load float, float* %121, align 4, !tbaa !8
  %322 = fmul float %320, %321
  %323 = fmul float %12, %322
  %324 = add i64 %6, 232
  %325 = getelementptr inbounds float, float* %3, i64 %324
  %326 = load float, float* %325, align 4, !tbaa !8
  %327 = fdiv float 1.000000e+00, %326, !fpmath !12
  %328 = fmul float %323, %327
  %329 = add i64 %6, 1152
  %330 = getelementptr inbounds float, float* %1, i64 %329
  %331 = load float, float* %330, align 4, !tbaa !8
  %332 = tail call float @_Z4fminff(float %328, float 0x4415AF1D80000000) #2
  %333 = fmul float %331, %332
  %334 = getelementptr inbounds float, float* %2, i64 %329
  store float %333, float* %334, align 4, !tbaa !8
  %335 = load float, float* %53, align 4, !tbaa !8
  %336 = load float, float* %121, align 4, !tbaa !8
  %337 = fmul float %335, %336
  %338 = load float, float* %14, align 4, !tbaa !8
  %339 = add i64 %6, 224
  %340 = getelementptr inbounds float, float* %3, i64 %339
  %341 = load float, float* %340, align 4, !tbaa !8
  %342 = fmul float %338, %341
  %343 = fdiv float 1.000000e+00, %342, !fpmath !12
  %344 = fmul float %337, %343
  %345 = add i64 %6, 1160
  %346 = getelementptr inbounds float, float* %1, i64 %345
  %347 = load float, float* %346, align 4, !tbaa !8
  %348 = tail call float @_Z4fminff(float %344, float 0x4415AF1D80000000) #2
  %349 = fmul float %347, %348
  %350 = getelementptr inbounds float, float* %2, i64 %345
  store float %349, float* %350, align 4, !tbaa !8
  %351 = load float, float* %22, align 4, !tbaa !8
  %352 = load float, float* %53, align 4, !tbaa !8
  %353 = load float, float* %56, align 4, !tbaa !8
  %354 = fmul float %352, %353
  %355 = fmul float %12, %354
  %356 = fdiv float 1.000000e+00, %355, !fpmath !12
  %357 = fmul float %351, %356
  %358 = add i64 %6, 1168
  %359 = getelementptr inbounds float, float* %1, i64 %358
  %360 = load float, float* %359, align 4, !tbaa !8
  %361 = tail call float @_Z4fminff(float %357, float 0x4415AF1D80000000) #2
  %362 = fmul float %360, %361
  %363 = getelementptr inbounds float, float* %2, i64 %358
  store float %362, float* %363, align 4, !tbaa !8
  %364 = load float, float* %14, align 4, !tbaa !8
  %365 = load float, float* %22, align 4, !tbaa !8
  %366 = fmul float %364, %365
  %367 = fmul float %12, %366
  %368 = add i64 %6, 216
  %369 = getelementptr inbounds float, float* %3, i64 %368
  %370 = load float, float* %369, align 4, !tbaa !8
  %371 = fdiv float 1.000000e+00, %370, !fpmath !12
  %372 = fmul float %367, %371
  %373 = add i64 %6, 1176
  %374 = getelementptr inbounds float, float* %1, i64 %373
  %375 = load float, float* %374, align 4, !tbaa !8
  %376 = tail call float @_Z4fminff(float %372, float 0x4415AF1D80000000) #2
  %377 = fmul float %375, %376
  %378 = getelementptr inbounds float, float* %2, i64 %373
  store float %377, float* %378, align 4, !tbaa !8
  %379 = load float, float* %14, align 4, !tbaa !8
  %380 = load float, float* %22, align 4, !tbaa !8
  %381 = fmul float %379, %380
  %382 = load float, float* %53, align 4, !tbaa !8
  %383 = load float, float* %246, align 4, !tbaa !8
  %384 = fmul float %382, %383
  %385 = fdiv float 1.000000e+00, %384, !fpmath !12
  %386 = fmul float %381, %385
  %387 = add i64 %6, 1184
  %388 = getelementptr inbounds float, float* %1, i64 %387
  %389 = load float, float* %388, align 4, !tbaa !8
  %390 = tail call float @_Z4fminff(float %386, float 0x4415AF1D80000000) #2
  %391 = fmul float %389, %390
  %392 = getelementptr inbounds float, float* %2, i64 %387
  store float %391, float* %392, align 4, !tbaa !8
  %393 = load float, float* %14, align 4, !tbaa !8
  %394 = load float, float* %22, align 4, !tbaa !8
  %395 = fmul float %393, %394
  %396 = load float, float* %35, align 4, !tbaa !8
  %397 = load float, float* %17, align 4, !tbaa !8
  %398 = fmul float %396, %397
  %399 = fdiv float 1.000000e+00, %398, !fpmath !12
  %400 = fmul float %395, %399
  %401 = add i64 %6, 1192
  %402 = getelementptr inbounds float, float* %1, i64 %401
  %403 = load float, float* %402, align 4, !tbaa !8
  %404 = tail call float @_Z4fminff(float %400, float 0x4415AF1D80000000) #2
  %405 = fmul float %403, %404
  %406 = getelementptr inbounds float, float* %2, i64 %401
  store float %405, float* %406, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fminff(float, float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
