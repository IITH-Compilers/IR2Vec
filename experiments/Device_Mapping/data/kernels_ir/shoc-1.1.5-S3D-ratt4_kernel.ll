; ModuleID = 'shoc-1.1.5-S3D-ratt4_kernel.cl'
source_filename = "shoc-1.1.5-S3D-ratt4_kernel.cl"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

; Function Attrs: nounwind ssp uwtable
define spir_kernel void @ratt4_kernel(float* nocapture readonly, float* readonly, float*, float* nocapture readonly, float) local_unnamed_addr #0 !kernel_arg_addr_space !4 !kernel_arg_access_qual !5 !kernel_arg_type !6 !kernel_arg_base_type !6 !kernel_arg_type_qual !7 {
  %6 = tail call i64 @_Z13get_global_idj(i32 0) #2
  %7 = getelementptr inbounds float, float* %0, i64 %6
  %8 = load float, float* %7, align 4, !tbaa !8
  %9 = fmul float %8, %4
  %10 = fmul float %9, 0x4193D2C640000000
  %11 = fdiv float 1.000000e+00, %10, !fpmath !12
  %12 = fmul float %11, 1.013250e+06
  %13 = add i64 %6, 24
  %14 = getelementptr inbounds float, float* %3, i64 %13
  %15 = load float, float* %14, align 4, !tbaa !8
  %16 = add i64 %6, 72
  %17 = getelementptr inbounds float, float* %3, i64 %16
  %18 = load float, float* %17, align 4, !tbaa !8
  %19 = fmul float %15, %18
  %20 = add i64 %6, 32
  %21 = getelementptr inbounds float, float* %3, i64 %20
  %22 = load float, float* %21, align 4, !tbaa !8
  %23 = add i64 %6, 120
  %24 = getelementptr inbounds float, float* %3, i64 %23
  %25 = load float, float* %24, align 4, !tbaa !8
  %26 = fmul float %22, %25
  %27 = fdiv float 1.000000e+00, %26, !fpmath !12
  %28 = fmul float %19, %27
  %29 = add i64 %6, 400
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = load float, float* %30, align 4, !tbaa !8
  %32 = tail call float @_Z4fminff(float %28, float 0x4415AF1D80000000) #2
  %33 = fmul float %31, %32
  %34 = getelementptr inbounds float, float* %2, i64 %29
  store float %33, float* %34, align 4, !tbaa !8
  %35 = load float, float* %14, align 4, !tbaa !8
  %36 = load float, float* %17, align 4, !tbaa !8
  %37 = fmul float %35, %36
  %38 = add i64 %6, 8
  %39 = getelementptr inbounds float, float* %3, i64 %38
  %40 = load float, float* %39, align 4, !tbaa !8
  %41 = fmul float %40, %40
  %42 = add i64 %6, 112
  %43 = getelementptr inbounds float, float* %3, i64 %42
  %44 = load float, float* %43, align 4, !tbaa !8
  %45 = fmul float %41, %44
  %46 = fmul float %12, %45
  %47 = fdiv float 1.000000e+00, %46, !fpmath !12
  %48 = fmul float %37, %47
  %49 = add i64 %6, 408
  %50 = getelementptr inbounds float, float* %1, i64 %49
  %51 = load float, float* %50, align 4, !tbaa !8
  %52 = tail call float @_Z4fminff(float %48, float 0x4415AF1D80000000) #2
  %53 = fmul float %51, %52
  %54 = getelementptr inbounds float, float* %2, i64 %49
  store float %53, float* %54, align 4, !tbaa !8
  %55 = load float, float* %21, align 4, !tbaa !8
  %56 = load float, float* %17, align 4, !tbaa !8
  %57 = fmul float %55, %56
  %58 = load float, float* %39, align 4, !tbaa !8
  %59 = add i64 %6, 128
  %60 = getelementptr inbounds float, float* %3, i64 %59
  %61 = load float, float* %60, align 4, !tbaa !8
  %62 = fmul float %58, %61
  %63 = fdiv float 1.000000e+00, %62, !fpmath !12
  %64 = fmul float %57, %63
  %65 = add i64 %6, 416
  %66 = getelementptr inbounds float, float* %1, i64 %65
  %67 = load float, float* %66, align 4, !tbaa !8
  %68 = tail call float @_Z4fminff(float %64, float 0x4415AF1D80000000) #2
  %69 = fmul float %67, %68
  %70 = getelementptr inbounds float, float* %2, i64 %65
  store float %69, float* %70, align 4, !tbaa !8
  %71 = load float, float* %21, align 4, !tbaa !8
  %72 = load float, float* %17, align 4, !tbaa !8
  %73 = fmul float %71, %72
  %74 = add i64 %6, 40
  %75 = getelementptr inbounds float, float* %3, i64 %74
  %76 = load float, float* %75, align 4, !tbaa !8
  %77 = add i64 %6, 64
  %78 = getelementptr inbounds float, float* %3, i64 %77
  %79 = load float, float* %78, align 4, !tbaa !8
  %80 = fmul float %76, %79
  %81 = fdiv float 1.000000e+00, %80, !fpmath !12
  %82 = fmul float %73, %81
  %83 = add i64 %6, 424
  %84 = getelementptr inbounds float, float* %1, i64 %83
  %85 = load float, float* %84, align 4, !tbaa !8
  %86 = tail call float @_Z4fminff(float %82, float 0x4415AF1D80000000) #2
  %87 = fmul float %85, %86
  %88 = getelementptr inbounds float, float* %2, i64 %83
  store float %87, float* %88, align 4, !tbaa !8
  %89 = add i64 %6, 48
  %90 = getelementptr inbounds float, float* %3, i64 %89
  %91 = load float, float* %90, align 4, !tbaa !8
  %92 = load float, float* %17, align 4, !tbaa !8
  %93 = fmul float %91, %92
  %94 = load float, float* %21, align 4, !tbaa !8
  %95 = load float, float* %60, align 4, !tbaa !8
  %96 = fmul float %94, %95
  %97 = fdiv float 1.000000e+00, %96, !fpmath !12
  %98 = fmul float %93, %97
  %99 = add i64 %6, 432
  %100 = getelementptr inbounds float, float* %1, i64 %99
  %101 = load float, float* %100, align 4, !tbaa !8
  %102 = tail call float @_Z4fminff(float %98, float 0x4415AF1D80000000) #2
  %103 = fmul float %101, %102
  %104 = getelementptr inbounds float, float* %2, i64 %99
  store float %103, float* %104, align 4, !tbaa !8
  %105 = load float, float* %17, align 4, !tbaa !8
  %106 = add i64 %6, 104
  %107 = getelementptr inbounds float, float* %3, i64 %106
  %108 = load float, float* %107, align 4, !tbaa !8
  %109 = fmul float %105, %108
  %110 = fmul float %12, %109
  %111 = add i64 %6, 200
  %112 = getelementptr inbounds float, float* %3, i64 %111
  %113 = load float, float* %112, align 4, !tbaa !8
  %114 = fdiv float 1.000000e+00, %113, !fpmath !12
  %115 = fmul float %110, %114
  %116 = add i64 %6, 440
  %117 = getelementptr inbounds float, float* %1, i64 %116
  %118 = load float, float* %117, align 4, !tbaa !8
  %119 = tail call float @_Z4fminff(float %115, float 0x4415AF1D80000000) #2
  %120 = fmul float %118, %119
  %121 = getelementptr inbounds float, float* %2, i64 %116
  store float %120, float* %121, align 4, !tbaa !8
  %122 = load float, float* %78, align 4, !tbaa !8
  %123 = load float, float* %17, align 4, !tbaa !8
  %124 = fmul float %122, %123
  %125 = load float, float* %39, align 4, !tbaa !8
  %126 = add i64 %6, 144
  %127 = getelementptr inbounds float, float* %3, i64 %126
  %128 = load float, float* %127, align 4, !tbaa !8
  %129 = fmul float %125, %128
  %130 = fdiv float 1.000000e+00, %129, !fpmath !12
  %131 = fmul float %124, %130
  %132 = add i64 %6, 448
  %133 = getelementptr inbounds float, float* %1, i64 %132
  %134 = load float, float* %133, align 4, !tbaa !8
  %135 = tail call float @_Z4fminff(float %131, float 0x4415AF1D80000000) #2
  %136 = fmul float %134, %135
  %137 = getelementptr inbounds float, float* %2, i64 %132
  store float %136, float* %137, align 4, !tbaa !8
  %138 = load float, float* %17, align 4, !tbaa !8
  %139 = fmul float %138, %138
  %140 = getelementptr inbounds float, float* %3, i64 %6
  %141 = load float, float* %140, align 4, !tbaa !8
  %142 = load float, float* %127, align 4, !tbaa !8
  %143 = fmul float %141, %142
  %144 = fdiv float 1.000000e+00, %143, !fpmath !12
  %145 = fmul float %139, %144
  %146 = add i64 %6, 456
  %147 = getelementptr inbounds float, float* %1, i64 %146
  %148 = load float, float* %147, align 4, !tbaa !8
  %149 = tail call float @_Z4fminff(float %145, float 0x4415AF1D80000000) #2
  %150 = fmul float %148, %149
  %151 = getelementptr inbounds float, float* %2, i64 %146
  store float %150, float* %151, align 4, !tbaa !8
  %152 = add i64 %6, 80
  %153 = getelementptr inbounds float, float* %3, i64 %152
  %154 = load float, float* %153, align 4, !tbaa !8
  %155 = load float, float* %17, align 4, !tbaa !8
  %156 = fdiv float 1.000000e+00, %155, !fpmath !12
  %157 = fmul float %154, %156
  %158 = add i64 %6, 464
  %159 = getelementptr inbounds float, float* %1, i64 %158
  %160 = load float, float* %159, align 4, !tbaa !8
  %161 = tail call float @_Z4fminff(float %157, float 0x4415AF1D80000000) #2
  %162 = fmul float %160, %161
  %163 = getelementptr inbounds float, float* %2, i64 %158
  store float %162, float* %163, align 4, !tbaa !8
  %164 = load float, float* %39, align 4, !tbaa !8
  %165 = load float, float* %153, align 4, !tbaa !8
  %166 = fmul float %164, %165
  %167 = load float, float* %140, align 4, !tbaa !8
  %168 = load float, float* %78, align 4, !tbaa !8
  %169 = fmul float %167, %168
  %170 = fdiv float 1.000000e+00, %169, !fpmath !12
  %171 = fmul float %166, %170
  %172 = add i64 %6, 472
  %173 = getelementptr inbounds float, float* %1, i64 %172
  %174 = load float, float* %173, align 4, !tbaa !8
  %175 = tail call float @_Z4fminff(float %171, float 0x4415AF1D80000000) #2
  %176 = fmul float %174, %175
  %177 = getelementptr inbounds float, float* %2, i64 %172
  store float %176, float* %177, align 4, !tbaa !8
  %178 = add i64 %6, 16
  %179 = getelementptr inbounds float, float* %3, i64 %178
  %180 = load float, float* %179, align 4, !tbaa !8
  %181 = load float, float* %153, align 4, !tbaa !8
  %182 = fmul float %180, %181
  %183 = load float, float* %140, align 4, !tbaa !8
  %184 = load float, float* %107, align 4, !tbaa !8
  %185 = fmul float %183, %184
  %186 = fdiv float 1.000000e+00, %185, !fpmath !12
  %187 = fmul float %182, %186
  %188 = add i64 %6, 480
  %189 = getelementptr inbounds float, float* %1, i64 %188
  %190 = load float, float* %189, align 4, !tbaa !8
  %191 = tail call float @_Z4fminff(float %187, float 0x4415AF1D80000000) #2
  %192 = fmul float %190, %191
  %193 = getelementptr inbounds float, float* %2, i64 %188
  store float %192, float* %193, align 4, !tbaa !8
  %194 = load float, float* %179, align 4, !tbaa !8
  %195 = load float, float* %153, align 4, !tbaa !8
  %196 = fmul float %194, %195
  %197 = load float, float* %39, align 4, !tbaa !8
  %198 = load float, float* %24, align 4, !tbaa !8
  %199 = fmul float %197, %198
  %200 = fdiv float 1.000000e+00, %199, !fpmath !12
  %201 = fmul float %196, %200
  %202 = add i64 %6, 488
  %203 = getelementptr inbounds float, float* %1, i64 %202
  %204 = load float, float* %203, align 4, !tbaa !8
  %205 = tail call float @_Z4fminff(float %201, float 0x4415AF1D80000000) #2
  %206 = fmul float %204, %205
  %207 = getelementptr inbounds float, float* %2, i64 %202
  store float %206, float* %207, align 4, !tbaa !8
  %208 = load float, float* %21, align 4, !tbaa !8
  %209 = load float, float* %153, align 4, !tbaa !8
  %210 = fmul float %208, %209
  %211 = load float, float* %39, align 4, !tbaa !8
  %212 = load float, float* %60, align 4, !tbaa !8
  %213 = fmul float %211, %212
  %214 = fdiv float 1.000000e+00, %213, !fpmath !12
  %215 = fmul float %210, %214
  %216 = add i64 %6, 496
  %217 = getelementptr inbounds float, float* %1, i64 %216
  %218 = load float, float* %217, align 4, !tbaa !8
  %219 = tail call float @_Z4fminff(float %215, float 0x4415AF1D80000000) #2
  %220 = fmul float %218, %219
  %221 = getelementptr inbounds float, float* %2, i64 %216
  store float %220, float* %221, align 4, !tbaa !8
  %222 = load float, float* %140, align 4, !tbaa !8
  %223 = load float, float* %153, align 4, !tbaa !8
  %224 = fmul float %222, %223
  %225 = load float, float* %39, align 4, !tbaa !8
  %226 = add i64 %6, 88
  %227 = getelementptr inbounds float, float* %3, i64 %226
  %228 = load float, float* %227, align 4, !tbaa !8
  %229 = fmul float %225, %228
  %230 = fdiv float 1.000000e+00, %229, !fpmath !12
  %231 = fmul float %224, %230
  %232 = add i64 %6, 504
  %233 = getelementptr inbounds float, float* %1, i64 %232
  %234 = load float, float* %233, align 4, !tbaa !8
  %235 = tail call float @_Z4fminff(float %231, float 0x4415AF1D80000000) #2
  %236 = fmul float %234, %235
  %237 = getelementptr inbounds float, float* %2, i64 %232
  store float %236, float* %237, align 4, !tbaa !8
  %238 = load float, float* %14, align 4, !tbaa !8
  %239 = load float, float* %153, align 4, !tbaa !8
  %240 = fmul float %238, %239
  %241 = load float, float* %39, align 4, !tbaa !8
  %242 = load float, float* %21, align 4, !tbaa !8
  %243 = fmul float %241, %242
  %244 = load float, float* %107, align 4, !tbaa !8
  %245 = fmul float %243, %244
  %246 = fmul float %12, %245
  %247 = fdiv float 1.000000e+00, %246, !fpmath !12
  %248 = fmul float %240, %247
  %249 = add i64 %6, 512
  %250 = getelementptr inbounds float, float* %1, i64 %249
  %251 = load float, float* %250, align 4, !tbaa !8
  %252 = tail call float @_Z4fminff(float %248, float 0x4415AF1D80000000) #2
  %253 = fmul float %251, %252
  %254 = getelementptr inbounds float, float* %2, i64 %249
  store float %253, float* %254, align 4, !tbaa !8
  %255 = load float, float* %14, align 4, !tbaa !8
  %256 = load float, float* %153, align 4, !tbaa !8
  %257 = fmul float %255, %256
  %258 = load float, float* %75, align 4, !tbaa !8
  %259 = load float, float* %107, align 4, !tbaa !8
  %260 = fmul float %258, %259
  %261 = fdiv float 1.000000e+00, %260, !fpmath !12
  %262 = fmul float %257, %261
  %263 = add i64 %6, 520
  %264 = getelementptr inbounds float, float* %1, i64 %263
  %265 = load float, float* %264, align 4, !tbaa !8
  %266 = tail call float @_Z4fminff(float %262, float 0x4415AF1D80000000) #2
  %267 = fmul float %265, %266
  %268 = getelementptr inbounds float, float* %2, i64 %263
  store float %267, float* %268, align 4, !tbaa !8
  %269 = load float, float* %153, align 4, !tbaa !8
  %270 = load float, float* %17, align 4, !tbaa !8
  %271 = fdiv float 1.000000e+00, %270, !fpmath !12
  %272 = fmul float %269, %271
  %273 = add i64 %6, 528
  %274 = getelementptr inbounds float, float* %1, i64 %273
  %275 = load float, float* %274, align 4, !tbaa !8
  %276 = tail call float @_Z4fminff(float %272, float 0x4415AF1D80000000) #2
  %277 = fmul float %275, %276
  %278 = getelementptr inbounds float, float* %2, i64 %273
  store float %277, float* %278, align 4, !tbaa !8
  %279 = load float, float* %153, align 4, !tbaa !8
  %280 = load float, float* %17, align 4, !tbaa !8
  %281 = fdiv float 1.000000e+00, %280, !fpmath !12
  %282 = fmul float %279, %281
  %283 = add i64 %6, 536
  %284 = getelementptr inbounds float, float* %1, i64 %283
  %285 = load float, float* %284, align 4, !tbaa !8
  %286 = tail call float @_Z4fminff(float %282, float 0x4415AF1D80000000) #2
  %287 = fmul float %285, %286
  %288 = getelementptr inbounds float, float* %2, i64 %283
  store float %287, float* %288, align 4, !tbaa !8
  %289 = load float, float* %153, align 4, !tbaa !8
  %290 = load float, float* %17, align 4, !tbaa !8
  %291 = fdiv float 1.000000e+00, %290, !fpmath !12
  %292 = fmul float %289, %291
  %293 = add i64 %6, 544
  %294 = getelementptr inbounds float, float* %1, i64 %293
  %295 = load float, float* %294, align 4, !tbaa !8
  %296 = tail call float @_Z4fminff(float %292, float 0x4415AF1D80000000) #2
  %297 = fmul float %295, %296
  %298 = getelementptr inbounds float, float* %2, i64 %293
  store float %297, float* %298, align 4, !tbaa !8
  %299 = load float, float* %153, align 4, !tbaa !8
  %300 = load float, float* %43, align 4, !tbaa !8
  %301 = fmul float %299, %300
  %302 = load float, float* %107, align 4, !tbaa !8
  %303 = load float, float* %60, align 4, !tbaa !8
  %304 = fmul float %302, %303
  %305 = fdiv float 1.000000e+00, %304, !fpmath !12
  %306 = fmul float %301, %305
  %307 = add i64 %6, 552
  %308 = getelementptr inbounds float, float* %1, i64 %307
  %309 = load float, float* %308, align 4, !tbaa !8
  %310 = tail call float @_Z4fminff(float %306, float 0x4415AF1D80000000) #2
  %311 = fmul float %309, %310
  %312 = getelementptr inbounds float, float* %2, i64 %307
  store float %311, float* %312, align 4, !tbaa !8
  %313 = load float, float* %39, align 4, !tbaa !8
  %314 = load float, float* %60, align 4, !tbaa !8
  %315 = fmul float %313, %314
  %316 = fmul float %12, %315
  %317 = add i64 %6, 136
  %318 = getelementptr inbounds float, float* %3, i64 %317
  %319 = load float, float* %318, align 4, !tbaa !8
  %320 = fdiv float 1.000000e+00, %319, !fpmath !12
  %321 = fmul float %316, %320
  %322 = add i64 %6, 560
  %323 = getelementptr inbounds float, float* %1, i64 %322
  %324 = load float, float* %323, align 4, !tbaa !8
  %325 = tail call float @_Z4fminff(float %321, float 0x4415AF1D80000000) #2
  %326 = fmul float %324, %325
  %327 = getelementptr inbounds float, float* %2, i64 %322
  store float %326, float* %327, align 4, !tbaa !8
  %328 = load float, float* %39, align 4, !tbaa !8
  %329 = load float, float* %60, align 4, !tbaa !8
  %330 = fmul float %328, %329
  %331 = load float, float* %140, align 4, !tbaa !8
  %332 = load float, float* %24, align 4, !tbaa !8
  %333 = fmul float %331, %332
  %334 = fdiv float 1.000000e+00, %333, !fpmath !12
  %335 = fmul float %330, %334
  %336 = add i64 %6, 568
  %337 = getelementptr inbounds float, float* %1, i64 %336
  %338 = load float, float* %337, align 4, !tbaa !8
  %339 = tail call float @_Z4fminff(float %335, float 0x4415AF1D80000000) #2
  %340 = fmul float %338, %339
  %341 = getelementptr inbounds float, float* %2, i64 %336
  store float %340, float* %341, align 4, !tbaa !8
  %342 = load float, float* %179, align 4, !tbaa !8
  %343 = load float, float* %60, align 4, !tbaa !8
  %344 = fmul float %342, %343
  %345 = load float, float* %21, align 4, !tbaa !8
  %346 = load float, float* %24, align 4, !tbaa !8
  %347 = fmul float %345, %346
  %348 = fdiv float 1.000000e+00, %347, !fpmath !12
  %349 = fmul float %344, %348
  %350 = add i64 %6, 576
  %351 = getelementptr inbounds float, float* %1, i64 %350
  %352 = load float, float* %351, align 4, !tbaa !8
  %353 = tail call float @_Z4fminff(float %349, float 0x4415AF1D80000000) #2
  %354 = fmul float %352, %353
  %355 = getelementptr inbounds float, float* %2, i64 %350
  store float %354, float* %355, align 4, !tbaa !8
  %356 = load float, float* %21, align 4, !tbaa !8
  %357 = load float, float* %60, align 4, !tbaa !8
  %358 = fmul float %356, %357
  %359 = load float, float* %75, align 4, !tbaa !8
  %360 = load float, float* %24, align 4, !tbaa !8
  %361 = fmul float %359, %360
  %362 = fdiv float 1.000000e+00, %361, !fpmath !12
  %363 = fmul float %358, %362
  %364 = add i64 %6, 584
  %365 = getelementptr inbounds float, float* %1, i64 %364
  %366 = load float, float* %365, align 4, !tbaa !8
  %367 = tail call float @_Z4fminff(float %363, float 0x4415AF1D80000000) #2
  %368 = fmul float %366, %367
  %369 = getelementptr inbounds float, float* %2, i64 %364
  store float %368, float* %369, align 4, !tbaa !8
  %370 = load float, float* %14, align 4, !tbaa !8
  %371 = load float, float* %60, align 4, !tbaa !8
  %372 = fmul float %370, %371
  %373 = load float, float* %90, align 4, !tbaa !8
  %374 = load float, float* %24, align 4, !tbaa !8
  %375 = fmul float %373, %374
  %376 = fdiv float 1.000000e+00, %375, !fpmath !12
  %377 = fmul float %372, %376
  %378 = add i64 %6, 592
  %379 = getelementptr inbounds float, float* %1, i64 %378
  %380 = load float, float* %379, align 4, !tbaa !8
  %381 = tail call float @_Z4fminff(float %377, float 0x4415AF1D80000000) #2
  %382 = fmul float %380, %381
  %383 = getelementptr inbounds float, float* %2, i64 %378
  store float %382, float* %383, align 4, !tbaa !8
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @_Z13get_global_idj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare float @_Z4fminff(float, float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1, i32 0}
!3 = !{!"Apple LLVM version 9.1.0 (clang-902.0.39.1)"}
!4 = !{i32 1, i32 1, i32 1, i32 1, i32 0}
!5 = !{!"none", !"none", !"none", !"none", !"none"}
!6 = !{!"float*", !"float*", !"float*", !"float*", !"float"}
!7 = !{!"const", !"const", !"", !"const", !""}
!8 = !{!9, !9, i64 0}
!9 = !{!"float", !10, i64 0}
!10 = !{!"omnipotent char", !11, i64 0}
!11 = !{!"Simple C/C++ TBAA"}
!12 = !{float 2.500000e+00}
